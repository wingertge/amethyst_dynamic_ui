(function() {var implementors = {};
implementors["amethyst"] = [{"text":"impl Serialize for StdoutLog","synthetic":false,"types":[]},{"text":"impl Serialize for LoggerConfig","synthetic":false,"types":[]}];
implementors["amethyst_animation"] = [{"text":"impl Serialize for MaterialPrimitive","synthetic":false,"types":[]},{"text":"impl Serialize for MaterialChannel","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for AnimationPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, T&gt; Serialize for AnimationSetPrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;AnimationPrefab&lt;T&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for AnimationHierarchyPrefab&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, T&gt; Serialize for AnimatablePrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Hash + Eq + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;AnimationSetPrefab&lt;I, T&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Sampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: InterpolationPrimitive,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for RestState&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for JointPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SkinPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SkinnablePrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteRenderPrimitive","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteRenderChannel","synthetic":false,"types":[]},{"text":"impl Serialize for TransformChannel","synthetic":false,"types":[]},{"text":"impl Serialize for UiTransformChannel","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Serialize for SamplerPrimitive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RealField + SubsetOf&lt;f32&gt; + SupersetOf&lt;f32&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_assets"] = [{"text":"impl&lt;D:&nbsp;FormatRegisteredData&gt; Serialize for dyn SerializableFormat&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for RonFormat","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Prefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A, F&gt; Serialize for AssetPrefab&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Asset,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Format&lt;A::Data&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl Serialize for AudioPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for WavFormat","synthetic":false,"types":[]},{"text":"impl Serialize for OggFormat","synthetic":false,"types":[]},{"text":"impl Serialize for FlacFormat","synthetic":false,"types":[]},{"text":"impl Serialize for Mp3Format","synthetic":false,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl Serialize for FlyControlTag","synthetic":false,"types":[]},{"text":"impl Serialize for ControlTagPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for WindowFocus","synthetic":false,"types":[]},{"text":"impl Serialize for HideCursor","synthetic":false,"types":[]}];
implementors["amethyst_core"] = [{"text":"impl Serialize for FrameRateLimitStrategy","synthetic":false,"types":[]},{"text":"impl Serialize for FrameRateLimitConfig","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Plane&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RealField,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Ray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RealField,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Transform","synthetic":false,"types":[]},{"text":"impl Serialize for Axis2","synthetic":false,"types":[]},{"text":"impl Serialize for Axis3","synthetic":false,"types":[]},{"text":"impl Serialize for Named","synthetic":false,"types":[]}];
implementors["amethyst_dynamic_ui"] = [{"text":"impl Serialize for Padding","synthetic":false,"types":[]},{"text":"impl Serialize for LinearLayoutData","synthetic":false,"types":[]},{"text":"impl Serialize for FlowDirection","synthetic":false,"types":[]},{"text":"impl Serialize for Spacing","synthetic":false,"types":[]},{"text":"impl Serialize for ItemAlignment","synthetic":false,"types":[]},{"text":"impl Serialize for ExtraButtonData","synthetic":false,"types":[]},{"text":"impl Serialize for Tinted","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Serialize for DynamicUiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for SoundEvent","synthetic":false,"types":[]},{"text":"impl Serialize for SizeConstraints","synthetic":false,"types":[]},{"text":"impl Serialize for ModalData","synthetic":false,"types":[]},{"text":"impl Serialize for NoCustomElements","synthetic":false,"types":[]},{"text":"impl Serialize for ImageButtonData","synthetic":false,"types":[]},{"text":"impl Serialize for I18nData","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;ToLayoutElement&gt; Serialize for LayoutElement&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_input"] = [{"text":"impl Serialize for Axis","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Serialize for Bindings&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Button","synthetic":false,"types":[]},{"text":"impl Serialize for ControllerAxis","synthetic":false,"types":[]},{"text":"impl Serialize for ControllerButton","synthetic":false,"types":[]},{"text":"impl Serialize for ControllerEvent","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for InputEvent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for MouseAxis","synthetic":false,"types":[]},{"text":"impl Serialize for ScrollDirection","synthetic":false,"types":[]}];
implementors["amethyst_locale"] = [{"text":"impl Serialize for LocaleFormat","synthetic":false,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl Serialize for Camera","synthetic":false,"types":[]},{"text":"impl Serialize for CameraPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for ObjFormat","synthetic":false,"types":[]},{"text":"impl&lt;V&gt; Serialize for MeshPrefab&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for MaterialPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for ImageFormat","synthetic":false,"types":[]},{"text":"impl Serialize for TexturePrefab","synthetic":false,"types":[]},{"text":"impl Serialize for TextureGenerator","synthetic":false,"types":[]},{"text":"impl&lt;V&gt; Serialize for GraphicsPrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Light","synthetic":false,"types":[]},{"text":"impl Serialize for DirectionalLight","synthetic":false,"types":[]},{"text":"impl Serialize for PointLight","synthetic":false,"types":[]},{"text":"impl Serialize for SpotLight","synthetic":false,"types":[]},{"text":"impl Serialize for SunLight","synthetic":false,"types":[]},{"text":"impl Serialize for LightPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for TextureOffset","synthetic":false,"types":[]},{"text":"impl Serialize for AmbientColor","synthetic":false,"types":[]},{"text":"impl Serialize for Tint","synthetic":false,"types":[]},{"text":"impl&lt;V&gt; Serialize for ShapePrefab&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Shape","synthetic":false,"types":[]},{"text":"impl Serialize for JointTransformsPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteSheetPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteSheetReference","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteRenderPrefab","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteScenePrefab","synthetic":false,"types":[]},{"text":"impl Serialize for Sprite","synthetic":false,"types":[]},{"text":"impl Serialize for TextureCoordinates","synthetic":false,"types":[]},{"text":"impl Serialize for SpritePosition","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteList","synthetic":false,"types":[]},{"text":"impl Serialize for SpriteGrid","synthetic":false,"types":[]},{"text":"impl Serialize for Sprites","synthetic":false,"types":[]},{"text":"impl Serialize for Transparent","synthetic":false,"types":[]},{"text":"impl Serialize for MeshData","synthetic":false,"types":[]},{"text":"impl Serialize for TextureData","synthetic":false,"types":[]},{"text":"impl Serialize for BoundingSphere","synthetic":false,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl Serialize for Draggable","synthetic":false,"types":[]},{"text":"impl Serialize for Interactable","synthetic":false,"types":[]},{"text":"impl Serialize for TtfFormat","synthetic":false,"types":[]},{"text":"impl Serialize for ScaleMode","synthetic":false,"types":[]},{"text":"impl Serialize for Anchor","synthetic":false,"types":[]},{"text":"impl Serialize for Stretch","synthetic":false,"types":[]},{"text":"impl&lt;G&gt; Serialize for UiTransformData&lt;G&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for UiTextData","synthetic":false,"types":[]},{"text":"impl Serialize for UiImagePrefab","synthetic":false,"types":[]},{"text":"impl Serialize for UiImageLoadPrefab","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;WidgetId&gt; Serialize for UiButtonData&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C, W, G&gt; Serialize for UiWidget&lt;C, W, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ToNativeWidget&lt;W&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: WidgetId,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for NoCustomUi","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Serialize for UiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;G&gt; Serialize for Selectable&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Selected","synthetic":false,"types":[]},{"text":"impl Serialize for LineMode","synthetic":false,"types":[]},{"text":"impl Serialize for UiText","synthetic":false,"types":[]},{"text":"impl Serialize for UiTransform","synthetic":false,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl Serialize for AutoFov","synthetic":false,"types":[]},{"text":"impl Serialize for CameraOrthoWorldCoordinates","synthetic":false,"types":[]},{"text":"impl Serialize for CameraOrtho","synthetic":false,"types":[]},{"text":"impl Serialize for CameraNormalizeMode","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Serialize for Removal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Debug + Clone + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;V, R&gt; Serialize for BasicScenePrefab&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: PartialEq + Debug + Clone + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Tag&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for DestroyAtTime","synthetic":false,"types":[]},{"text":"impl Serialize for DestroyInTime","synthetic":false,"types":[]}];
implementors["amethyst_window"] = [{"text":"impl Serialize for DisplayConfig","synthetic":false,"types":[]},{"text":"impl Serialize for MonitorIdent","synthetic":false,"types":[]}];
implementors["erased_serde"] = [{"text":"impl&lt;'erased&gt; Serialize for dyn Serialize + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; Serialize for dyn Serialize + Send + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; Serialize for dyn Serialize + Sync + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; Serialize for dyn Serialize + Send + Sync + 'erased","synthetic":false,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Serialize for MemoryTypeId","synthetic":false,"types":[]},{"text":"impl Serialize for MemoryType","synthetic":false,"types":[]},{"text":"impl Serialize for MemoryProperties","synthetic":false,"types":[]},{"text":"impl Serialize for DeviceType","synthetic":false,"types":[]},{"text":"impl Serialize for AdapterInfo","synthetic":false,"types":[]},{"text":"impl Serialize for Usage","synthetic":false,"types":[]},{"text":"impl Serialize for Access","synthetic":false,"types":[]},{"text":"impl Serialize for ClearColor","synthetic":false,"types":[]},{"text":"impl Serialize for ClearDepthStencil","synthetic":false,"types":[]},{"text":"impl Serialize for ClearValue","synthetic":false,"types":[]},{"text":"impl Serialize for AttachmentClear","synthetic":false,"types":[]},{"text":"impl Serialize for ImageResolve","synthetic":false,"types":[]},{"text":"impl Serialize for ImageBlit","synthetic":false,"types":[]},{"text":"impl Serialize for BufferCopy","synthetic":false,"types":[]},{"text":"impl Serialize for ImageCopy","synthetic":false,"types":[]},{"text":"impl Serialize for BufferImageCopy","synthetic":false,"types":[]},{"text":"impl Serialize for WaitFor","synthetic":false,"types":[]},{"text":"impl Serialize for Aspects","synthetic":false,"types":[]},{"text":"impl Serialize for Component","synthetic":false,"types":[]},{"text":"impl Serialize for Swizzle","synthetic":false,"types":[]},{"text":"impl Serialize for Properties","synthetic":false,"types":[]},{"text":"impl Serialize for ImageFeature","synthetic":false,"types":[]},{"text":"impl Serialize for BufferFeature","synthetic":false,"types":[]},{"text":"impl Serialize for ChannelType","synthetic":false,"types":[]},{"text":"impl Serialize for SurfaceType","synthetic":false,"types":[]},{"text":"impl Serialize for BaseFormat","synthetic":false,"types":[]},{"text":"impl Serialize for Format","synthetic":false,"types":[]},{"text":"impl Serialize for Rg4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for R5g6b5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for B5g6r5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for R5g5b5a1Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for B5g5r5a1Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for A1r5g5b5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for R8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for R8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for R8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for R8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for R8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for R8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for R8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Bgr8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Bgra8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Abgr8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Uint","synthetic":false,"types":[]},{"text":"impl Serialize for A2r10g10b10Sint","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Uint","synthetic":false,"types":[]},{"text":"impl Serialize for A2b10g10r10Sint","synthetic":false,"types":[]},{"text":"impl Serialize for R16Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for R16Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for R16Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for R16Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for R16Uint","synthetic":false,"types":[]},{"text":"impl Serialize for R16Sint","synthetic":false,"types":[]},{"text":"impl Serialize for R16Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg16Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb16Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Uscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Sscaled","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba16Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for R32Uint","synthetic":false,"types":[]},{"text":"impl Serialize for R32Sint","synthetic":false,"types":[]},{"text":"impl Serialize for R32Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rg32Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg32Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg32Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb32Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb32Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb32Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba32Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba32Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba32Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for R64Uint","synthetic":false,"types":[]},{"text":"impl Serialize for R64Sint","synthetic":false,"types":[]},{"text":"impl Serialize for R64Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rg64Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg64Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rg64Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb64Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb64Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgb64Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba64Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba64Sint","synthetic":false,"types":[]},{"text":"impl Serialize for Rgba64Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for B10g11r11Ufloat","synthetic":false,"types":[]},{"text":"impl Serialize for E5b9g9r9Ufloat","synthetic":false,"types":[]},{"text":"impl Serialize for D16Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for X8D24Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for D32Sfloat","synthetic":false,"types":[]},{"text":"impl Serialize for S8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for D16UnormS8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for D24UnormS8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for D32SfloatS8Uint","synthetic":false,"types":[]},{"text":"impl Serialize for Bc1RgbUnorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc1RgbSrgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bc1RgbaUnorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc1RgbaSrgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bc2Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc2Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bc3Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc3Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Bc4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc4Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc5Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc6hUfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Bc6hSfloat","synthetic":false,"types":[]},{"text":"impl Serialize for Bc7Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Bc7Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8a1Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8a1Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8a8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Etc2R8g8b8a8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for EacR11Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for EacR11Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for EacR11g11Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for EacR11g11Snorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc4x4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc4x4Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc5x4Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc5x4Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc5x5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc5x5Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc6x5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc6x5Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc6x6Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc6x6Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x5Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x6Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x6Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc8x8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x5Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x5Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x6Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x6Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x8Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x8Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x10Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc10x10Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc12x10Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc12x10Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Astc12x12Unorm","synthetic":false,"types":[]},{"text":"impl Serialize for Astc12x12Srgb","synthetic":false,"types":[]},{"text":"impl Serialize for Extent","synthetic":false,"types":[]},{"text":"impl Serialize for Offset","synthetic":false,"types":[]},{"text":"impl Serialize for Tiling","synthetic":false,"types":[]},{"text":"impl Serialize for Filter","synthetic":false,"types":[]},{"text":"impl Serialize for Anisotropic","synthetic":false,"types":[]},{"text":"impl Serialize for CubeFace","synthetic":false,"types":[]},{"text":"impl Serialize for Kind","synthetic":false,"types":[]},{"text":"impl Serialize for ViewKind","synthetic":false,"types":[]},{"text":"impl Serialize for ViewCapabilities","synthetic":false,"types":[]},{"text":"impl Serialize for Usage","synthetic":false,"types":[]},{"text":"impl Serialize for WrapMode","synthetic":false,"types":[]},{"text":"impl Serialize for Lod","synthetic":false,"types":[]},{"text":"impl Serialize for PackedColor","synthetic":false,"types":[]},{"text":"impl Serialize for SamplerInfo","synthetic":false,"types":[]},{"text":"impl Serialize for Layout","synthetic":false,"types":[]},{"text":"impl Serialize for Access","synthetic":false,"types":[]},{"text":"impl Serialize for Subresource","synthetic":false,"types":[]},{"text":"impl Serialize for SubresourceLayers","synthetic":false,"types":[]},{"text":"impl Serialize for SubresourceRange","synthetic":false,"types":[]},{"text":"impl Serialize for FormatProperties","synthetic":false,"types":[]},{"text":"impl Serialize for SubresourceFootprint","synthetic":false,"types":[]},{"text":"impl Serialize for Properties","synthetic":false,"types":[]},{"text":"impl Serialize for Dependencies","synthetic":false,"types":[]},{"text":"impl Serialize for AttachmentLoadOp","synthetic":false,"types":[]},{"text":"impl Serialize for AttachmentStoreOp","synthetic":false,"types":[]},{"text":"impl Serialize for AttachmentOps","synthetic":false,"types":[]},{"text":"impl Serialize for Attachment","synthetic":false,"types":[]},{"text":"impl Serialize for SubpassRef","synthetic":false,"types":[]},{"text":"impl Serialize for SubpassDependency","synthetic":false,"types":[]},{"text":"impl Serialize for CommandPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl Serialize for DescriptorType","synthetic":false,"types":[]},{"text":"impl Serialize for DescriptorSetLayoutBinding","synthetic":false,"types":[]},{"text":"impl Serialize for DescriptorRangeDesc","synthetic":false,"types":[]},{"text":"impl Serialize for Rect","synthetic":false,"types":[]},{"text":"impl Serialize for ClearRect","synthetic":false,"types":[]},{"text":"impl Serialize for Viewport","synthetic":false,"types":[]},{"text":"impl Serialize for BakedStates","synthetic":false,"types":[]},{"text":"impl Serialize for PolygonMode","synthetic":false,"types":[]},{"text":"impl Serialize for FrontFace","synthetic":false,"types":[]},{"text":"impl Serialize for DepthBias","synthetic":false,"types":[]},{"text":"impl Serialize for Rasterizer","synthetic":false,"types":[]},{"text":"impl Serialize for BlendDesc","synthetic":false,"types":[]},{"text":"impl Serialize for LogicOp","synthetic":false,"types":[]},{"text":"impl Serialize for VertexInputRate","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Serialize for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for VertexBufferDesc","synthetic":false,"types":[]},{"text":"impl Serialize for AttributeDesc","synthetic":false,"types":[]},{"text":"impl Serialize for PrimitiveRestart","synthetic":false,"types":[]},{"text":"impl Serialize for InputAssemblerDesc","synthetic":false,"types":[]},{"text":"impl Serialize for Comparison","synthetic":false,"types":[]},{"text":"impl Serialize for ColorMask","synthetic":false,"types":[]},{"text":"impl Serialize for Factor","synthetic":false,"types":[]},{"text":"impl Serialize for BlendOp","synthetic":false,"types":[]},{"text":"impl Serialize for BlendState","synthetic":false,"types":[]},{"text":"impl Serialize for ColorBlendDesc","synthetic":false,"types":[]},{"text":"impl Serialize for DepthTest","synthetic":false,"types":[]},{"text":"impl Serialize for StencilOp","synthetic":false,"types":[]},{"text":"impl Serialize for StencilFace","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for StencilTest","synthetic":false,"types":[]},{"text":"impl Serialize for DepthStencilDesc","synthetic":false,"types":[]},{"text":"impl Serialize for Face","synthetic":false,"types":[]},{"text":"impl Serialize for PipelineStage","synthetic":false,"types":[]},{"text":"impl Serialize for ShaderStageFlags","synthetic":false,"types":[]},{"text":"impl Serialize for Stage","synthetic":false,"types":[]},{"text":"impl Serialize for PipelineCreationFlags","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for ControlFlags","synthetic":false,"types":[]},{"text":"impl Serialize for ResultFlags","synthetic":false,"types":[]},{"text":"impl Serialize for PipelineStatistic","synthetic":false,"types":[]},{"text":"impl Serialize for QueueFamilyId","synthetic":false,"types":[]},{"text":"impl Serialize for QueueType","synthetic":false,"types":[]},{"text":"impl Serialize for Extent2D","synthetic":false,"types":[]},{"text":"impl Serialize for SurfaceCapabilities","synthetic":false,"types":[]},{"text":"impl Serialize for CompositeAlpha","synthetic":false,"types":[]},{"text":"impl Serialize for Features","synthetic":false,"types":[]},{"text":"impl Serialize for Limits","synthetic":false,"types":[]},{"text":"impl Serialize for Primitive","synthetic":false,"types":[]},{"text":"impl Serialize for IndexType","synthetic":false,"types":[]},{"text":"impl Serialize for SubmissionError","synthetic":false,"types":[]}];
implementors["gltf_json"] = [{"text":"impl Serialize for Indices","synthetic":false,"types":[]},{"text":"impl Serialize for Sparse","synthetic":false,"types":[]},{"text":"impl Serialize for Values","synthetic":false,"types":[]},{"text":"impl Serialize for Accessor","synthetic":false,"types":[]},{"text":"impl Serialize for IndexComponentType","synthetic":false,"types":[]},{"text":"impl Serialize for GenericComponentType","synthetic":false,"types":[]},{"text":"impl Serialize for Type","synthetic":false,"types":[]},{"text":"impl Serialize for ComponentType","synthetic":false,"types":[]},{"text":"impl Serialize for Animation","synthetic":false,"types":[]},{"text":"impl Serialize for Channel","synthetic":false,"types":[]},{"text":"impl Serialize for Target","synthetic":false,"types":[]},{"text":"impl Serialize for Sampler","synthetic":false,"types":[]},{"text":"impl Serialize for Interpolation","synthetic":false,"types":[]},{"text":"impl Serialize for Property","synthetic":false,"types":[]},{"text":"impl Serialize for Asset","synthetic":false,"types":[]},{"text":"impl Serialize for Target","synthetic":false,"types":[]},{"text":"impl Serialize for Buffer","synthetic":false,"types":[]},{"text":"impl Serialize for View","synthetic":false,"types":[]},{"text":"impl Serialize for Camera","synthetic":false,"types":[]},{"text":"impl Serialize for Orthographic","synthetic":false,"types":[]},{"text":"impl Serialize for Perspective","synthetic":false,"types":[]},{"text":"impl Serialize for Type","synthetic":false,"types":[]},{"text":"impl Serialize for Indices","synthetic":false,"types":[]},{"text":"impl Serialize for Sparse","synthetic":false,"types":[]},{"text":"impl Serialize for Values","synthetic":false,"types":[]},{"text":"impl Serialize for Accessor","synthetic":false,"types":[]},{"text":"impl Serialize for Animation","synthetic":false,"types":[]},{"text":"impl Serialize for Channel","synthetic":false,"types":[]},{"text":"impl Serialize for Target","synthetic":false,"types":[]},{"text":"impl Serialize for Sampler","synthetic":false,"types":[]},{"text":"impl Serialize for Asset","synthetic":false,"types":[]},{"text":"impl Serialize for Buffer","synthetic":false,"types":[]},{"text":"impl Serialize for View","synthetic":false,"types":[]},{"text":"impl Serialize for Camera","synthetic":false,"types":[]},{"text":"impl Serialize for Orthographic","synthetic":false,"types":[]},{"text":"impl Serialize for Perspective","synthetic":false,"types":[]},{"text":"impl Serialize for Image","synthetic":false,"types":[]},{"text":"impl Serialize for Material","synthetic":false,"types":[]},{"text":"impl Serialize for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Serialize for NormalTexture","synthetic":false,"types":[]},{"text":"impl Serialize for OcclusionTexture","synthetic":false,"types":[]},{"text":"impl Serialize for Mesh","synthetic":false,"types":[]},{"text":"impl Serialize for Primitive","synthetic":false,"types":[]},{"text":"impl Serialize for Root","synthetic":false,"types":[]},{"text":"impl Serialize for KhrLightsPunctual","synthetic":false,"types":[]},{"text":"impl Serialize for Node","synthetic":false,"types":[]},{"text":"impl Serialize for KhrLightsPunctual","synthetic":false,"types":[]},{"text":"impl Serialize for Light","synthetic":false,"types":[]},{"text":"impl Serialize for Spot","synthetic":false,"types":[]},{"text":"impl Serialize for Type","synthetic":false,"types":[]},{"text":"impl Serialize for Scene","synthetic":false,"types":[]},{"text":"impl Serialize for Skin","synthetic":false,"types":[]},{"text":"impl Serialize for Sampler","synthetic":false,"types":[]},{"text":"impl Serialize for Texture","synthetic":false,"types":[]},{"text":"impl Serialize for Info","synthetic":false,"types":[]},{"text":"impl Serialize for Void","synthetic":false,"types":[]},{"text":"impl Serialize for Image","synthetic":false,"types":[]},{"text":"impl Serialize for MimeType","synthetic":false,"types":[]},{"text":"impl Serialize for AlphaMode","synthetic":false,"types":[]},{"text":"impl Serialize for Material","synthetic":false,"types":[]},{"text":"impl Serialize for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Serialize for NormalTexture","synthetic":false,"types":[]},{"text":"impl Serialize for OcclusionTexture","synthetic":false,"types":[]},{"text":"impl Serialize for AlphaCutoff","synthetic":false,"types":[]},{"text":"impl Serialize for EmissiveFactor","synthetic":false,"types":[]},{"text":"impl Serialize for PbrBaseColorFactor","synthetic":false,"types":[]},{"text":"impl Serialize for StrengthFactor","synthetic":false,"types":[]},{"text":"impl Serialize for Mesh","synthetic":false,"types":[]},{"text":"impl Serialize for Primitive","synthetic":false,"types":[]},{"text":"impl Serialize for MorphTarget","synthetic":false,"types":[]},{"text":"impl Serialize for Mode","synthetic":false,"types":[]},{"text":"impl Serialize for Semantic","synthetic":false,"types":[]},{"text":"impl Serialize for Root","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Index&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Node","synthetic":false,"types":[]},{"text":"impl Serialize for Scene","synthetic":false,"types":[]},{"text":"impl Serialize for UnitQuaternion","synthetic":false,"types":[]},{"text":"impl Serialize for Skin","synthetic":false,"types":[]},{"text":"impl Serialize for Sampler","synthetic":false,"types":[]},{"text":"impl Serialize for Texture","synthetic":false,"types":[]},{"text":"impl Serialize for Info","synthetic":false,"types":[]},{"text":"impl Serialize for MinFilter","synthetic":false,"types":[]},{"text":"impl Serialize for MagFilter","synthetic":false,"types":[]},{"text":"impl Serialize for WrappingMode","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Serialize&gt; Serialize for Checked&lt;T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Serialize for Level","synthetic":false,"types":[]},{"text":"impl Serialize for LevelFilter","synthetic":false,"types":[]}];
implementors["minterpolate"] = [{"text":"impl&lt;T&gt; Serialize for InterpolationFunction&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: InterpolationPrimitive,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["nalgebra"] = [{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for X&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for XY&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for XYZ&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for XYZW&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for XYZWA&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for XYZWAB&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for IJKW&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M2x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M2x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M2x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M2x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M2x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M3x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M3x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M3x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M3x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M3x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M4x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M4x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M4x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M4x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M4x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M5x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M5x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M5x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M5x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M5x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M6x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M6x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M6x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M6x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar&gt; Serialize for M6x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Dynamic","synthetic":false,"types":[]},{"text":"impl Serialize for U1","synthetic":false,"types":[]},{"text":"impl Serialize for U0","synthetic":false,"types":[]},{"text":"impl Serialize for U2","synthetic":false,"types":[]},{"text":"impl Serialize for U3","synthetic":false,"types":[]},{"text":"impl Serialize for U4","synthetic":false,"types":[]},{"text":"impl Serialize for U5","synthetic":false,"types":[]},{"text":"impl Serialize for U6","synthetic":false,"types":[]},{"text":"impl Serialize for U7","synthetic":false,"types":[]},{"text":"impl Serialize for U8","synthetic":false,"types":[]},{"text":"impl Serialize for U9","synthetic":false,"types":[]},{"text":"impl Serialize for U10","synthetic":false,"types":[]},{"text":"impl Serialize for U11","synthetic":false,"types":[]},{"text":"impl Serialize for U12","synthetic":false,"types":[]},{"text":"impl Serialize for U13","synthetic":false,"types":[]},{"text":"impl Serialize for U14","synthetic":false,"types":[]},{"text":"impl Serialize for U15","synthetic":false,"types":[]},{"text":"impl Serialize for U16","synthetic":false,"types":[]},{"text":"impl Serialize for U17","synthetic":false,"types":[]},{"text":"impl Serialize for U18","synthetic":false,"types":[]},{"text":"impl Serialize for U19","synthetic":false,"types":[]},{"text":"impl Serialize for U20","synthetic":false,"types":[]},{"text":"impl Serialize for U21","synthetic":false,"types":[]},{"text":"impl Serialize for U22","synthetic":false,"types":[]},{"text":"impl Serialize for U23","synthetic":false,"types":[]},{"text":"impl Serialize for U24","synthetic":false,"types":[]},{"text":"impl Serialize for U25","synthetic":false,"types":[]},{"text":"impl Serialize for U26","synthetic":false,"types":[]},{"text":"impl Serialize for U27","synthetic":false,"types":[]},{"text":"impl Serialize for U28","synthetic":false,"types":[]},{"text":"impl Serialize for U29","synthetic":false,"types":[]},{"text":"impl Serialize for U30","synthetic":false,"types":[]},{"text":"impl Serialize for U31","synthetic":false,"types":[]},{"text":"impl Serialize for U32","synthetic":false,"types":[]},{"text":"impl Serialize for U33","synthetic":false,"types":[]},{"text":"impl Serialize for U34","synthetic":false,"types":[]},{"text":"impl Serialize for U35","synthetic":false,"types":[]},{"text":"impl Serialize for U36","synthetic":false,"types":[]},{"text":"impl Serialize for U37","synthetic":false,"types":[]},{"text":"impl Serialize for U38","synthetic":false,"types":[]},{"text":"impl Serialize for U39","synthetic":false,"types":[]},{"text":"impl Serialize for U40","synthetic":false,"types":[]},{"text":"impl Serialize for U41","synthetic":false,"types":[]},{"text":"impl Serialize for U42","synthetic":false,"types":[]},{"text":"impl Serialize for U43","synthetic":false,"types":[]},{"text":"impl Serialize for U44","synthetic":false,"types":[]},{"text":"impl Serialize for U45","synthetic":false,"types":[]},{"text":"impl Serialize for U46","synthetic":false,"types":[]},{"text":"impl Serialize for U47","synthetic":false,"types":[]},{"text":"impl Serialize for U48","synthetic":false,"types":[]},{"text":"impl Serialize for U49","synthetic":false,"types":[]},{"text":"impl Serialize for U50","synthetic":false,"types":[]},{"text":"impl Serialize for U51","synthetic":false,"types":[]},{"text":"impl Serialize for U52","synthetic":false,"types":[]},{"text":"impl Serialize for U53","synthetic":false,"types":[]},{"text":"impl Serialize for U54","synthetic":false,"types":[]},{"text":"impl Serialize for U55","synthetic":false,"types":[]},{"text":"impl Serialize for U56","synthetic":false,"types":[]},{"text":"impl Serialize for U57","synthetic":false,"types":[]},{"text":"impl Serialize for U58","synthetic":false,"types":[]},{"text":"impl Serialize for U59","synthetic":false,"types":[]},{"text":"impl Serialize for U60","synthetic":false,"types":[]},{"text":"impl Serialize for U61","synthetic":false,"types":[]},{"text":"impl Serialize for U62","synthetic":false,"types":[]},{"text":"impl Serialize for U63","synthetic":false,"types":[]},{"text":"impl Serialize for U64","synthetic":false,"types":[]},{"text":"impl Serialize for U65","synthetic":false,"types":[]},{"text":"impl Serialize for U66","synthetic":false,"types":[]},{"text":"impl Serialize for U67","synthetic":false,"types":[]},{"text":"impl Serialize for U68","synthetic":false,"types":[]},{"text":"impl Serialize for U69","synthetic":false,"types":[]},{"text":"impl Serialize for U70","synthetic":false,"types":[]},{"text":"impl Serialize for U71","synthetic":false,"types":[]},{"text":"impl Serialize for U72","synthetic":false,"types":[]},{"text":"impl Serialize for U73","synthetic":false,"types":[]},{"text":"impl Serialize for U74","synthetic":false,"types":[]},{"text":"impl Serialize for U75","synthetic":false,"types":[]},{"text":"impl Serialize for U76","synthetic":false,"types":[]},{"text":"impl Serialize for U77","synthetic":false,"types":[]},{"text":"impl Serialize for U78","synthetic":false,"types":[]},{"text":"impl Serialize for U79","synthetic":false,"types":[]},{"text":"impl Serialize for U80","synthetic":false,"types":[]},{"text":"impl Serialize for U81","synthetic":false,"types":[]},{"text":"impl Serialize for U82","synthetic":false,"types":[]},{"text":"impl Serialize for U83","synthetic":false,"types":[]},{"text":"impl Serialize for U84","synthetic":false,"types":[]},{"text":"impl Serialize for U85","synthetic":false,"types":[]},{"text":"impl Serialize for U86","synthetic":false,"types":[]},{"text":"impl Serialize for U87","synthetic":false,"types":[]},{"text":"impl Serialize for U88","synthetic":false,"types":[]},{"text":"impl Serialize for U89","synthetic":false,"types":[]},{"text":"impl Serialize for U90","synthetic":false,"types":[]},{"text":"impl Serialize for U91","synthetic":false,"types":[]},{"text":"impl Serialize for U92","synthetic":false,"types":[]},{"text":"impl Serialize for U93","synthetic":false,"types":[]},{"text":"impl Serialize for U94","synthetic":false,"types":[]},{"text":"impl Serialize for U95","synthetic":false,"types":[]},{"text":"impl Serialize for U96","synthetic":false,"types":[]},{"text":"impl Serialize for U97","synthetic":false,"types":[]},{"text":"impl Serialize for U98","synthetic":false,"types":[]},{"text":"impl Serialize for U99","synthetic":false,"types":[]},{"text":"impl Serialize for U100","synthetic":false,"types":[]},{"text":"impl Serialize for U101","synthetic":false,"types":[]},{"text":"impl Serialize for U102","synthetic":false,"types":[]},{"text":"impl Serialize for U103","synthetic":false,"types":[]},{"text":"impl Serialize for U104","synthetic":false,"types":[]},{"text":"impl Serialize for U105","synthetic":false,"types":[]},{"text":"impl Serialize for U106","synthetic":false,"types":[]},{"text":"impl Serialize for U107","synthetic":false,"types":[]},{"text":"impl Serialize for U108","synthetic":false,"types":[]},{"text":"impl Serialize for U109","synthetic":false,"types":[]},{"text":"impl Serialize for U110","synthetic":false,"types":[]},{"text":"impl Serialize for U111","synthetic":false,"types":[]},{"text":"impl Serialize for U112","synthetic":false,"types":[]},{"text":"impl Serialize for U113","synthetic":false,"types":[]},{"text":"impl Serialize for U114","synthetic":false,"types":[]},{"text":"impl Serialize for U115","synthetic":false,"types":[]},{"text":"impl Serialize for U116","synthetic":false,"types":[]},{"text":"impl Serialize for U117","synthetic":false,"types":[]},{"text":"impl Serialize for U118","synthetic":false,"types":[]},{"text":"impl Serialize for U119","synthetic":false,"types":[]},{"text":"impl Serialize for U120","synthetic":false,"types":[]},{"text":"impl Serialize for U121","synthetic":false,"types":[]},{"text":"impl Serialize for U122","synthetic":false,"types":[]},{"text":"impl Serialize for U123","synthetic":false,"types":[]},{"text":"impl Serialize for U124","synthetic":false,"types":[]},{"text":"impl Serialize for U125","synthetic":false,"types":[]},{"text":"impl Serialize for U126","synthetic":false,"types":[]},{"text":"impl Serialize for U127","synthetic":false,"types":[]},{"text":"impl&lt;N, R, C, S&gt; Serialize for Matrix&lt;N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Dim,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Dim,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N, R, C&gt; Serialize for ArrayStorage&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar + Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: DimName,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: DimName,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Value: Mul&lt;C::Value&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prod&lt;R::Value, C::Value&gt;: ArrayLength&lt;N&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N, R:&nbsp;Dim, C:&nbsp;Dim&gt; Serialize for VecStorage&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Serialize&gt; Serialize for Unit&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar, D:&nbsp;DimName&gt; Serialize for Point&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;DefaultAllocator as Allocator&lt;N, D&gt;&gt;::Buffer: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar, D:&nbsp;DimName&gt; Serialize for Rotation&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, D, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField&gt; Serialize for Quaternion&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, U4&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar, D:&nbsp;DimName&gt; Serialize for Translation&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimName, R&gt; Serialize for Isometry&lt;N, D, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimName, R&gt; Serialize for Similarity&lt;N, D, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimNameAdd&lt;U1&gt;, C:&nbsp;TCategory&gt; Serialize for Transform&lt;N, D, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, DimNameSum&lt;D, U1&gt;, DimNameSum&lt;D, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, DimNameSum&lt;D, U1&gt;, DimNameSum&lt;D, U1&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField + Serialize&gt; Serialize for Orthographic3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField + Serialize&gt; Serialize for Perspective3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, R:&nbsp;DimMin&lt;C&gt;, C:&nbsp;Dim&gt; Serialize for Bidiagonal&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DimMinimum&lt;R, C&gt;: DimSub&lt;U1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N, DimDiff&lt;DimMinimum&lt;R, C&gt;, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DimMinimum&lt;R, C&gt;: DimSub&lt;U1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N, DimDiff&lt;DimMinimum&lt;R, C&gt;, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, R, C&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N, DimMinimum&lt;R, C&gt;&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N, DimDiff&lt;DimMinimum&lt;R, C&gt;, U1&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, D:&nbsp;Dim&gt; Serialize for Cholesky&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixN&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, R:&nbsp;DimMin&lt;C&gt;, C:&nbsp;Dim&gt; Serialize for FullPivLU&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, R, C&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;PermutationSequence&lt;DimMinimum&lt;R, C&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, D:&nbsp;DimSub&lt;U1&gt;&gt; Serialize for Hessenberg&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixN&lt;N, D&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N, DimDiff&lt;D, U1&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, R:&nbsp;DimMin&lt;C&gt;, C:&nbsp;Dim&gt; Serialize for LU&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, R, C&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;PermutationSequence&lt;DimMinimum&lt;R, C&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Dim&gt; Serialize for PermutationSequence&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;(usize, usize), D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;(usize, usize), D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;(usize, usize), D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, R:&nbsp;DimMin&lt;C&gt;, C:&nbsp;Dim&gt; Serialize for QR&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, R, C&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N, DimMinimum&lt;R, C&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, D:&nbsp;Dim&gt; Serialize for Schur&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixN&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, R:&nbsp;DimMin&lt;C&gt;, C:&nbsp;Dim&gt; Serialize for SVD&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, DimMinimum&lt;R, C&gt;, C&gt; + Allocator&lt;N, R, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N::RealField, DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N::RealField, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;, C&gt; + Allocator&lt;N, R, DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, R, DimMinimum&lt;R, C&gt;&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixMN&lt;N, DimMinimum&lt;R, C&gt;, C&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N::RealField, DimMinimum&lt;R, C&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, D:&nbsp;Dim&gt; Serialize for SymmetricEigen&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N::RealField, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N::RealField, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N::RealField, D&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixN&lt;N, D&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;ComplexField, D:&nbsp;DimSub&lt;U1&gt;&gt; Serialize for SymmetricTridiagonal&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;MatrixN&lt;N, D&gt;: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VectorN&lt;N, DimDiff&lt;D, U1&gt;&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Serialize for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["palette"] = [{"text":"impl&lt;C, T:&nbsp;Float&gt; Serialize for PreAlpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C, T&gt; Serialize for Alpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Serialize for Hsl&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Serialize for Hsv&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Serialize for Hwb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Serialize for Lab&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Serialize for Lch&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Serialize for Luma&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: LumaStandard,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;RgbStandard, T:&nbsp;Component&gt; Serialize for Rgb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Serialize for Xyz&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Serialize for Yxy&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float&gt; Serialize for LabHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float&gt; Serialize for RgbHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;D, H, Q&gt; Serialize for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for OneGraphicsQueue","synthetic":false,"types":[]},{"text":"impl Serialize for SavedQueueConfig","synthetic":false,"types":[]},{"text":"impl Serialize for BasicHeapsConfigure","synthetic":false,"types":[]},{"text":"impl Serialize for SavedHeapsConfig","synthetic":false,"types":[]},{"text":"impl Serialize for BasicDevicesConfigure","synthetic":false,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl Serialize for DynamicConfig","synthetic":false,"types":[]},{"text":"impl Serialize for LinearConfig","synthetic":false,"types":[]},{"text":"impl Serialize for HeapsConfig","synthetic":false,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl&lt;'a&gt; Serialize for MeshBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl Serialize for SpirvShader","synthetic":false,"types":[]},{"text":"impl Serialize for ShaderSetBuilder","synthetic":false,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl Serialize for Repr","synthetic":false,"types":[]},{"text":"impl Serialize for TextureKind","synthetic":false,"types":[]},{"text":"impl Serialize for ImageTextureConfig","synthetic":false,"types":[]},{"text":"impl Serialize for MipLevels","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Serialize for TextureBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["rendy_util"] = [{"text":"impl Serialize for Position","synthetic":false,"types":[]},{"text":"impl Serialize for Color","synthetic":false,"types":[]},{"text":"impl Serialize for Normal","synthetic":false,"types":[]},{"text":"impl Serialize for Tangent","synthetic":false,"types":[]},{"text":"impl Serialize for TexCoord","synthetic":false,"types":[]},{"text":"impl Serialize for VertexFormat","synthetic":false,"types":[]},{"text":"impl Serialize for Attribute","synthetic":false,"types":[]},{"text":"impl Serialize for PosColor","synthetic":false,"types":[]},{"text":"impl Serialize for PosNorm","synthetic":false,"types":[]},{"text":"impl Serialize for PosColorNorm","synthetic":false,"types":[]},{"text":"impl Serialize for PosTex","synthetic":false,"types":[]},{"text":"impl Serialize for PosNormTex","synthetic":false,"types":[]},{"text":"impl Serialize for PosNormTangTex","synthetic":false,"types":[]}];
implementors["ron"] = [{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for PrettyConfig","synthetic":false,"types":[]},{"text":"impl Serialize for Map","synthetic":false,"types":[]},{"text":"impl Serialize for Extensions","synthetic":false,"types":[]}];
implementors["serde_bytes"] = [{"text":"impl Serialize for Bytes","synthetic":false,"types":[]},{"text":"impl Serialize for ByteBuf","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]},{"text":"impl Serialize for RawValue","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Serialize for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Datetime","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Serialize&gt; Serialize for Spanned&lt;T&gt;","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Serialize for LogicalPosition","synthetic":false,"types":[]},{"text":"impl Serialize for PhysicalPosition","synthetic":false,"types":[]},{"text":"impl Serialize for LogicalSize","synthetic":false,"types":[]},{"text":"impl Serialize for PhysicalSize","synthetic":false,"types":[]},{"text":"impl Serialize for KeyboardInput","synthetic":false,"types":[]},{"text":"impl Serialize for TouchPhase","synthetic":false,"types":[]},{"text":"impl Serialize for ElementState","synthetic":false,"types":[]},{"text":"impl Serialize for MouseButton","synthetic":false,"types":[]},{"text":"impl Serialize for MouseScrollDelta","synthetic":false,"types":[]},{"text":"impl Serialize for VirtualKeyCode","synthetic":false,"types":[]},{"text":"impl Serialize for ModifiersState","synthetic":false,"types":[]},{"text":"impl Serialize for WindowType","synthetic":false,"types":[]},{"text":"impl Serialize for ControlFlow","synthetic":false,"types":[]},{"text":"impl Serialize for MouseCursor","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()