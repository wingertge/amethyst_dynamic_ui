(function() {var implementors = {};
implementors["amethyst_animation"] = [{"text":"impl&lt;'a, 'b, 'c&gt; SystemBundle&lt;'a, 'b&gt; for VertexSkinningBundle&lt;'c&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b, 'c, T&gt; SystemBundle&lt;'a, 'b&gt; for SamplingBundle&lt;'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Component,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b, 'c, I, T&gt; SystemBundle&lt;'a, 'b&gt; for AnimationBundle&lt;'c, I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PartialEq + Eq + Hash + Copy + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Component + Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_assets"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for HotReloadBundle","synthetic":false,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for AudioBundle","synthetic":false,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl&lt;'a, 'b, T:&nbsp;BindingTypes&gt; SystemBundle&lt;'a, 'b&gt; for FlyControlBundle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b, T:&nbsp;BindingTypes&gt; SystemBundle&lt;'a, 'b&gt; for ArcBallControlBundle&lt;T&gt;","synthetic":false,"types":[]}];
implementors["amethyst_core"] = [];
implementors["amethyst_dynamic_ui"] = [{"text":"impl&lt;'a, 'b, C:&nbsp;ToLayoutElement&gt; SystemBundle&lt;'a, 'b&gt; for DynamicUiBundle&lt;C&gt;","synthetic":false,"types":[]}];
implementors["amethyst_fmod"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for FmodBundle","synthetic":false,"types":[]}];
implementors["amethyst_input"] = [{"text":"impl&lt;'a, 'b, T:&nbsp;BindingTypes&gt; SystemBundle&lt;'a, 'b&gt; for InputBundle&lt;T&gt;","synthetic":false,"types":[]}];
implementors["amethyst_network"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for LaminarNetworkBundle","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for TcpNetworkBundle","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for UdpNetworkBundle","synthetic":false,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl&lt;'a, 'b, B:&nbsp;Backend&gt; SystemBundle&lt;'a, 'b&gt; for RenderingBundle&lt;B&gt;","synthetic":false,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl&lt;'a, 'b, T, C, W, G&gt; SystemBundle&lt;'a, 'b&gt; for UiBundle&lt;T, C, W, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ToNativeWidget,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: WidgetId,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send + Sync + PartialEq + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for FpsCounterBundle","synthetic":false,"types":[]}];
implementors["amethyst_window"] = [{"text":"impl&lt;'a, 'b&gt; SystemBundle&lt;'a, 'b&gt; for WindowBundle","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()