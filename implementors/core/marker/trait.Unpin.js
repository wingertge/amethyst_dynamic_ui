(function() {var implementors = {};
implementors["addr2line"] = [{"text":"impl&lt;R&gt; Unpin for Context&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Unpin for FrameIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Unpin for Frame&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for FunctionName&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Location&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["adler"] = [{"text":"impl Unpin for Adler32","synthetic":true,"types":[]}];
implementors["adler32"] = [{"text":"impl Unpin for RollingAdler32","synthetic":true,"types":[]}];
implementors["ahash"] = [{"text":"impl Unpin for AHasher","synthetic":true,"types":[]},{"text":"impl Unpin for RandomState","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Unpin for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindIter&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Unpin for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Unpin for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Searcher","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]}];
implementors["alga"] = [{"text":"impl&lt;O&gt; Unpin for Id&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Additive","synthetic":true,"types":[]},{"text":"impl Unpin for Multiplicative","synthetic":true,"types":[]}];
implementors["alsa_sys"] = [{"text":"impl Unpin for snd_dlsym_link","synthetic":true,"types":[]},{"text":"impl Unpin for snd_devname_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_channel_area_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_sync_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_chmap_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_chmap_query_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_scope_ops_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_read_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_tread_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_aes_iec958_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_mixer_selem_regopt","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_addr_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_connect_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_real_time_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_timestamp_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_note_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_ctrl_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_raw8_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_raw32_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_ext_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_result_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_queue_skew_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_ev_queue_control_t","synthetic":true,"types":[]},{"text":"impl Unpin for Union_Unnamed9","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for Union_Unnamed10","synthetic":true,"types":[]},{"text":"impl&lt;Storage, Align&gt; Unpin for __BindgenBitfieldUnit&lt;Storage, Align&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Align: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Storage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for _snd_pcm_audio_tstamp_config","synthetic":true,"types":[]},{"text":"impl Unpin for _snd_pcm_audio_tstamp_report","synthetic":true,"types":[]},{"text":"impl Unpin for snd_async_handler_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_shm_area","synthetic":true,"types":[]},{"text":"impl Unpin for snd_input_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_output_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_config_t","synthetic":true,"types":[]},{"text":"impl Unpin for Struct__snd_config_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for snd_config_update_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_hw_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_sw_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_access_mask_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_format_mask_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_subformat_mask_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_scope_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_pcm_hook_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_rawmidi_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_rawmidi_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_rawmidi_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_rawmidi_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_ginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_gparams_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_gstatus_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_query_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_timer_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hwdep_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hwdep_dsp_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hwdep_dsp_image_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hwdep_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_card_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_elem_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_elem_list_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_elem_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_elem_value_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_ctl_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_sctl_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hctl_elem_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_hctl_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_mixer_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_mixer_class_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_mixer_elem_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_mixer_selem_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_system_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_client_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_client_pool_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_port_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_port_subscribe_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_query_subscribe_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_queue_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_queue_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_queue_tempo_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_queue_timer_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_seq_remove_events_t","synthetic":true,"types":[]},{"text":"impl Unpin for snd_midi_event_t","synthetic":true,"types":[]}];
implementors["amethyst"] = [{"text":"impl&lt;S, T, E, R&gt; Unpin for ApplicationBuilder&lt;S, T, E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, E, R&gt; Unpin for CoreApplication&lt;'a, T, E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CallbackQueue","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for GameData&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for GameDataBuilder&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Logger","synthetic":true,"types":[]},{"text":"impl Unpin for LoggerConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for StateData&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, E&gt; Unpin for StateMachine&lt;'a, T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StateEventReader&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StdoutLog","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Trans&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StateEvent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["amethyst_animation"] = [{"text":"impl&lt;'a, I, T&gt; Unpin for AnimationBundle&lt;'a, I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for SamplingBundle&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VertexSkinningBundle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for AnimatablePrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AnimationHierarchyPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AnimationPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for AnimationSetPrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Animation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AnimationControl&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for AnimationControlSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AnimationHierarchy&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for AnimationSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RestState&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SamplerControl&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SamplerControlSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Joint","synthetic":true,"types":[]},{"text":"impl Unpin for JointPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for Skin","synthetic":true,"types":[]},{"text":"impl Unpin for SkinPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for SkinnablePrefab","synthetic":true,"types":[]},{"text":"impl Unpin for VertexSkinningSystem","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for AnimationControlSystem&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SamplerInterpolationSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Primitive: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MaterialChannel","synthetic":true,"types":[]},{"text":"impl Unpin for MaterialPrimitive","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AnimationCommand&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AnimationSampling&gt;::Channel: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BlendMethod","synthetic":true,"types":[]},{"text":"impl Unpin for ControlState","synthetic":true,"types":[]},{"text":"impl Unpin for DeferStartRelation","synthetic":true,"types":[]},{"text":"impl Unpin for EndControl","synthetic":true,"types":[]},{"text":"impl Unpin for StepDirection","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteRenderChannel","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteRenderPrimitive","synthetic":true,"types":[]},{"text":"impl Unpin for TransformChannel","synthetic":true,"types":[]},{"text":"impl Unpin for UiTransformChannel","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SamplerPrimitive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["amethyst_assets"] = [{"text":"impl&lt;D&gt; Unpin for FormatValue&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Cache&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RonFormat","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for AssetLoaderSystemData&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Loader","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Prefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for PrefabLoader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PrefabLoaderSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PrefabLoaderSystemDesc&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressCounter","synthetic":true,"types":[]},{"text":"impl Unpin for HotReloadBundle","synthetic":true,"types":[]},{"text":"impl Unpin for HotReloadStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for HotReloadSystem","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for SingleFile&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Directory","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for AssetStorage&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized&gt; Unpin for Handle&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Processor&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for WeakHandle&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Unpin for AssetPrefab&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Completion","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ProcessingState&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Asset&gt;::Data: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl Unpin for AudioBundle","synthetic":true,"types":[]},{"text":"impl Unpin for AudioEmitter","synthetic":true,"types":[]},{"text":"impl Unpin for AudioListener","synthetic":true,"types":[]},{"text":"impl Unpin for AudioPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for FlacFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Mp3Format","synthetic":true,"types":[]},{"text":"impl Unpin for OggFormat","synthetic":true,"types":[]},{"text":"impl Unpin for WavFormat","synthetic":true,"types":[]},{"text":"impl Unpin for AudioSink","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for AudioSystem","synthetic":true,"types":[]},{"text":"impl Unpin for AudioSystemDesc","synthetic":true,"types":[]},{"text":"impl&lt;F, R&gt; Unpin for DjSystem&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, R&gt; Unpin for DjSystemDesc&lt;F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderError","synthetic":true,"types":[]},{"text":"impl Unpin for Output","synthetic":true,"types":[]},{"text":"impl Unpin for OutputIterator","synthetic":true,"types":[]}];
implementors["amethyst_config"] = [{"text":"impl Unpin for ConfigError","synthetic":true,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl&lt;T&gt; Unpin for ArcBallControlBundle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FlyControlBundle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ArcBallControlTag","synthetic":true,"types":[]},{"text":"impl Unpin for ControlTagPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for FlyControlTag","synthetic":true,"types":[]},{"text":"impl Unpin for HideCursor","synthetic":true,"types":[]},{"text":"impl Unpin for WindowFocus","synthetic":true,"types":[]},{"text":"impl Unpin for ArcBallRotationSystem","synthetic":true,"types":[]},{"text":"impl Unpin for CursorHideSystem","synthetic":true,"types":[]},{"text":"impl Unpin for CursorHideSystemDesc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FlyMovementSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FlyMovementSystemDesc&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FreeRotationSystem","synthetic":true,"types":[]},{"text":"impl Unpin for FreeRotationSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for MouseFocusUpdateSystem","synthetic":true,"types":[]},{"text":"impl Unpin for MouseFocusUpdateSystemDesc","synthetic":true,"types":[]}];
implementors["amethyst_core"] = [{"text":"impl&lt;S, V&gt; Unpin for Pausable&lt;S, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Hidden","synthetic":true,"types":[]},{"text":"impl Unpin for HiddenPropagate","synthetic":true,"types":[]},{"text":"impl Unpin for HideHierarchySystem","synthetic":true,"types":[]},{"text":"impl Unpin for HideHierarchySystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for Named","synthetic":true,"types":[]},{"text":"impl Unpin for Axis2","synthetic":true,"types":[]},{"text":"impl Unpin for Axis3","synthetic":true,"types":[]},{"text":"impl Unpin for AddBarrier","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for AddSystem&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SD, S&gt; Unpin for AddSystemDesc&lt;SD, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for AddThreadLocal&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SD, S&gt; Unpin for AddThreadLocalDesc&lt;SD, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for AddBundle&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FrameRateLimitConfig","synthetic":true,"types":[]},{"text":"impl Unpin for FrameLimiter","synthetic":true,"types":[]},{"text":"impl Unpin for FrameRateLimitStrategy","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Plane&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Scalar + Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Ray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Scalar + Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl Unpin for Stopwatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TransformBundle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Parent","synthetic":true,"types":[]},{"text":"impl Unpin for Transform","synthetic":true,"types":[]},{"text":"impl Unpin for TransformSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for TransformSystem","synthetic":true,"types":[]}];
implementors["amethyst_dynamic_ui"] = [{"text":"impl&lt;C&gt; Unpin for DynamicUiBundle&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SizeConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for ModalData","synthetic":true,"types":[]},{"text":"impl Unpin for NoCustomElements","synthetic":true,"types":[]},{"text":"impl Unpin for UiExtraTextData","synthetic":true,"types":[]},{"text":"impl Unpin for ImageButtonData","synthetic":true,"types":[]},{"text":"impl Unpin for I18nData","synthetic":true,"types":[]},{"text":"impl Unpin for Rect","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for LayoutElement&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Fonts","synthetic":true,"types":[]},{"text":"impl Unpin for Textures","synthetic":true,"types":[]},{"text":"impl Unpin for WidgetConstraintBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for PaddableConstraintBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Padding","synthetic":true,"types":[]},{"text":"impl Unpin for WidgetConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for PaddableConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for LayoutVars","synthetic":true,"types":[]},{"text":"impl Unpin for Layout","synthetic":true,"types":[]},{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl Unpin for ExactFrame","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariableEditable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EditVariable","synthetic":true,"types":[]},{"text":"impl Unpin for LAYOUT","synthetic":true,"types":[]},{"text":"impl Unpin for VarType","synthetic":true,"types":[]},{"text":"impl Unpin for CenteredLayout","synthetic":true,"types":[]},{"text":"impl Unpin for LinearLayoutData","synthetic":true,"types":[]},{"text":"impl Unpin for LinearLayout","synthetic":true,"types":[]},{"text":"impl Unpin for FlowDirection","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for ItemAlignment","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraButtonData","synthetic":true,"types":[]},{"text":"impl Unpin for UiCachedImage","synthetic":true,"types":[]},{"text":"impl Unpin for UiCachedText","synthetic":true,"types":[]},{"text":"impl Unpin for FontFamilyPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for HtmlTextData","synthetic":true,"types":[]},{"text":"impl Unpin for CalculatedDimensions","synthetic":true,"types":[]},{"text":"impl Unpin for LayoutIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for Tinted","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for DynamicUiFormat&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DynamicLayout","synthetic":true,"types":[]},{"text":"impl Unpin for DynamicLayoutData","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Unpin for DynamicUiLoader&lt;'a, C&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UiTextPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeSystem","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonTintAction","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonTintRetrigger","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonTintActionType","synthetic":true,"types":[]},{"text":"impl Unpin for LimnSolver","synthetic":true,"types":[]},{"text":"impl Unpin for LayoutManager","synthetic":true,"types":[]},{"text":"impl Unpin for UiFmodRetrigger","synthetic":true,"types":[]},{"text":"impl Unpin for UiFmodSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UiFmodSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for SoundEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for Styles","synthetic":true,"types":[]},{"text":"impl Unpin for FontFamily","synthetic":true,"types":[]},{"text":"impl Unpin for HtmlText","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonTintSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonTintSystemDesc","synthetic":true,"types":[]}];
implementors["amethyst_error"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Causes&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["amethyst_fmod"] = [{"text":"impl Unpin for FmodBundle","synthetic":true,"types":[]},{"text":"impl Unpin for EventDescription","synthetic":true,"types":[]},{"text":"impl Unpin for EventInstance","synthetic":true,"types":[]},{"text":"impl Unpin for AudioSystem","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SoundBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for System","synthetic":true,"types":[]},{"text":"impl Unpin for Attributes3D","synthetic":true,"types":[]},{"text":"impl Unpin for CoreSystem","synthetic":true,"types":[]},{"text":"impl Unpin for DriverInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Bank","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateSystem","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for StopMode","synthetic":true,"types":[]}];
implementors["amethyst_input"] = [{"text":"impl&lt;T&gt; Unpin for Bindings&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StringBindings","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InputBundle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InputHandler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InputSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InputSystemDesc&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Axis","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BindingError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BindingsFileError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Button","synthetic":true,"types":[]},{"text":"impl Unpin for ControllerAxis","synthetic":true,"types":[]},{"text":"impl Unpin for ControllerButton","synthetic":true,"types":[]},{"text":"impl Unpin for ControllerEvent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InputEvent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Action: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BindingTypes&gt;::Axis: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MouseAxis","synthetic":true,"types":[]},{"text":"impl Unpin for ScrollDirection","synthetic":true,"types":[]}];
implementors["amethyst_locale"] = [{"text":"impl Unpin for LocaleFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Locale","synthetic":true,"types":[]}];
implementors["amethyst_network"] = [{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkSimulationTime","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkSimulationTimeSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TransportResource","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkSimulationEvent","synthetic":true,"types":[]},{"text":"impl Unpin for DeliveryRequirement","synthetic":true,"types":[]},{"text":"impl Unpin for UrgencyRequirement","synthetic":true,"types":[]},{"text":"impl Unpin for LaminarNetworkBundle","synthetic":true,"types":[]},{"text":"impl Unpin for LaminarSocketResource","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNetworkBundle","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStreamManagementSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TcpConnectionListenerSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNetworkSendSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNetworkRecvSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNetworkResource","synthetic":true,"types":[]},{"text":"impl Unpin for UdpNetworkBundle","synthetic":true,"types":[]},{"text":"impl Unpin for UdpNetworkSendSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UdpNetworkRecvSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocketResource","synthetic":true,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl&lt;B&gt; Unpin for RenderingBundle&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ActiveCamera","synthetic":true,"types":[]},{"text":"impl Unpin for Camera","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Material","synthetic":true,"types":[]},{"text":"impl Unpin for MaterialDefaults","synthetic":true,"types":[]},{"text":"impl Unpin for RenderToWindow","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for RenderBase3D&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RenderFlat2D","synthetic":true,"types":[]},{"text":"impl Unpin for RenderDebugLines","synthetic":true,"types":[]},{"text":"impl Unpin for RenderSkybox","synthetic":true,"types":[]},{"text":"impl Unpin for Sprite","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteRender","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteSheet","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteSheetFormat","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for MeshProcessorSystem&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, G&gt; Unpin for RenderingSystem&lt;B, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for TextureProcessorSystem&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Transparent","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for MeshPrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TexturePrefab","synthetic":true,"types":[]},{"text":"impl Unpin for Mesh","synthetic":true,"types":[]},{"text":"impl Unpin for Texture","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDetection","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for DrawBase3DDesc&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for DrawBase3D&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Base3DPassDef&gt;::TextureSet: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for DrawBase3DTransparentDesc&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for DrawBase3DTransparent&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DrawDebugLinesDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DrawDebugLines&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FlatPassDef","synthetic":true,"types":[]},{"text":"impl Unpin for DrawFlat2DDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DrawFlat2D&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DrawFlat2DTransparentDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DrawFlat2DTransparent&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PbrPassDef","synthetic":true,"types":[]},{"text":"impl Unpin for ShadedPassDef","synthetic":true,"types":[]},{"text":"impl Unpin for DrawSkyboxDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DrawSkybox&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;PK, SK, C&gt; Unpin for TwoLevelBatch&lt;PK, SK, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;SK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;PK, SK, D&gt; Unpin for OrderedTwoLevelBatch&lt;PK, SK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;SK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;PK, D&gt; Unpin for OneLevelBatch&lt;PK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;PK, D&gt; Unpin for OrderedOneLevelBatch&lt;PK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for RenderPlan&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TargetMetadata","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for TargetPlanContext&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOptions","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for TargetPlanOutputs&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TargetImage","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for OutputColor&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for RenderableAction&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RenderOrder","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for ActiveCameraPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for CameraPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLine","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLinesParams","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLinesComponent","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLines","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for GraphicsPrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ObjFormat","synthetic":true,"types":[]},{"text":"impl Unpin for MaterialPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for TextureGenerator","synthetic":true,"types":[]},{"text":"impl Unpin for DirectionalLight","synthetic":true,"types":[]},{"text":"impl Unpin for PointLight","synthetic":true,"types":[]},{"text":"impl Unpin for SpotLight","synthetic":true,"types":[]},{"text":"impl Unpin for SunLight","synthetic":true,"types":[]},{"text":"impl Unpin for LightPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for Light","synthetic":true,"types":[]},{"text":"impl Unpin for TextureOffset","synthetic":true,"types":[]},{"text":"impl Unpin for TexAlbedo","synthetic":true,"types":[]},{"text":"impl Unpin for TexEmission","synthetic":true,"types":[]},{"text":"impl Unpin for TexNormal","synthetic":true,"types":[]},{"text":"impl Unpin for TexMetallicRoughness","synthetic":true,"types":[]},{"text":"impl Unpin for TexAmbientOcclusion","synthetic":true,"types":[]},{"text":"impl Unpin for TexCavity","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for PipelineDescBuilder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for PipelinesBuilder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AmbientColor","synthetic":true,"types":[]},{"text":"impl Unpin for Tint","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for ShapePrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ShapeUpload&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InternalShape","synthetic":true,"types":[]},{"text":"impl Unpin for Shape","synthetic":true,"types":[]},{"text":"impl Unpin for JointWeights","synthetic":true,"types":[]},{"text":"impl Unpin for JointIds","synthetic":true,"types":[]},{"text":"impl Unpin for JointCombined","synthetic":true,"types":[]},{"text":"impl Unpin for JointTransforms","synthetic":true,"types":[]},{"text":"impl Unpin for JointTransformsPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for TextureCoordinates","synthetic":true,"types":[]},{"text":"impl Unpin for SpritePosition","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteList","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteGrid","synthetic":true,"types":[]},{"text":"impl Unpin for Sprites","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteSheetLoadedSet","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteRenderPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteScenePrefab","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteSheetPrefab","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteSheetReference","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteVisibility","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteVisibilitySortingSystem","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for EnvironmentSub&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for FlatEnvironmentSub&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MaterialId","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for MaterialSub&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SkinningSub&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TextureId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for TextureSub&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for DynamicUniform&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for IndexData&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; Unpin for VertexData&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, V, T&gt; Unpin for DynamicVertexData&lt;B, V, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CameraGatherer","synthetic":true,"types":[]},{"text":"impl Unpin for AmbientGatherer","synthetic":true,"types":[]},{"text":"impl Unpin for MeshData","synthetic":true,"types":[]},{"text":"impl Unpin for TextureData","synthetic":true,"types":[]},{"text":"impl Unpin for BackendVariant","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for VisibilitySortingSystem","synthetic":true,"types":[]},{"text":"impl Unpin for BoundingSphere","synthetic":true,"types":[]},{"text":"impl Unpin for Frustum","synthetic":true,"types":[]},{"text":"impl Unpin for TextureOffset","synthetic":true,"types":[]},{"text":"impl Unpin for ViewArgs","synthetic":true,"types":[]},{"text":"impl Unpin for Tint","synthetic":true,"types":[]},{"text":"impl Unpin for VertexArgs","synthetic":true,"types":[]},{"text":"impl Unpin for JointsOffset","synthetic":true,"types":[]},{"text":"impl Unpin for SkinnedVertexArgs","synthetic":true,"types":[]},{"text":"impl Unpin for PointLight","synthetic":true,"types":[]},{"text":"impl Unpin for DirectionalLight","synthetic":true,"types":[]},{"text":"impl Unpin for SpotLight","synthetic":true,"types":[]},{"text":"impl Unpin for Environment","synthetic":true,"types":[]},{"text":"impl Unpin for Material","synthetic":true,"types":[]},{"text":"impl Unpin for SpriteArgs","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for LookupBuilder&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&gt; Unpin for TapCountIterator&lt;'a, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl Unpin for BlinkSystem","synthetic":true,"types":[]},{"text":"impl&lt;T, C, W, G&gt; Unpin for UiBundle&lt;T, C, W, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UiButton","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonAction","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonActionRetrigger","synthetic":true,"types":[]},{"text":"impl&lt;G, I&gt; Unpin for UiButtonBuilder&lt;G, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I&gt; Unpin for UiButtonBuilderResources&lt;'a, G, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonSystemDesc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DragWidgetSystemDesc&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Draggable","synthetic":true,"types":[]},{"text":"impl Unpin for Interactable","synthetic":true,"types":[]},{"text":"impl Unpin for UiEvent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UiMouseSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EventRetriggerSystem&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EventRetriggerSystemDesc&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FontAsset","synthetic":true,"types":[]},{"text":"impl Unpin for TtfFormat","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UiGlyphsSystem&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UiGlyphsSystemDesc&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UiLabel","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for UiLabelBuilder&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for UiLabelBuilderResources&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UiTransformSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UiTransformSystemDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DrawUi&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DrawUiDesc","synthetic":true,"types":[]},{"text":"impl Unpin for RenderUi","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditingPrefab","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for UiButtonData&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C, W&gt; Unpin for UiCreator&lt;'a, C, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as ToNativeWidget&lt;W&gt;&gt;::PrefabData: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for UiFormat&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UiImagePrefab","synthetic":true,"types":[]},{"text":"impl&lt;'a, C, W&gt; Unpin for UiLoader&lt;'a, C, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UiTextData","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for UiTransformData&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeSystem","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for UiResize","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for Selectable&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Selected","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for SelectionKeyboardSystem&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for SelectionKeyboardSystemDesc&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, T&gt; Unpin for SelectionMouseSystem&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, T&gt; Unpin for SelectionMouseSystemDesc&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for CacheSelectionOrderSystem&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CachedSelectionOrder","synthetic":true,"types":[]},{"text":"impl Unpin for UiPlaySoundAction","synthetic":true,"types":[]},{"text":"impl Unpin for UiSoundRetrigger","synthetic":true,"types":[]},{"text":"impl Unpin for UiSoundSystem","synthetic":true,"types":[]},{"text":"impl Unpin for UiSoundSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditing","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditingMouseSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditingMouseSystemDesc","synthetic":true,"types":[]},{"text":"impl Unpin for UiMultipartText","synthetic":true,"types":[]},{"text":"impl Unpin for UiText","synthetic":true,"types":[]},{"text":"impl Unpin for TextSection","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditingInputSystem","synthetic":true,"types":[]},{"text":"impl Unpin for TextEditingInputSystemDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UiFinder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UiTransform","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Unpin for Widgets&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UiButtonActionType","synthetic":true,"types":[]},{"text":"impl Unpin for UiEventType","synthetic":true,"types":[]},{"text":"impl Unpin for UiImage","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for ScaleMode","synthetic":true,"types":[]},{"text":"impl Unpin for Stretch","synthetic":true,"types":[]},{"text":"impl Unpin for NoCustomUi","synthetic":true,"types":[]},{"text":"impl Unpin for UiImageLoadPrefab","synthetic":true,"types":[]},{"text":"impl&lt;C, W, G&gt; Unpin for UiWidget&lt;C, W, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LineMode","synthetic":true,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl Unpin for AutoFov","synthetic":true,"types":[]},{"text":"impl Unpin for AutoFovSystem","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for CircularBuffer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FpsCounter","synthetic":true,"types":[]},{"text":"impl Unpin for FpsCounterSystem","synthetic":true,"types":[]},{"text":"impl Unpin for FpsCounterBundle","synthetic":true,"types":[]},{"text":"impl Unpin for CameraOrthoWorldCoordinates","synthetic":true,"types":[]},{"text":"impl Unpin for CameraOrtho","synthetic":true,"types":[]},{"text":"impl Unpin for CameraOrthoSystem","synthetic":true,"types":[]},{"text":"impl Unpin for CameraNormalizeMode","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Removal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V, R&gt; Unpin for BasicScenePrefab&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Tag&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for TagFinder&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DestroyAtTime","synthetic":true,"types":[]},{"text":"impl Unpin for DestroyInTime","synthetic":true,"types":[]},{"text":"impl Unpin for DestroyAtTimeSystem","synthetic":true,"types":[]},{"text":"impl Unpin for DestroyInTimeSystem","synthetic":true,"types":[]}];
implementors["amethyst_window"] = [{"text":"impl Unpin for WindowBundle","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayConfig","synthetic":true,"types":[]},{"text":"impl Unpin for MonitorIdent","synthetic":true,"types":[]},{"text":"impl Unpin for ScreenDimensions","synthetic":true,"types":[]},{"text":"impl Unpin for EventsLoopSystem","synthetic":true,"types":[]},{"text":"impl Unpin for WindowSystem","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; Unpin for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Endian","synthetic":true,"types":[]},{"text":"impl Unpin for Line","synthetic":true,"types":[]},{"text":"impl Unpin for Sides","synthetic":true,"types":[]},{"text":"impl Unpin for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FontConfig","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Unpin for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Unpin for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Unpin for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["atom"] = [{"text":"impl&lt;P&gt; Unpin for Atom&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for AtomSetOnce&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Unpin for Stream","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl Unpin for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for BacktraceFmt&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; Unpin for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'fmt,<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'fmt,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Backtrace","synthetic":true,"types":[]},{"text":"impl Unpin for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Unpin for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PrintFmt","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]}];
implementors["bytemuck"] = [{"text":"impl Unpin for PodCastError","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for BytesMut","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IoSliceMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cassowary"] = [{"text":"impl Unpin for Variable","synthetic":true,"types":[]},{"text":"impl Unpin for Term","synthetic":true,"types":[]},{"text":"impl Unpin for Expression","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for PartialConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for Solver","synthetic":true,"types":[]},{"text":"impl Unpin for RelationalOperator","synthetic":true,"types":[]},{"text":"impl Unpin for WeightedRelation","synthetic":true,"types":[]},{"text":"impl Unpin for AddConstraintError","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveConstraintError","synthetic":true,"types":[]},{"text":"impl Unpin for AddEditVariableError","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveEditVariableError","synthetic":true,"types":[]},{"text":"impl Unpin for SuggestValueError","synthetic":true,"types":[]}];
implementors["cgmath"] = [{"text":"impl&lt;S&gt; Unpin for Matrix2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Matrix3&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Matrix4&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Quaternion&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Vector1&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Vector2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Vector3&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Vector4&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Deg&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Rad&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Euler&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Point1&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Point2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Point3&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Basis2&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Basis3&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V, R&gt; Unpin for Decomposed&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as VectorSpace&gt;::Scalar: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PerspectiveFov&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Perspective&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Ortho&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["claxon"] = [{"text":"impl&lt;R&gt; Unpin for FlacReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FlacReaderOptions","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for FlacSamples&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StereoSamples&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for FrameReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BufferedReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Bitstream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StreamInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SeekPoint","synthetic":true,"types":[]},{"text":"impl Unpin for SeekTable","synthetic":true,"types":[]},{"text":"impl Unpin for VorbisComment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Tags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GetTag&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MetadataBlockReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataBlock","synthetic":true,"types":[]}];
implementors["clipboard"] = [{"text":"impl Unpin for Primary","synthetic":true,"types":[]},{"text":"impl Unpin for Clipboard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for X11ClipboardContext&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NopClipboardContext","synthetic":true,"types":[]}];
implementors["color_quant"] = [{"text":"impl Unpin for NeuQuant","synthetic":true,"types":[]}];
implementors["colored"] = [{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for ColoredString","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Styles","synthetic":true,"types":[]},{"text":"impl Unpin for ShouldColorize","synthetic":true,"types":[]},{"text":"impl Unpin for SHOULD_COLORIZE","synthetic":true,"types":[]}];
implementors["colorful"] = [{"text":"impl Unpin for Colorado","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for ColorMode","synthetic":true,"types":[]},{"text":"impl Unpin for Symbol","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for CString","synthetic":true,"types":[]},{"text":"impl Unpin for RGB","synthetic":true,"types":[]},{"text":"impl Unpin for HSL","synthetic":true,"types":[]}];
implementors["cpal"] = [{"text":"impl Unpin for HostUnavailable","synthetic":true,"types":[]},{"text":"impl Unpin for BackendSpecificError","synthetic":true,"types":[]},{"text":"impl Unpin for Device","synthetic":true,"types":[]},{"text":"impl Unpin for Devices","synthetic":true,"types":[]},{"text":"impl Unpin for EventLoop","synthetic":true,"types":[]},{"text":"impl Unpin for Host","synthetic":true,"types":[]},{"text":"impl Unpin for SupportedInputFormats","synthetic":true,"types":[]},{"text":"impl Unpin for SupportedOutputFormats","synthetic":true,"types":[]},{"text":"impl Unpin for StreamId","synthetic":true,"types":[]},{"text":"impl Unpin for SampleRate","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for SupportedFormat","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for InputBuffer&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OutputBuffer&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DevicesError","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceNameError","synthetic":true,"types":[]},{"text":"impl Unpin for SupportedFormatsError","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultFormatError","synthetic":true,"types":[]},{"text":"impl Unpin for BuildStreamError","synthetic":true,"types":[]},{"text":"impl Unpin for PlayStreamError","synthetic":true,"types":[]},{"text":"impl Unpin for PauseStreamError","synthetic":true,"types":[]},{"text":"impl Unpin for StreamError","synthetic":true,"types":[]},{"text":"impl Unpin for HostId","synthetic":true,"types":[]},{"text":"impl Unpin for SampleFormat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnknownTypeInputBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnknownTypeOutputBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Host","synthetic":true,"types":[]},{"text":"impl Unpin for Device","synthetic":true,"types":[]},{"text":"impl Unpin for EventLoop","synthetic":true,"types":[]},{"text":"impl Unpin for StreamId","synthetic":true,"types":[]},{"text":"impl Unpin for Devices","synthetic":true,"types":[]}];
implementors["crc"] = [{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Digest","synthetic":true,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Unpin for Hasher","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for TryReadyError","synthetic":true,"types":[]},{"text":"impl Unpin for TrySelectError","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Unpin for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stealer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Injector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Unpin for Atomic&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T, P&gt; Unpin for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Owned&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; Unpin for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Collector","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; Unpin for ArrayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SegQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Unpin for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Backoff","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for AtomicCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parker","synthetic":true,"types":[]},{"text":"impl Unpin for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for ShardedLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Unpin for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Unpin for ScopedThreadBuilder&lt;'scope, 'env&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'env: 'scope,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Unpin for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]}];
implementors["deflate"] = [{"text":"impl Unpin for CompressionOptions","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialOptions","synthetic":true,"types":[]},{"text":"impl Unpin for MatchingType","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for DeflateEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZlibEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlib"] = [{"text":"impl Unpin for DlError","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Unpin for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["env_logger"] = [{"text":"impl&lt;'a&gt; Unpin for Env&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Logger","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for WriteStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Filter","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for StyledValue&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Formatter","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for TimestampPrecision","synthetic":true,"types":[]}];
implementors["erased_serde"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["euclid"] = [{"text":"impl&lt;T&gt; Unpin for Angle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Box2D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for HomogeneousVector&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Unit&gt; Unpin for Length&lt;T, Unit&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Unit: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for NonEmpty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Point2D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Point3D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Scale&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Transform2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Transform3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoolVector2D","synthetic":true,"types":[]},{"text":"impl Unpin for BoolVector3D","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Vector2D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Vector3D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Box3D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Rect&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for RigidTransform3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Rotation2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Rotation3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for SideOffsets2D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Size2D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Size3D&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Translation2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Unpin for Translation3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Dst: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownUnit","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl Unpin for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Context&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SyncFailure&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["fern"] = [{"text":"impl Unpin for Dispatch","synthetic":true,"types":[]},{"text":"impl Unpin for Output","synthetic":true,"types":[]},{"text":"impl Unpin for Panic","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FormatCallback&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InitError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WithFgColor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ColoredLevelConfig","synthetic":true,"types":[]}];
implementors["float_ord"] = [{"text":"impl&lt;T&gt; Unpin for FloatOrd&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fluent_bundle"] = [{"text":"impl&lt;'m&gt; Unpin for FluentMessage&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FluentResource","synthetic":true,"types":[]},{"text":"impl Unpin for FluentError","synthetic":true,"types":[]},{"text":"impl&lt;'bundle, R, M&gt; Unpin for Scope&lt;'bundle, R, M&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ResolverError","synthetic":true,"types":[]},{"text":"impl Unpin for FluentNumberOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FluentNumber","synthetic":true,"types":[]},{"text":"impl&lt;'source&gt; Unpin for DisplayableNode&lt;'source&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FluentNumberStyle","synthetic":true,"types":[]},{"text":"impl Unpin for FluentNumberCurrencyDisplayStyle","synthetic":true,"types":[]},{"text":"impl&lt;'source&gt; Unpin for DisplayableNodeType&lt;'source&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'source&gt; Unpin for FluentValue&lt;'source&gt;","synthetic":true,"types":[]}];
implementors["fluent_langneg"] = [{"text":"impl Unpin for NegotiationStrategy","synthetic":true,"types":[]}];
implementors["fluent_syntax"] = [{"text":"impl&lt;'ast&gt; Unpin for Resource&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Message&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Term&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Pattern&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Attribute&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Identifier&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Variant&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for CallArguments&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for NamedArgument&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for ResourceEntry&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Entry&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for PatternElement&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for VariantKey&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Comment&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for InlineExpression&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ast&gt; Unpin for Expression&lt;'ast&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParserError","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]}];
implementors["fmod_sys"] = [{"text":"impl Unpin for FMOD_SYSTEM","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SOUND","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELCONTROL","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNEL","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELGROUP","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SOUNDGROUP","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_REVERB3D","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSPCONNECTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_POLYGON","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_GEOMETRY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SYNCPOINT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_ASYNCREADINFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_VECTOR","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_3D_ATTRIBUTES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_GUID","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_PLUGINLIST","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_ADVANCEDSETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_TAG","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CREATESOUNDEXINFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_REVERB_PROPERTIES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_ERRORCALLBACK_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CODEC_DESCRIPTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CODEC_WAVEFORMAT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CODEC_STATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_BUFFER_ARRAY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_COMPLEX","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_FLOAT_MAPPING","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC_FLOAT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC_INT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC_BOOL","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_OVERALLGAIN","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_3DATTRIBUTES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_3DATTRIBUTES_MULTI","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_SIDECHAIN","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_FFT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_DESCRIPTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_STATE_DFT_FUNCTIONS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_STATE_PAN_FUNCTIONS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_STATE_FUNCTIONS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_STATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_METERING_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_OUTPUT_DESCRIPTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_OUTPUT_STATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_OUTPUT_OBJECT3DINFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_SYSTEM","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_EVENTDESCRIPTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_EVENTINSTANCE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_BUS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_VCA","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_BANK","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_COMMANDREPLAY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_BANK_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PARAMETER_ID","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PARAMETER_DESCRIPTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_USER_PROPERTY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PROGRAMMER_SOUND_PROPERTIES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PLUGIN_INSTANCE_PROPERTIES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_TIMELINE_MARKER_PROPERTIES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_TIMELINE_BEAT_PROPERTIES","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_ADVANCEDSETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_CPU_USAGE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_BUFFER_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_BUFFER_USAGE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_SOUND_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_COMMAND_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_MEMORY_USAGE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DESC__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_USER_PROPERTY__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_RESULT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELCONTROL_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_OUTPUTTYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DEBUG_MODE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SPEAKERMODE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SPEAKER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELORDER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_PLUGINTYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SOUND_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SOUND_FORMAT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_OPENSTATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_SOUNDGROUP_BEHAVIOR","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELCONTROL_CALLBACK_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_CHANNELCONTROL_DSP_INDEX","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_ERRORCALLBACK_INSTANCETYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_RESAMPLER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSPCONNECTION_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_TAGTYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_TAGDATATYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_OSCILLATOR","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_LOWPASS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_ITLOWPASS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_HIGHPASS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_ECHO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_FADER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_FLANGE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_DISTORTION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_NORMALIZE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_LIMITER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMEQ","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_MULTIBAND_EQ","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_MULTIBAND_EQ_FILTER_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PITCHSHIFT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_CHORUS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_ITECHO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_COMPRESSOR","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_SFXREVERB","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_LOWPASS_SIMPLE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_DELAY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_TREMOLO","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_SEND","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_RETURN","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_HIGHPASS_SIMPLE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN_2D_STEREO_MODE_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN_MODE_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN_3D_ROLLOFF_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN_3D_EXTENT_MODE_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_THREE_EQ_CROSSOVERSLOPE_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_THREE_EQ","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_FFT_WINDOW","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_FFT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_ENVELOPEFOLLOWER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_CONVOLUTION_REVERB","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_CHANNELMIX_OUTPUT","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_CHANNELMIX","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_TRANSCEIVER_SPEAKERMODE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_TRANSCEIVER","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_OBJECTPAN","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PROCESS_OPERATION","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PAN_SURROUND_FLAGS","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_FLOAT_MAPPING_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_DSP_PARAMETER_DATA_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_LOADING_STATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_LOAD_MEMORY_MODE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PARAMETER_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_USER_PROPERTY_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_EVENT_PROPERTY","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_PLAYBACK_STATE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_STOP_MODE","synthetic":true,"types":[]},{"text":"impl Unpin for FMOD_STUDIO_INSTANCETYPE","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Unpin for FnvHasher","synthetic":true,"types":[]}];
implementors["font_kit"] = [{"text":"impl Unpin for Canvas","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for RasterizationOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FontLoadingError","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphLoadingError","synthetic":true,"types":[]},{"text":"impl Unpin for SelectionError","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Family&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FamilyHandle","synthetic":true,"types":[]},{"text":"impl Unpin for FamilyName","synthetic":true,"types":[]},{"text":"impl Unpin for FileType","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl Unpin for HintingOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FontTransform","synthetic":true,"types":[]},{"text":"impl&lt;Font&gt; Unpin for FallbackResult&lt;Font&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Font: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Font&gt; Unpin for FallbackFont&lt;Font&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Font: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Font","synthetic":true,"types":[]},{"text":"impl Unpin for Metrics","synthetic":true,"types":[]},{"text":"impl Unpin for Properties","synthetic":true,"types":[]},{"text":"impl Unpin for Weight","synthetic":true,"types":[]},{"text":"impl Unpin for Stretch","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for FontconfigSource","synthetic":true,"types":[]},{"text":"impl Unpin for FsSource","synthetic":true,"types":[]},{"text":"impl Unpin for MemSource","synthetic":true,"types":[]},{"text":"impl Unpin for MultiSource","synthetic":true,"types":[]}];
implementors["fontconfig"] = [{"text":"impl Unpin for struct__FcMatrix","synthetic":true,"types":[]},{"text":"impl Unpin for struct__FcObjectType","synthetic":true,"types":[]},{"text":"impl Unpin for struct__FcConstant","synthetic":true,"types":[]},{"text":"impl Unpin for struct__FcValue","synthetic":true,"types":[]},{"text":"impl Unpin for struct__FcFontSet","synthetic":true,"types":[]},{"text":"impl Unpin for struct__FcObjectSet","synthetic":true,"types":[]}];
implementors["freetype"] = [{"text":"impl&lt;T&gt; Unpin for __BindgenUnionField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FT_MemoryRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_StreamRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_StreamDesc_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Vector_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_BBox_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Bitmap_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Outline_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Outline_Funcs_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_RasterRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Span_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Raster_Params_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Raster_Funcs_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_UnitVector_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Matrix_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Data_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Generic_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_ListNodeRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_ListRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Glyph_Metrics_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Bitmap_Size_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_LibraryRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_ModuleRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_DriverRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_RendererRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_FaceRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_SizeRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_GlyphSlotRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_CharMapRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Face_InternalRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Size_InternalRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Size_Metrics_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_SubGlyphRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Slot_InternalRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Parameter_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Open_Args_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Size_RequestRec_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Module_Class_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Pixel_Mode_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Glyph_Format_","synthetic":true,"types":[]},{"text":"impl Unpin for _bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for _bindgen_ty_2","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Encoding_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Size_Request_Type_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Render_Mode_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Kerning_Mode_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_LcdFilter_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Sfnt_Tag_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_TrueTypeEngineType_","synthetic":true,"types":[]},{"text":"impl Unpin for FT_Orientation_","synthetic":true,"types":[]},{"text":"impl Unpin for TT_OS2","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl Unpin for FxHasher","synthetic":true,"types":[]},{"text":"impl Unpin for FxHasher64","synthetic":true,"types":[]},{"text":"impl Unpin for FxHasher32","synthetic":true,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, U&gt; Unpin for GenericArray&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, N&gt; Unpin for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["genmesh"] = [{"text":"impl&lt;T&gt; Unpin for Line&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Quad&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Triangle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SRC, V&gt; Unpin for VerticesIterator&lt;SRC, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SRC: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SRC, V&gt; Unpin for TriangulateIterator&lt;SRC, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SRC: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for LruIndexer&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Neighbors&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Polygon&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, V&gt; Unpin for SharedVertexIterator&lt;'a, T, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, V&gt; Unpin for IndexedPolygonIterator&lt;'a, T, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Circle","synthetic":true,"types":[]},{"text":"impl Unpin for Cone","synthetic":true,"types":[]},{"text":"impl Unpin for Cube","synthetic":true,"types":[]},{"text":"impl Unpin for Cylinder","synthetic":true,"types":[]},{"text":"impl Unpin for IcoSphere","synthetic":true,"types":[]},{"text":"impl Unpin for Plane","synthetic":true,"types":[]},{"text":"impl Unpin for SphereUv","synthetic":true,"types":[]},{"text":"impl Unpin for Torus","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl Unpin for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl Unpin for RawCommandQueue","synthetic":true,"types":[]},{"text":"impl Unpin for Device","synthetic":true,"types":[]},{"text":"impl Unpin for QueueFamily","synthetic":true,"types":[]},{"text":"impl Unpin for RawCommandPool","synthetic":true,"types":[]},{"text":"impl Unpin for RawCommandBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorPool","synthetic":true,"types":[]},{"text":"impl Unpin for Surface","synthetic":true,"types":[]},{"text":"impl Unpin for Swapchain","synthetic":true,"types":[]},{"text":"impl Unpin for Instance","synthetic":true,"types":[]},{"text":"impl Unpin for Backend","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Unpin for Features","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Primitive","synthetic":true,"types":[]},{"text":"impl Unpin for IndexType","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionError","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryType","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryProperties","synthetic":true,"types":[]},{"text":"impl Unpin for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceType","synthetic":true,"types":[]},{"text":"impl Unpin for Usage","synthetic":true,"types":[]},{"text":"impl Unpin for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for IndexBufferView&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Unpin for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResolve","synthetic":true,"types":[]},{"text":"impl Unpin for ImageBlit","synthetic":true,"types":[]},{"text":"impl Unpin for ClearDepthStencilRaw","synthetic":true,"types":[]},{"text":"impl Unpin for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for CommandBufferInheritanceInfo&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Unpin for RenderSubpassCommon&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for RenderPassInlineEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for RenderPassSecondaryEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, S, R&gt; Unpin for SubpassCommandBuffer&lt;B, S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BufferCopy","synthetic":true,"types":[]},{"text":"impl Unpin for ImageCopy","synthetic":true,"types":[]},{"text":"impl Unpin for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;B, C, S, L, R&gt; Unpin for CommandBuffer&lt;B, C, S, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ClearColorRaw","synthetic":true,"types":[]},{"text":"impl Unpin for ClearValueRaw","synthetic":true,"types":[]},{"text":"impl Unpin for ClearColor","synthetic":true,"types":[]},{"text":"impl Unpin for ClearValue","synthetic":true,"types":[]},{"text":"impl Unpin for AttachmentClear","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for SubpassContents","synthetic":true,"types":[]},{"text":"impl Unpin for OneShot","synthetic":true,"types":[]},{"text":"impl Unpin for MultiShot","synthetic":true,"types":[]},{"text":"impl Unpin for Primary","synthetic":true,"types":[]},{"text":"impl Unpin for Secondary","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceLost","synthetic":true,"types":[]},{"text":"impl Unpin for SurfaceLost","synthetic":true,"types":[]},{"text":"impl Unpin for WindowInUse","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfMemory","synthetic":true,"types":[]},{"text":"impl Unpin for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl Unpin for AllocationError","synthetic":true,"types":[]},{"text":"impl Unpin for BindError","synthetic":true,"types":[]},{"text":"impl Unpin for WaitFor","synthetic":true,"types":[]},{"text":"impl Unpin for ShaderError","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceCreationError","synthetic":true,"types":[]},{"text":"impl Unpin for HostExecutionError","synthetic":true,"types":[]},{"text":"impl Unpin for Aspects","synthetic":true,"types":[]},{"text":"impl Unpin for FormatDesc","synthetic":true,"types":[]},{"text":"impl Unpin for FormatBits","synthetic":true,"types":[]},{"text":"impl Unpin for Swizzle","synthetic":true,"types":[]},{"text":"impl Unpin for Properties","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFeature","synthetic":true,"types":[]},{"text":"impl Unpin for BufferFeature","synthetic":true,"types":[]},{"text":"impl Unpin for BaseFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for R8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for R8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for R8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for R8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for R8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for R8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for R8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl Unpin for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl Unpin for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl Unpin for R16Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for R16Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for R16Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for R16Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for R16Uint","synthetic":true,"types":[]},{"text":"impl Unpin for R16Sint","synthetic":true,"types":[]},{"text":"impl Unpin for R16Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for R32Uint","synthetic":true,"types":[]},{"text":"impl Unpin for R32Sint","synthetic":true,"types":[]},{"text":"impl Unpin for R32Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rg32Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg32Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for R64Uint","synthetic":true,"types":[]},{"text":"impl Unpin for R64Sint","synthetic":true,"types":[]},{"text":"impl Unpin for R64Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rg64Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg64Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl Unpin for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl Unpin for D16Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for D32Sfloat","synthetic":true,"types":[]},{"text":"impl Unpin for S8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl Unpin for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Component","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelType","synthetic":true,"types":[]},{"text":"impl Unpin for SurfaceType","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for Extent","synthetic":true,"types":[]},{"text":"impl Unpin for Offset","synthetic":true,"types":[]},{"text":"impl Unpin for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl Unpin for Usage","synthetic":true,"types":[]},{"text":"impl Unpin for Lod","synthetic":true,"types":[]},{"text":"impl Unpin for PackedColor","synthetic":true,"types":[]},{"text":"impl Unpin for SamplerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Access","synthetic":true,"types":[]},{"text":"impl Unpin for Subresource","synthetic":true,"types":[]},{"text":"impl Unpin for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl Unpin for SubresourceRange","synthetic":true,"types":[]},{"text":"impl Unpin for FormatProperties","synthetic":true,"types":[]},{"text":"impl Unpin for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl Unpin for Tiling","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for ViewError","synthetic":true,"types":[]},{"text":"impl Unpin for LayerError","synthetic":true,"types":[]},{"text":"impl Unpin for Filter","synthetic":true,"types":[]},{"text":"impl Unpin for Anisotropic","synthetic":true,"types":[]},{"text":"impl Unpin for CubeFace","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for ViewKind","synthetic":true,"types":[]},{"text":"impl Unpin for WrapMode","synthetic":true,"types":[]},{"text":"impl Unpin for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, T&gt; Unpin for Reader&lt;'a, B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, T&gt; Unpin for Writer&lt;'a, B, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Properties","synthetic":true,"types":[]},{"text":"impl Unpin for Dependencies","synthetic":true,"types":[]},{"text":"impl Unpin for Requirements","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for Barrier&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AttachmentOps","synthetic":true,"types":[]},{"text":"impl Unpin for Attachment","synthetic":true,"types":[]},{"text":"impl Unpin for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for Subpass&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Unpin for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Unpin for SubpassRef","synthetic":true,"types":[]},{"text":"impl Unpin for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Unpin for CommandPool&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for ComputePipelineDesc&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; Unpin for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for DescriptorSetCopy&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Rect","synthetic":true,"types":[]},{"text":"impl Unpin for ClearRect","synthetic":true,"types":[]},{"text":"impl Unpin for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for GraphicsShaderSet&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for GraphicsPipelineDesc&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DepthBias","synthetic":true,"types":[]},{"text":"impl Unpin for Rasterizer","synthetic":true,"types":[]},{"text":"impl Unpin for BlendDesc","synthetic":true,"types":[]},{"text":"impl Unpin for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Unpin for AttributeDesc","synthetic":true,"types":[]},{"text":"impl Unpin for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl Unpin for ColorMask","synthetic":true,"types":[]},{"text":"impl Unpin for BlendState","synthetic":true,"types":[]},{"text":"impl Unpin for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl Unpin for DepthTest","synthetic":true,"types":[]},{"text":"impl Unpin for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StencilTest","synthetic":true,"types":[]},{"text":"impl Unpin for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Unpin for Face","synthetic":true,"types":[]},{"text":"impl Unpin for PipelineStage","synthetic":true,"types":[]},{"text":"impl Unpin for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for EntryPoint&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorType","synthetic":true,"types":[]},{"text":"impl Unpin for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for Descriptor&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PolygonMode","synthetic":true,"types":[]},{"text":"impl Unpin for FrontFace","synthetic":true,"types":[]},{"text":"impl Unpin for LogicOp","synthetic":true,"types":[]},{"text":"impl Unpin for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Unpin for PrimitiveRestart","synthetic":true,"types":[]},{"text":"impl Unpin for Comparison","synthetic":true,"types":[]},{"text":"impl Unpin for Factor","synthetic":true,"types":[]},{"text":"impl Unpin for BlendOp","synthetic":true,"types":[]},{"text":"impl Unpin for StencilOp","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for Stage","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for BasePipeline&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for Query&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ResultFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; Unpin for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Unpin for CommandQueue&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for QueueType","synthetic":true,"types":[]},{"text":"impl Unpin for General","synthetic":true,"types":[]},{"text":"impl Unpin for Graphics","synthetic":true,"types":[]},{"text":"impl Unpin for Compute","synthetic":true,"types":[]},{"text":"impl Unpin for Transfer","synthetic":true,"types":[]},{"text":"impl Unpin for GraphicsOrCompute","synthetic":true,"types":[]},{"text":"impl Unpin for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Unpin for QueueGroup&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Queues&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Extent2D","synthetic":true,"types":[]},{"text":"impl Unpin for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl Unpin for CompositeAlpha","synthetic":true,"types":[]},{"text":"impl Unpin for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Suboptimal","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for PresentMode","synthetic":true,"types":[]},{"text":"impl Unpin for AcquireError","synthetic":true,"types":[]},{"text":"impl Unpin for PresentError","synthetic":true,"types":[]},{"text":"impl Unpin for InitError","synthetic":true,"types":[]}];
implementors["gif"] = [{"text":"impl&lt;'a&gt; Unpin for Frame&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StreamingDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryLimit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Extension","synthetic":true,"types":[]},{"text":"impl Unpin for DisposalMethod","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Decoded&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DecodingError","synthetic":true,"types":[]},{"text":"impl Unpin for ColorOutput","synthetic":true,"types":[]},{"text":"impl Unpin for Extensions","synthetic":true,"types":[]},{"text":"impl Unpin for ExtensionData","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]}];
implementors["gimli"] = [{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for LineEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Register","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugAbbrevOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugAddrBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugAddrIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugInfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugLineOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugLineStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocationListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugLocListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugLocListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugMacinfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugMacroOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RangeListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugRngListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugRngListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugStrOffsetsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugStrOffsetsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugTypesOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DebugTypeSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EhFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Arm","synthetic":true,"types":[]},{"text":"impl Unpin for X86","synthetic":true,"types":[]},{"text":"impl Unpin for X86_64","synthetic":true,"types":[]},{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnitSectionOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SectionId","synthetic":true,"types":[]},{"text":"impl Unpin for RunTimeEndian","synthetic":true,"types":[]},{"text":"impl Unpin for DwUt","synthetic":true,"types":[]},{"text":"impl Unpin for DwCfa","synthetic":true,"types":[]},{"text":"impl Unpin for DwChildren","synthetic":true,"types":[]},{"text":"impl Unpin for DwTag","synthetic":true,"types":[]},{"text":"impl Unpin for DwAt","synthetic":true,"types":[]},{"text":"impl Unpin for DwForm","synthetic":true,"types":[]},{"text":"impl Unpin for DwAte","synthetic":true,"types":[]},{"text":"impl Unpin for DwLle","synthetic":true,"types":[]},{"text":"impl Unpin for DwDs","synthetic":true,"types":[]},{"text":"impl Unpin for DwEnd","synthetic":true,"types":[]},{"text":"impl Unpin for DwAccess","synthetic":true,"types":[]},{"text":"impl Unpin for DwVis","synthetic":true,"types":[]},{"text":"impl Unpin for DwVirtuality","synthetic":true,"types":[]},{"text":"impl Unpin for DwLang","synthetic":true,"types":[]},{"text":"impl Unpin for DwAddr","synthetic":true,"types":[]},{"text":"impl Unpin for DwId","synthetic":true,"types":[]},{"text":"impl Unpin for DwCc","synthetic":true,"types":[]},{"text":"impl Unpin for DwInl","synthetic":true,"types":[]},{"text":"impl Unpin for DwOrd","synthetic":true,"types":[]},{"text":"impl Unpin for DwDsc","synthetic":true,"types":[]},{"text":"impl Unpin for DwIdx","synthetic":true,"types":[]},{"text":"impl Unpin for DwDefaulted","synthetic":true,"types":[]},{"text":"impl Unpin for DwLns","synthetic":true,"types":[]},{"text":"impl Unpin for DwLne","synthetic":true,"types":[]},{"text":"impl Unpin for DwLnct","synthetic":true,"types":[]},{"text":"impl Unpin for DwMacro","synthetic":true,"types":[]},{"text":"impl Unpin for DwRle","synthetic":true,"types":[]},{"text":"impl Unpin for DwOp","synthetic":true,"types":[]},{"text":"impl Unpin for DwEhPe","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugAddr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ParsedEhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for EhHdrTable&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EhFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BaseAddresses","synthetic":true,"types":[]},{"text":"impl Unpin for SectionBaseAddresses","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Unpin for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Augmentation","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Unpin for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for UninitializedUnwindContext&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for UnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for UnwindTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'iter, R&gt; Unpin for RegisterRuleIter&lt;'iter, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for UnwindTableRow&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for CallFrameInstructionIter&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Dwarf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for Unit&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RangeIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, Endian&gt; Unpin for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReaderOffsetId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugAbbrev&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Abbreviations","synthetic":true,"types":[]},{"text":"impl Unpin for Abbreviation","synthetic":true,"types":[]},{"text":"impl Unpin for AttributeSpecification","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ArangeEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugAranges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ArangeEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugLine&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Program, Offset&gt; Unpin for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LineInstructions&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LineRow","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LineSequence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FileEntryFormat","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugLoc&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugLocLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LocationLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RawLocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LocationListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Expression&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for OperationIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Evaluation&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugPubNames&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PubNamesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugPubTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PubTypesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugRanges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugRngLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RangeLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RawRngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugStrOffsets&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugLineStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnitOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CompilationUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for CompilationUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&gt; Unpin for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Attribute&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; Unpin for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;'abbrev: 'entry,<br>&nbsp;&nbsp;&nbsp;&nbsp;'unit: 'entry,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Unpin for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Unpin for EntriesCursor&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Unpin for EntriesTree&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Unpin for EntriesTreeNode&lt;'abbrev, 'unit, 'tree, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'abbrev: 'tree,<br>&nbsp;&nbsp;&nbsp;&nbsp;'unit: 'tree,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Unpin for EntriesTreeIter&lt;'abbrev, 'unit, 'tree, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'abbrev: 'tree,<br>&nbsp;&nbsp;&nbsp;&nbsp;'unit: 'tree,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DebugTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for TypeUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for TypeUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Unpin for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CfaRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RegisterRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CallFrameInstruction&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Pointer","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DieReference&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EvaluationResult&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawRngListEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Unpin for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ValueType","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["glsl_layout"] = [{"text":"impl&lt;T&gt; Unpin for Element&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AsStd140&gt;::Align: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for bmat2x2","synthetic":true,"types":[]},{"text":"impl Unpin for bmat2x3","synthetic":true,"types":[]},{"text":"impl Unpin for bmat2x4","synthetic":true,"types":[]},{"text":"impl Unpin for bmat3x2","synthetic":true,"types":[]},{"text":"impl Unpin for bmat3x3","synthetic":true,"types":[]},{"text":"impl Unpin for bmat3x4","synthetic":true,"types":[]},{"text":"impl Unpin for bmat4x2","synthetic":true,"types":[]},{"text":"impl Unpin for bmat4x3","synthetic":true,"types":[]},{"text":"impl Unpin for bmat4x4","synthetic":true,"types":[]},{"text":"impl Unpin for imat2x2","synthetic":true,"types":[]},{"text":"impl Unpin for imat2x3","synthetic":true,"types":[]},{"text":"impl Unpin for imat2x4","synthetic":true,"types":[]},{"text":"impl Unpin for imat3x2","synthetic":true,"types":[]},{"text":"impl Unpin for imat3x3","synthetic":true,"types":[]},{"text":"impl Unpin for imat3x4","synthetic":true,"types":[]},{"text":"impl Unpin for imat4x2","synthetic":true,"types":[]},{"text":"impl Unpin for imat4x3","synthetic":true,"types":[]},{"text":"impl Unpin for imat4x4","synthetic":true,"types":[]},{"text":"impl Unpin for umat2x2","synthetic":true,"types":[]},{"text":"impl Unpin for umat2x3","synthetic":true,"types":[]},{"text":"impl Unpin for umat2x4","synthetic":true,"types":[]},{"text":"impl Unpin for umat3x2","synthetic":true,"types":[]},{"text":"impl Unpin for umat3x3","synthetic":true,"types":[]},{"text":"impl Unpin for umat3x4","synthetic":true,"types":[]},{"text":"impl Unpin for umat4x2","synthetic":true,"types":[]},{"text":"impl Unpin for umat4x3","synthetic":true,"types":[]},{"text":"impl Unpin for umat4x4","synthetic":true,"types":[]},{"text":"impl Unpin for mat2x2","synthetic":true,"types":[]},{"text":"impl Unpin for mat2x3","synthetic":true,"types":[]},{"text":"impl Unpin for mat2x4","synthetic":true,"types":[]},{"text":"impl Unpin for mat3x2","synthetic":true,"types":[]},{"text":"impl Unpin for mat3x3","synthetic":true,"types":[]},{"text":"impl Unpin for mat3x4","synthetic":true,"types":[]},{"text":"impl Unpin for mat4x2","synthetic":true,"types":[]},{"text":"impl Unpin for mat4x3","synthetic":true,"types":[]},{"text":"impl Unpin for mat4x4","synthetic":true,"types":[]},{"text":"impl Unpin for dmat2x2","synthetic":true,"types":[]},{"text":"impl Unpin for dmat2x3","synthetic":true,"types":[]},{"text":"impl Unpin for dmat2x4","synthetic":true,"types":[]},{"text":"impl Unpin for dmat3x2","synthetic":true,"types":[]},{"text":"impl Unpin for dmat3x3","synthetic":true,"types":[]},{"text":"impl Unpin for dmat3x4","synthetic":true,"types":[]},{"text":"impl Unpin for dmat4x2","synthetic":true,"types":[]},{"text":"impl Unpin for dmat4x3","synthetic":true,"types":[]},{"text":"impl Unpin for dmat4x4","synthetic":true,"types":[]},{"text":"impl Unpin for boolean","synthetic":true,"types":[]},{"text":"impl Unpin for bvec2","synthetic":true,"types":[]},{"text":"impl Unpin for bvec3","synthetic":true,"types":[]},{"text":"impl Unpin for bvec4","synthetic":true,"types":[]},{"text":"impl Unpin for ivec2","synthetic":true,"types":[]},{"text":"impl Unpin for ivec3","synthetic":true,"types":[]},{"text":"impl Unpin for ivec4","synthetic":true,"types":[]},{"text":"impl Unpin for uvec2","synthetic":true,"types":[]},{"text":"impl Unpin for uvec3","synthetic":true,"types":[]},{"text":"impl Unpin for uvec4","synthetic":true,"types":[]},{"text":"impl Unpin for vec2","synthetic":true,"types":[]},{"text":"impl Unpin for vec3","synthetic":true,"types":[]},{"text":"impl Unpin for vec4","synthetic":true,"types":[]},{"text":"impl Unpin for dvec2","synthetic":true,"types":[]},{"text":"impl Unpin for dvec3","synthetic":true,"types":[]},{"text":"impl Unpin for dvec4","synthetic":true,"types":[]}];
implementors["gltf"] = [{"text":"impl&lt;'a&gt; Unpin for Animation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Accessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Glb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Camera&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Image&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Material&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Mesh&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Primitive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Node&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Scene&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Skin&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Texture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Gltf","synthetic":true,"types":[]},{"text":"impl Unpin for Document","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for SparseIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ItemIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SparseIndicesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Indices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Sparse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexType","synthetic":true,"types":[]},{"text":"impl&lt;'a, 's, F&gt; Unpin for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Channel&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Sampler&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Target&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Channels&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Samplers&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Rotations&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MorphTargetWeights&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadOutputs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for I8","synthetic":true,"types":[]},{"text":"impl Unpin for U8","synthetic":true,"types":[]},{"text":"impl Unpin for I16","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl Unpin for F32","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for I8","synthetic":true,"types":[]},{"text":"impl Unpin for U8","synthetic":true,"types":[]},{"text":"impl Unpin for I16","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl Unpin for F32","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for View&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Source&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Orthographic&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Perspective&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Projection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Source&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ExtensionsUsed&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ExtensionsRequired&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Accessors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Animations&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffers&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Views&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cameras&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Images&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lights&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Materials&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Meshes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Nodes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Samplers&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Scenes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Skins&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Textures&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Light&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PbrMetallicRoughness&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NormalTexture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OcclusionTexture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Bounds&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MorphTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 's, F&gt; Unpin for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MorphTargets&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Primitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 's, F&gt; Unpin for ReadMorphTargets&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadColors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadJoints&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadTexCoords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadWeights&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RgbU8","synthetic":true,"types":[]},{"text":"impl Unpin for RgbU16","synthetic":true,"types":[]},{"text":"impl Unpin for RgbF32","synthetic":true,"types":[]},{"text":"impl Unpin for RgbaU8","synthetic":true,"types":[]},{"text":"impl Unpin for RgbaU16","synthetic":true,"types":[]},{"text":"impl Unpin for RgbaF32","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for U32","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for U8","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl Unpin for F32","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CastingIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for U8","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl Unpin for F32","synthetic":true,"types":[]},{"text":"impl Unpin for Transform","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Nodes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Children&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 's, F&gt; Unpin for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Joints&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Info&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Sampler&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["gltf_json"] = [{"text":"impl Unpin for Accessor","synthetic":true,"types":[]},{"text":"impl Unpin for Animation","synthetic":true,"types":[]},{"text":"impl Unpin for Asset","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for Camera","synthetic":true,"types":[]},{"text":"impl Unpin for Image","synthetic":true,"types":[]},{"text":"impl Unpin for Material","synthetic":true,"types":[]},{"text":"impl Unpin for Mesh","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl Unpin for Scene","synthetic":true,"types":[]},{"text":"impl Unpin for Skin","synthetic":true,"types":[]},{"text":"impl Unpin for Texture","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Index&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Root","synthetic":true,"types":[]},{"text":"impl Unpin for IndexComponentType","synthetic":true,"types":[]},{"text":"impl Unpin for GenericComponentType","synthetic":true,"types":[]},{"text":"impl Unpin for ComponentType","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Indices","synthetic":true,"types":[]},{"text":"impl Unpin for Sparse","synthetic":true,"types":[]},{"text":"impl Unpin for Values","synthetic":true,"types":[]},{"text":"impl Unpin for Channel","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for Sampler","synthetic":true,"types":[]},{"text":"impl Unpin for Interpolation","synthetic":true,"types":[]},{"text":"impl Unpin for Property","synthetic":true,"types":[]},{"text":"impl Unpin for View","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for Orthographic","synthetic":true,"types":[]},{"text":"impl Unpin for Perspective","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Accessor","synthetic":true,"types":[]},{"text":"impl Unpin for Indices","synthetic":true,"types":[]},{"text":"impl Unpin for Sparse","synthetic":true,"types":[]},{"text":"impl Unpin for Values","synthetic":true,"types":[]},{"text":"impl Unpin for Animation","synthetic":true,"types":[]},{"text":"impl Unpin for Channel","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for Sampler","synthetic":true,"types":[]},{"text":"impl Unpin for Asset","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for View","synthetic":true,"types":[]},{"text":"impl Unpin for Camera","synthetic":true,"types":[]},{"text":"impl Unpin for Orthographic","synthetic":true,"types":[]},{"text":"impl Unpin for Perspective","synthetic":true,"types":[]},{"text":"impl Unpin for Image","synthetic":true,"types":[]},{"text":"impl Unpin for Material","synthetic":true,"types":[]},{"text":"impl Unpin for PbrMetallicRoughness","synthetic":true,"types":[]},{"text":"impl Unpin for NormalTexture","synthetic":true,"types":[]},{"text":"impl Unpin for OcclusionTexture","synthetic":true,"types":[]},{"text":"impl Unpin for Mesh","synthetic":true,"types":[]},{"text":"impl Unpin for Primitive","synthetic":true,"types":[]},{"text":"impl Unpin for Root","synthetic":true,"types":[]},{"text":"impl Unpin for KhrLightsPunctual","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl Unpin for Scene","synthetic":true,"types":[]},{"text":"impl Unpin for KhrLightsPunctual","synthetic":true,"types":[]},{"text":"impl Unpin for Light","synthetic":true,"types":[]},{"text":"impl Unpin for Spot","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Skin","synthetic":true,"types":[]},{"text":"impl Unpin for Sampler","synthetic":true,"types":[]},{"text":"impl Unpin for Texture","synthetic":true,"types":[]},{"text":"impl Unpin for Info","synthetic":true,"types":[]},{"text":"impl Unpin for Void","synthetic":true,"types":[]},{"text":"impl Unpin for MimeType","synthetic":true,"types":[]},{"text":"impl Unpin for PbrMetallicRoughness","synthetic":true,"types":[]},{"text":"impl Unpin for NormalTexture","synthetic":true,"types":[]},{"text":"impl Unpin for OcclusionTexture","synthetic":true,"types":[]},{"text":"impl Unpin for AlphaCutoff","synthetic":true,"types":[]},{"text":"impl Unpin for EmissiveFactor","synthetic":true,"types":[]},{"text":"impl Unpin for PbrBaseColorFactor","synthetic":true,"types":[]},{"text":"impl Unpin for StrengthFactor","synthetic":true,"types":[]},{"text":"impl Unpin for AlphaMode","synthetic":true,"types":[]},{"text":"impl Unpin for Primitive","synthetic":true,"types":[]},{"text":"impl Unpin for MorphTarget","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for Semantic","synthetic":true,"types":[]},{"text":"impl Unpin for UnitQuaternion","synthetic":true,"types":[]},{"text":"impl Unpin for Sampler","synthetic":true,"types":[]},{"text":"impl Unpin for Info","synthetic":true,"types":[]},{"text":"impl Unpin for MagFilter","synthetic":true,"types":[]},{"text":"impl Unpin for MinFilter","synthetic":true,"types":[]},{"text":"impl Unpin for WrappingMode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Checked&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["glyph_brush"] = [{"text":"impl&lt;'a, H&gt; Unpin for GlyphBrushBuilder&lt;'a, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'font, V, H&gt; Unpin for GlyphBrush&lt;'font, V, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphVertex","synthetic":true,"types":[]},{"text":"impl&lt;'font, H&gt; Unpin for GlyphCalculator&lt;'font, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'brush, 'font, H&gt; Unpin for GlyphCalculatorGuard&lt;'brush, 'font, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;'font: 'brush,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, H&gt; Unpin for GlyphCalculatorBuilder&lt;'a, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedVariedSection","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedSectionText","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariedSection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Section&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for BrushAction&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BrushError","synthetic":true,"types":[]}];
implementors["glyph_brush_layout"] = [{"text":"impl Unpin for FontId","synthetic":true,"types":[]},{"text":"impl Unpin for SectionGeometry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SectionText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for Layout&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HorizontalAlign","synthetic":true,"types":[]},{"text":"impl Unpin for VerticalAlign","synthetic":true,"types":[]},{"text":"impl Unpin for LineBreak","synthetic":true,"types":[]},{"text":"impl Unpin for BuiltInLineBreaker","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphChange","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S&gt; Unpin for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Unpin for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RawOccupiedEntryMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["hibitset"] = [{"text":"impl Unpin for AtomicBitSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BitIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for DrainBitIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BitParIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for BitProducer&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BitSetAll","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for BitSetAnd&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for BitSetNot&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for BitSetOr&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for BitSetXor&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BitSet","synthetic":true,"types":[]}];
implementors["hound"] = [{"text":"impl&lt;R&gt; Unpin for WavReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S&gt; Unpin for WavIntoSamples&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'wr, R, S&gt; Unpin for WavSamples&lt;'wr, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'parent, W&gt; Unpin for SampleWriter16&lt;'parent, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WavWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WavSpec","synthetic":true,"types":[]},{"text":"impl Unpin for SampleFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["humantime"] = [{"text":"impl Unpin for FormattedDuration","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Rfc3339Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["image"] = [{"text":"impl&lt;T&gt; Unpin for Luma&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LumaA&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rgb&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rgba&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Bgr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Bgra&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Progress","synthetic":true,"types":[]},{"text":"impl&lt;'a, I:&nbsp;?Sized&gt; Unpin for Pixels&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for SubImage&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, Container&gt; Unpin for ImageBuffer&lt;P, Container&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Container: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Delay","synthetic":true,"types":[]},{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Frames&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ColorType","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedColorType","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFormat","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOutputFormat","synthetic":true,"types":[]},{"text":"impl Unpin for DynamicImage","synthetic":true,"types":[]},{"text":"impl Unpin for UnsupportedError","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingError","synthetic":true,"types":[]},{"text":"impl Unpin for ParameterError","synthetic":true,"types":[]},{"text":"impl Unpin for DecodingError","synthetic":true,"types":[]},{"text":"impl Unpin for LimitError","synthetic":true,"types":[]},{"text":"impl Unpin for ImageError","synthetic":true,"types":[]},{"text":"impl Unpin for UnsupportedErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ParameterErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for LimitErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFormatHint","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for EnumeratePixels&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for EnumeratePixelsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for EnumerateRows&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for EnumerateRowsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for Pixels&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for PixelsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for Rows&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for RowsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Rect","synthetic":true,"types":[]},{"text":"impl Unpin for NeuQuant","synthetic":true,"types":[]},{"text":"impl Unpin for FilterType","synthetic":true,"types":[]},{"text":"impl Unpin for BiLevel","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Buffer&gt; Unpin for FlatSamples&lt;Buffer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SampleLayout","synthetic":true,"types":[]},{"text":"impl&lt;Buffer, P&gt; Unpin for View&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Buffer, P&gt; Unpin for ViewMut&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for NormalForm","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for JpegDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for JpegEncoder&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PixelDensity","synthetic":true,"types":[]},{"text":"impl Unpin for PixelDensityUnit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PngReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for PngDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ApngDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for PngEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for FilterType","synthetic":true,"types":[]}];
implementors["inflate"] = [{"text":"impl&lt;W&gt; Unpin for InflateWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoderBuf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for InflateStream","synthetic":true,"types":[]}];
implementors["intl_memoizer"] = [{"text":"impl Unpin for IntlLangMemoizer","synthetic":true,"types":[]},{"text":"impl Unpin for IntlMemoizer","synthetic":true,"types":[]},{"text":"impl Unpin for IntlLangMemoizer","synthetic":true,"types":[]}];
implementors["intl_pluralrules"] = [{"text":"impl Unpin for PluralRules","synthetic":true,"types":[]},{"text":"impl Unpin for PluralCategory","synthetic":true,"types":[]},{"text":"impl Unpin for PluralRuleType","synthetic":true,"types":[]},{"text":"impl Unpin for PluralOperands","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Unpin for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, Pred&gt; Unpin for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; Unpin for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for FormatWith&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for IntoChunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunk&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; Unpin for GroupBy&lt;K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Group&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; Unpin for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; Unpin for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ImageInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PixelFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for UnsupportedFeature","synthetic":true,"types":[]}];
implementors["laminar"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for LinkConditioner","synthetic":true,"types":[]},{"text":"impl Unpin for Socket","synthetic":true,"types":[]},{"text":"impl Unpin for Packet","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for SocketEvent","synthetic":true,"types":[]},{"text":"impl Unpin for DeliveryGuarantee","synthetic":true,"types":[]},{"text":"impl Unpin for OrderingGuarantee","synthetic":true,"types":[]}];
implementors["lewton"] = [{"text":"impl Unpin for VorbisError","synthetic":true,"types":[]},{"text":"impl Unpin for IdentHeader","synthetic":true,"types":[]},{"text":"impl Unpin for CommentHeader","synthetic":true,"types":[]},{"text":"impl Unpin for SetupHeader","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderReadError","synthetic":true,"types":[]},{"text":"impl Unpin for PreviousWindowRight","synthetic":true,"types":[]},{"text":"impl Unpin for AudioReadError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OggStreamReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for InterleavedSamples&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lexical"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Result&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for RoundingKind","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Unpin for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; Unpin for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; Unpin for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Unpin for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Unpin for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Unpin for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Unpin for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Octant","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Unpin for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Unpin for GuardSend","synthetic":true,"types":[]},{"text":"impl Unpin for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for Mutex&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G&gt; Unpin for RawReentrantMutex&lt;R, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutex&lt;R, G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for RwLock&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for LevelFilter","synthetic":true,"types":[]}];
implementors["lyon_geom"] = [{"text":"impl&lt;S&gt; Unpin for QuadraticBezierSegment&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for CubicBezierSegment&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Triangle&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for LineSegment&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Line&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for LineEquation&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Arc&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SvgArc&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ArcFlags","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Monotonic&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BezierSegment&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Flattened&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lyon_path"] = [{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Unpin for PathSlice&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Cursor","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Unpin for Iter&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PathState","synthetic":true,"types":[]},{"text":"impl Unpin for VertexId","synthetic":true,"types":[]},{"text":"impl Unpin for SvgEvent","synthetic":true,"types":[]},{"text":"impl Unpin for PathEvent","synthetic":true,"types":[]},{"text":"impl Unpin for QuadraticEvent","synthetic":true,"types":[]},{"text":"impl Unpin for FlattenedEvent","synthetic":true,"types":[]},{"text":"impl Unpin for FillRule","synthetic":true,"types":[]},{"text":"impl&lt;SvgIter&gt; Unpin for PathEvents&lt;SvgIter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SvgIter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for Flattened&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for SvgPathIter&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Transformed&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for FromPolyline&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for BezierSegments&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for LineSegments&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Builder&gt; Unpin for SvgPathBuilder&lt;Builder&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Builder: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Builder&gt; Unpin for FlatteningBuilder&lt;Builder&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Builder: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lzw"] = [{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DecoderEarlyChange&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LsbReader","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for LsbWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MsbReader","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for MsbWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Bits","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Unpin for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Unpin for MmapOptions","synthetic":true,"types":[]},{"text":"impl Unpin for Mmap","synthetic":true,"types":[]},{"text":"impl Unpin for MmapMut","synthetic":true,"types":[]}];
implementors["minimp3"] = [{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["minimp3_sys"] = [{"text":"impl Unpin for __fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for mp3dec_frame_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for mp3dec_t","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Unpin for StreamResult","synthetic":true,"types":[]},{"text":"impl Unpin for MZFlush","synthetic":true,"types":[]},{"text":"impl Unpin for MZStatus","synthetic":true,"types":[]},{"text":"impl Unpin for MZError","synthetic":true,"types":[]},{"text":"impl Unpin for DataFormat","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Unpin for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Unpin for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Unpin for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Unpin for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Unpin for MinReset","synthetic":true,"types":[]},{"text":"impl Unpin for ZeroReset","synthetic":true,"types":[]},{"text":"impl Unpin for FullReset","synthetic":true,"types":[]},{"text":"impl Unpin for InflateState","synthetic":true,"types":[]}];
implementors["mint"] = [{"text":"impl&lt;T&gt; Unpin for RowMatrix2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix2x3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix2x4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix3x2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix3x4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix4x3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix4x2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RowMatrix4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix2x3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix2x4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix3x2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix3x4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix4x2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix4x3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ColumnMatrix4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Quaternion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for EulerAngles&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Vector2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Vector3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Vector4&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Point2&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Point3&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IntraXYZ","synthetic":true,"types":[]},{"text":"impl Unpin for IntraZXZ","synthetic":true,"types":[]},{"text":"impl Unpin for IntraZYX","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraXYZ","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraZXZ","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraZYX","synthetic":true,"types":[]}];
implementors["minterpolate"] = [{"text":"impl&lt;T&gt; Unpin for InterpolationFunction&lt;T&gt;","synthetic":true,"types":[]}];
implementors["nalgebra"] = [{"text":"impl&lt;N, R, C, S&gt; Unpin for Matrix&lt;N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Unit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EuclideanNorm","synthetic":true,"types":[]},{"text":"impl Unpin for LpNorm","synthetic":true,"types":[]},{"text":"impl Unpin for UniformNorm","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; Unpin for ArrayStorage&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;R as DimName&gt;::Value as Mul&lt;&lt;C as DimName&gt;::Value&gt;&gt;::Output as ArrayLength&lt;N&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, RStride, CStride&gt; Unpin for SliceStorage&lt;'a, N, R, C, RStride, CStride&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;CStride: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;RStride: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, RStride, CStride&gt; Unpin for SliceStorageMut&lt;'a, N, R, C, RStride, CStride&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;CStride: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;RStride: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; Unpin for VecStorage&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ShapeConstraint","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for X&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for XY&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for XYZ&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for XYZW&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for XYZWA&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for XYZWAB&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for IJKW&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M2x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M2x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M2x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M2x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M2x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M3x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M3x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M3x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M3x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M3x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M4x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M4x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M4x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M4x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M4x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M5x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M5x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M5x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M5x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M5x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M6x2&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M6x3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M6x4&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M6x5&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for M6x6&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for Dynamic","synthetic":true,"types":[]},{"text":"impl Unpin for U1","synthetic":true,"types":[]},{"text":"impl Unpin for U0","synthetic":true,"types":[]},{"text":"impl Unpin for U2","synthetic":true,"types":[]},{"text":"impl Unpin for U3","synthetic":true,"types":[]},{"text":"impl Unpin for U4","synthetic":true,"types":[]},{"text":"impl Unpin for U5","synthetic":true,"types":[]},{"text":"impl Unpin for U6","synthetic":true,"types":[]},{"text":"impl Unpin for U7","synthetic":true,"types":[]},{"text":"impl Unpin for U8","synthetic":true,"types":[]},{"text":"impl Unpin for U9","synthetic":true,"types":[]},{"text":"impl Unpin for U10","synthetic":true,"types":[]},{"text":"impl Unpin for U11","synthetic":true,"types":[]},{"text":"impl Unpin for U12","synthetic":true,"types":[]},{"text":"impl Unpin for U13","synthetic":true,"types":[]},{"text":"impl Unpin for U14","synthetic":true,"types":[]},{"text":"impl Unpin for U15","synthetic":true,"types":[]},{"text":"impl Unpin for U16","synthetic":true,"types":[]},{"text":"impl Unpin for U17","synthetic":true,"types":[]},{"text":"impl Unpin for U18","synthetic":true,"types":[]},{"text":"impl Unpin for U19","synthetic":true,"types":[]},{"text":"impl Unpin for U20","synthetic":true,"types":[]},{"text":"impl Unpin for U21","synthetic":true,"types":[]},{"text":"impl Unpin for U22","synthetic":true,"types":[]},{"text":"impl Unpin for U23","synthetic":true,"types":[]},{"text":"impl Unpin for U24","synthetic":true,"types":[]},{"text":"impl Unpin for U25","synthetic":true,"types":[]},{"text":"impl Unpin for U26","synthetic":true,"types":[]},{"text":"impl Unpin for U27","synthetic":true,"types":[]},{"text":"impl Unpin for U28","synthetic":true,"types":[]},{"text":"impl Unpin for U29","synthetic":true,"types":[]},{"text":"impl Unpin for U30","synthetic":true,"types":[]},{"text":"impl Unpin for U31","synthetic":true,"types":[]},{"text":"impl Unpin for U32","synthetic":true,"types":[]},{"text":"impl Unpin for U33","synthetic":true,"types":[]},{"text":"impl Unpin for U34","synthetic":true,"types":[]},{"text":"impl Unpin for U35","synthetic":true,"types":[]},{"text":"impl Unpin for U36","synthetic":true,"types":[]},{"text":"impl Unpin for U37","synthetic":true,"types":[]},{"text":"impl Unpin for U38","synthetic":true,"types":[]},{"text":"impl Unpin for U39","synthetic":true,"types":[]},{"text":"impl Unpin for U40","synthetic":true,"types":[]},{"text":"impl Unpin for U41","synthetic":true,"types":[]},{"text":"impl Unpin for U42","synthetic":true,"types":[]},{"text":"impl Unpin for U43","synthetic":true,"types":[]},{"text":"impl Unpin for U44","synthetic":true,"types":[]},{"text":"impl Unpin for U45","synthetic":true,"types":[]},{"text":"impl Unpin for U46","synthetic":true,"types":[]},{"text":"impl Unpin for U47","synthetic":true,"types":[]},{"text":"impl Unpin for U48","synthetic":true,"types":[]},{"text":"impl Unpin for U49","synthetic":true,"types":[]},{"text":"impl Unpin for U50","synthetic":true,"types":[]},{"text":"impl Unpin for U51","synthetic":true,"types":[]},{"text":"impl Unpin for U52","synthetic":true,"types":[]},{"text":"impl Unpin for U53","synthetic":true,"types":[]},{"text":"impl Unpin for U54","synthetic":true,"types":[]},{"text":"impl Unpin for U55","synthetic":true,"types":[]},{"text":"impl Unpin for U56","synthetic":true,"types":[]},{"text":"impl Unpin for U57","synthetic":true,"types":[]},{"text":"impl Unpin for U58","synthetic":true,"types":[]},{"text":"impl Unpin for U59","synthetic":true,"types":[]},{"text":"impl Unpin for U60","synthetic":true,"types":[]},{"text":"impl Unpin for U61","synthetic":true,"types":[]},{"text":"impl Unpin for U62","synthetic":true,"types":[]},{"text":"impl Unpin for U63","synthetic":true,"types":[]},{"text":"impl Unpin for U64","synthetic":true,"types":[]},{"text":"impl Unpin for U65","synthetic":true,"types":[]},{"text":"impl Unpin for U66","synthetic":true,"types":[]},{"text":"impl Unpin for U67","synthetic":true,"types":[]},{"text":"impl Unpin for U68","synthetic":true,"types":[]},{"text":"impl Unpin for U69","synthetic":true,"types":[]},{"text":"impl Unpin for U70","synthetic":true,"types":[]},{"text":"impl Unpin for U71","synthetic":true,"types":[]},{"text":"impl Unpin for U72","synthetic":true,"types":[]},{"text":"impl Unpin for U73","synthetic":true,"types":[]},{"text":"impl Unpin for U74","synthetic":true,"types":[]},{"text":"impl Unpin for U75","synthetic":true,"types":[]},{"text":"impl Unpin for U76","synthetic":true,"types":[]},{"text":"impl Unpin for U77","synthetic":true,"types":[]},{"text":"impl Unpin for U78","synthetic":true,"types":[]},{"text":"impl Unpin for U79","synthetic":true,"types":[]},{"text":"impl Unpin for U80","synthetic":true,"types":[]},{"text":"impl Unpin for U81","synthetic":true,"types":[]},{"text":"impl Unpin for U82","synthetic":true,"types":[]},{"text":"impl Unpin for U83","synthetic":true,"types":[]},{"text":"impl Unpin for U84","synthetic":true,"types":[]},{"text":"impl Unpin for U85","synthetic":true,"types":[]},{"text":"impl Unpin for U86","synthetic":true,"types":[]},{"text":"impl Unpin for U87","synthetic":true,"types":[]},{"text":"impl Unpin for U88","synthetic":true,"types":[]},{"text":"impl Unpin for U89","synthetic":true,"types":[]},{"text":"impl Unpin for U90","synthetic":true,"types":[]},{"text":"impl Unpin for U91","synthetic":true,"types":[]},{"text":"impl Unpin for U92","synthetic":true,"types":[]},{"text":"impl Unpin for U93","synthetic":true,"types":[]},{"text":"impl Unpin for U94","synthetic":true,"types":[]},{"text":"impl Unpin for U95","synthetic":true,"types":[]},{"text":"impl Unpin for U96","synthetic":true,"types":[]},{"text":"impl Unpin for U97","synthetic":true,"types":[]},{"text":"impl Unpin for U98","synthetic":true,"types":[]},{"text":"impl Unpin for U99","synthetic":true,"types":[]},{"text":"impl Unpin for U100","synthetic":true,"types":[]},{"text":"impl Unpin for U101","synthetic":true,"types":[]},{"text":"impl Unpin for U102","synthetic":true,"types":[]},{"text":"impl Unpin for U103","synthetic":true,"types":[]},{"text":"impl Unpin for U104","synthetic":true,"types":[]},{"text":"impl Unpin for U105","synthetic":true,"types":[]},{"text":"impl Unpin for U106","synthetic":true,"types":[]},{"text":"impl Unpin for U107","synthetic":true,"types":[]},{"text":"impl Unpin for U108","synthetic":true,"types":[]},{"text":"impl Unpin for U109","synthetic":true,"types":[]},{"text":"impl Unpin for U110","synthetic":true,"types":[]},{"text":"impl Unpin for U111","synthetic":true,"types":[]},{"text":"impl Unpin for U112","synthetic":true,"types":[]},{"text":"impl Unpin for U113","synthetic":true,"types":[]},{"text":"impl Unpin for U114","synthetic":true,"types":[]},{"text":"impl Unpin for U115","synthetic":true,"types":[]},{"text":"impl Unpin for U116","synthetic":true,"types":[]},{"text":"impl Unpin for U117","synthetic":true,"types":[]},{"text":"impl Unpin for U118","synthetic":true,"types":[]},{"text":"impl Unpin for U119","synthetic":true,"types":[]},{"text":"impl Unpin for U120","synthetic":true,"types":[]},{"text":"impl Unpin for U121","synthetic":true,"types":[]},{"text":"impl Unpin for U122","synthetic":true,"types":[]},{"text":"impl Unpin for U123","synthetic":true,"types":[]},{"text":"impl Unpin for U124","synthetic":true,"types":[]},{"text":"impl Unpin for U125","synthetic":true,"types":[]},{"text":"impl Unpin for U126","synthetic":true,"types":[]},{"text":"impl Unpin for U127","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for MatrixIter&lt;'a, N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Storage&lt;N, R, C&gt;&gt;::CStride: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Storage&lt;N, R, C&gt;&gt;::RStride: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for MatrixIterMut&lt;'a, N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Storage&lt;N, R, C&gt;&gt;::CStride: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Storage&lt;N, R, C&gt;&gt;::RStride: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for RowIter&lt;'a, N, R, C, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for RowIterMut&lt;'a, N, R, C, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for ColumnIter&lt;'a, N, R, C, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, R, C, S&gt; Unpin for ColumnIterMut&lt;'a, N, R, C, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Point&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Rotation&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Quaternion&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar + Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Translation&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D, R&gt; !Unpin for Isometry&lt;N, D, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D, R&gt; !Unpin for Similarity&lt;N, D, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D, C&gt; !Unpin for Transform&lt;N, D, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D, S&gt; Unpin for Reflection&lt;N, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Orthographic3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar + Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Perspective3&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TGeneral","synthetic":true,"types":[]},{"text":"impl Unpin for TProjective","synthetic":true,"types":[]},{"text":"impl Unpin for TAffine","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; !Unpin for Bidiagonal&lt;N, R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Cholesky&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; !Unpin for FullPivLU&lt;N, R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Hessenberg&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; !Unpin for LU&lt;N, R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !Unpin for PermutationSequence&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; !Unpin for QR&lt;N, R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for Schur&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, R, C&gt; !Unpin for SVD&lt;N, R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for SymmetricEigen&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, D&gt; !Unpin for SymmetricTridiagonal&lt;N, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for GivensRotation&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ComplexField&gt;::RealField: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Unpin for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Errno","synthetic":true,"types":[]},{"text":"impl Unpin for AtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for SealFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl Unpin for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FallocateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FlockArg","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MntFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MqAttr","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PollFd","synthetic":true,"types":[]},{"text":"impl Unpin for PollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for PtyMaster","synthetic":true,"types":[]},{"text":"impl Unpin for CloneFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Unpin for LioOpcode","synthetic":true,"types":[]},{"text":"impl Unpin for LioMode","synthetic":true,"types":[]},{"text":"impl Unpin for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EpollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollEvent","synthetic":true,"types":[]},{"text":"impl Unpin for EpollOp","synthetic":true,"types":[]},{"text":"impl Unpin for EfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Unpin for ProtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MapFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaType","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Unpin for RebootMode","synthetic":true,"types":[]},{"text":"impl Unpin for FdSet","synthetic":true,"types":[]},{"text":"impl Unpin for SigEvent","synthetic":true,"types":[]},{"text":"impl Unpin for SignalIterator","synthetic":true,"types":[]},{"text":"impl Unpin for SaFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SigSet","synthetic":true,"types":[]},{"text":"impl Unpin for SigAction","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Unpin for SigHandler","synthetic":true,"types":[]},{"text":"impl Unpin for SigevNotify","synthetic":true,"types":[]},{"text":"impl Unpin for SfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFd","synthetic":true,"types":[]},{"text":"impl Unpin for UnixAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Unpin for LinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AlgAddr","synthetic":true,"types":[]},{"text":"impl Unpin for SockFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MsgFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CmsgSpace&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AddressFamily","synthetic":true,"types":[]},{"text":"impl Unpin for SockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for InetAddr","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddr","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for SockProtocol","synthetic":true,"types":[]},{"text":"impl Unpin for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SockLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl Unpin for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReusePort","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Unpin for Linger","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for SendTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for Broadcast","synthetic":true,"types":[]},{"text":"impl Unpin for OobInline","synthetic":true,"types":[]},{"text":"impl Unpin for SocketError","synthetic":true,"types":[]},{"text":"impl Unpin for KeepAlive","synthetic":true,"types":[]},{"text":"impl Unpin for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBuf","synthetic":true,"types":[]},{"text":"impl Unpin for SndBuf","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SndBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptConn","synthetic":true,"types":[]},{"text":"impl Unpin for OriginalDst","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Unpin for IpTransparent","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for PassCred","synthetic":true,"types":[]},{"text":"impl Unpin for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SFlag","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for SysInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Termios","synthetic":true,"types":[]},{"text":"impl Unpin for InputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OutputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlags","synthetic":true,"types":[]},{"text":"impl Unpin for LocalFlags","synthetic":true,"types":[]},{"text":"impl Unpin for BaudRate","synthetic":true,"types":[]},{"text":"impl Unpin for SetArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlushArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlowArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Unpin for TimeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for TimeVal","synthetic":true,"types":[]},{"text":"impl Unpin for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UtsName","synthetic":true,"types":[]},{"text":"impl Unpin for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Unpin for WaitStatus","synthetic":true,"types":[]},{"text":"impl Unpin for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Inotify","synthetic":true,"types":[]},{"text":"impl Unpin for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for UContext","synthetic":true,"types":[]},{"text":"impl Unpin for Uid","synthetic":true,"types":[]},{"text":"impl Unpin for Gid","synthetic":true,"types":[]},{"text":"impl Unpin for Pid","synthetic":true,"types":[]},{"text":"impl Unpin for AccessFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ForkResult","synthetic":true,"types":[]},{"text":"impl Unpin for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Whence","synthetic":true,"types":[]},{"text":"impl Unpin for PathconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for SysconfVar","synthetic":true,"types":[]}];
implementors["nodrop"] = [{"text":"impl&lt;T&gt; Unpin for NoDrop&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Unpin for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TryFromBigIntError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BigUint","synthetic":true,"types":[]},{"text":"impl Unpin for BigInt","synthetic":true,"types":[]},{"text":"impl Unpin for Sign","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Unpin for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Unpin for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Unpin for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]}];
implementors["object"] = [{"text":"impl Unpin for Architecture","synthetic":true,"types":[]},{"text":"impl Unpin for AddressSize","synthetic":true,"types":[]},{"text":"impl Unpin for BinaryFormat","synthetic":true,"types":[]},{"text":"impl Unpin for SectionKind","synthetic":true,"types":[]},{"text":"impl Unpin for SymbolKind","synthetic":true,"types":[]},{"text":"impl Unpin for SymbolScope","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationKind","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for FileFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SectionFlags","synthetic":true,"types":[]},{"text":"impl&lt;Section&gt; Unpin for SymbolFlags&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]},{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Endianness","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for Bytes&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for StringTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for File&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for SegmentIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for Segment&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for SectionIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for Section&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for SymbolIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for RelocationIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for SectionIndex","synthetic":true,"types":[]},{"text":"impl Unpin for SymbolIndex","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for Symbol&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for SymbolMap&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Relocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for CompressedData&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SymbolSection","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionFormat","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for CoffFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for SectionTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffSegmentIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffSegment&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffSectionIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffSection&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for SymbolTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffSymbolIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for CoffRelocationIterator&lt;'data, 'file&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Unpin for ElfFile&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfSegmentIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfSegment&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Unpin for SectionTable&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfSection&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Unpin for SymbolTable&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfSymbolIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationSections","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Unpin for ElfRelocationIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Unpin for ElfNoteIterator&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Unpin for ElfNote&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Unpin for MachOFile&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachOSegmentIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachOSegment&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachOSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachOSection&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Unpin for SymbolTable&lt;'data, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachOSymbolIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Unpin for MachORelocationIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Pe&gt; Unpin for PeFile&lt;'data, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Unpin for PeSegmentIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Unpin for PeSegment&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Unpin for PeSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Unpin for PeSection&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'data: 'file,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Unpin for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for FileHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for FileHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SectionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SectionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CompressionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CompressionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Sym32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Sym64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Syminfo32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Syminfo64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Rel32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Rela32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Rel64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Rela64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ProgramHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ProgramHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Dyn32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Dyn64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for NoteHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for NoteHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FatHeader","synthetic":true,"types":[]},{"text":"impl Unpin for FatArch32","synthetic":true,"types":[]},{"text":"impl Unpin for FatArch64","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for MachHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for MachHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for LoadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for LcStr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SegmentCommand32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SegmentCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Section32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Section64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Fvmlib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for FvmlibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Dylib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SubFrameworkCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SubClientCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SubUmbrellaCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SubLibraryCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for PreboundDylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylinkerCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ThreadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for RoutinesCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for RoutinesCommand_64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DysymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylibTableOfContents&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylibModule32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylibModule64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DylibReference&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for TwolevelHintsCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for TwolevelHint&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for PrebindCksumCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UuidCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for RpathCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for LinkeditDataCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EncryptionInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EncryptionInfoCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for VersionMinCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BuildVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BuildToolVersion&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DyldInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for LinkerOptionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SymSegCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IdentCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for FvmfileCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EntryPointCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SourceVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for DataInCodeEntry&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for NoteCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Nlist32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Nlist64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Relocation&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ScatteredRelocationInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDosHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOs2Header","synthetic":true,"types":[]},{"text":"impl Unpin for ImageVxdHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFileHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDataDirectory","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOptionalHeader32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageRomOptionalHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOptionalHeader64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageNtHeaders64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageNtHeaders32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageRomHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for Guid","synthetic":true,"types":[]},{"text":"impl Unpin for AnonObjectHeader","synthetic":true,"types":[]},{"text":"impl Unpin for AnonObjectHeaderV2","synthetic":true,"types":[]},{"text":"impl Unpin for AnonObjectHeaderBigobj","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSectionHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSymbol","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSymbolBytes","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSymbolEx","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSymbolExBytes","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolTokenDef","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolFunction","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolFunctionBeginEnd","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolWeak","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolSection","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAuxSymbolCrc","synthetic":true,"types":[]},{"text":"impl Unpin for ImageRelocation","synthetic":true,"types":[]},{"text":"impl Unpin for ImageLinenumber","synthetic":true,"types":[]},{"text":"impl Unpin for ImageBaseRelocation","synthetic":true,"types":[]},{"text":"impl Unpin for ImageArchiveMemberHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageExportDirectory","synthetic":true,"types":[]},{"text":"impl Unpin for ImageImportByName","synthetic":true,"types":[]},{"text":"impl Unpin for ImageTlsDirectory64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageTlsDirectory32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageImportDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for ImageBoundImportDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for ImageBoundForwarderRef","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDelayloadDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResourceDirectory","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResourceDirectoryEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResourceDirectoryString","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResourceDirStringU","synthetic":true,"types":[]},{"text":"impl Unpin for ImageResourceDataEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageLoadConfigCodeIntegrity","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDynamicRelocationTable","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDynamicRelocation32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDynamicRelocation64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDynamicRelocation32V2","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDynamicRelocation64V2","synthetic":true,"types":[]},{"text":"impl Unpin for ImagePrologueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageEpilogueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageLoadConfigDirectory32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageLoadConfigDirectory64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageHotPatchInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ImageHotPatchBase","synthetic":true,"types":[]},{"text":"impl Unpin for ImageHotPatchHashes","synthetic":true,"types":[]},{"text":"impl Unpin for ImageArmRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageArm64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAlpha64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAlphaRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageEnclaveConfig32","synthetic":true,"types":[]},{"text":"impl Unpin for ImageEnclaveConfig64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageEnclaveImport","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDebugDirectory","synthetic":true,"types":[]},{"text":"impl Unpin for ImageCoffSymbolsHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageDebugMisc","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFunctionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFunctionEntry64","synthetic":true,"types":[]},{"text":"impl Unpin for ImageSeparateDebugHeader","synthetic":true,"types":[]},{"text":"impl Unpin for NonPagedDebugInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ImageArchitectureEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImportObjectHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ImageCor20Header","synthetic":true,"types":[]}];
implementors["ogg"] = [{"text":"impl Unpin for Packet","synthetic":true,"types":[]},{"text":"impl Unpin for OggPage","synthetic":true,"types":[]},{"text":"impl Unpin for PageParser","synthetic":true,"types":[]},{"text":"impl Unpin for BasePacketReader","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PacketReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OggReadError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PacketWriter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PacketWriteEndInfo","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Unpin for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["palette"] = [{"text":"impl&lt;C, T&gt; Unpin for Alpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Hsl&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Hsv&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Hwb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Wp, T&gt; Unpin for Lab&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Wp, T&gt; Unpin for Lch&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Wp, T&gt; Unpin for Xyz&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Wp, T&gt; Unpin for Yxy&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LabHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RgbHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Color&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as RgbSpace&gt;::WhitePoint: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Equations","synthetic":true,"types":[]},{"text":"impl Unpin for Parameters","synthetic":true,"types":[]},{"text":"impl&lt;C, T&gt; Unpin for PreAlpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Equation","synthetic":true,"types":[]},{"text":"impl Unpin for Parameter","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Gradient&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Mix&gt;::Scalar: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Unpin for Take&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Mix&gt;::Scalar: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Unpin for Slice&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Mix&gt;::Scalar: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Range&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Luma&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Unpin for Rgb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ConeResponseMatrices&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for Srgb","synthetic":true,"types":[]},{"text":"impl&lt;S, N&gt; Unpin for Gamma&lt;S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for GammaFn&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for F2p2","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Linear&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LinearFn","synthetic":true,"types":[]},{"text":"impl Unpin for A","synthetic":true,"types":[]},{"text":"impl Unpin for B","synthetic":true,"types":[]},{"text":"impl Unpin for C","synthetic":true,"types":[]},{"text":"impl Unpin for D50","synthetic":true,"types":[]},{"text":"impl Unpin for D55","synthetic":true,"types":[]},{"text":"impl Unpin for D65","synthetic":true,"types":[]},{"text":"impl Unpin for D75","synthetic":true,"types":[]},{"text":"impl Unpin for E","synthetic":true,"types":[]},{"text":"impl Unpin for F2","synthetic":true,"types":[]},{"text":"impl Unpin for F7","synthetic":true,"types":[]},{"text":"impl Unpin for F11","synthetic":true,"types":[]},{"text":"impl Unpin for D50Degree10","synthetic":true,"types":[]},{"text":"impl Unpin for D55Degree10","synthetic":true,"types":[]},{"text":"impl Unpin for D65Degree10","synthetic":true,"types":[]},{"text":"impl Unpin for D75Degree10","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawRwLock","synthetic":true,"types":[]},{"text":"impl Unpin for RawThreadId","synthetic":true,"types":[]},{"text":"impl Unpin for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Unpin for ParkToken","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkResult","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkToken","synthetic":true,"types":[]},{"text":"impl Unpin for SpinWait","synthetic":true,"types":[]},{"text":"impl Unpin for FilterOp","synthetic":true,"types":[]},{"text":"impl Unpin for ParkResult","synthetic":true,"types":[]},{"text":"impl Unpin for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Set&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for OrderedMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OrderedSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["png"] = [{"text":"impl Unpin for PixelDimensions","synthetic":true,"types":[]},{"text":"impl Unpin for FrameControl","synthetic":true,"types":[]},{"text":"impl Unpin for AnimationControl","synthetic":true,"types":[]},{"text":"impl Unpin for Info","synthetic":true,"types":[]},{"text":"impl Unpin for Transformations","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OutputInfo","synthetic":true,"types":[]},{"text":"impl Unpin for StreamingDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ColorType","synthetic":true,"types":[]},{"text":"impl Unpin for BitDepth","synthetic":true,"types":[]},{"text":"impl Unpin for Unit","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]},{"text":"impl Unpin for Decoded","synthetic":true,"types":[]},{"text":"impl Unpin for DecodingError","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingError","synthetic":true,"types":[]},{"text":"impl Unpin for FilterType","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Unpin for YesS3","synthetic":true,"types":[]},{"text":"impl Unpin for NoS3","synthetic":true,"types":[]},{"text":"impl Unpin for YesS4","synthetic":true,"types":[]},{"text":"impl Unpin for NoS4","synthetic":true,"types":[]},{"text":"impl Unpin for YesA1","synthetic":true,"types":[]},{"text":"impl Unpin for NoA1","synthetic":true,"types":[]},{"text":"impl Unpin for YesA2","synthetic":true,"types":[]},{"text":"impl Unpin for NoA2","synthetic":true,"types":[]},{"text":"impl Unpin for YesNI","synthetic":true,"types":[]},{"text":"impl Unpin for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Unpin for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Unpin for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for vec128_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec256_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Unpin for Diagnostic","synthetic":true,"types":[]},{"text":"impl Unpin for SpanRange","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Unpin for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quickcheck"] = [{"text":"impl&lt;R&gt; Unpin for StdGen&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StdThreadGen","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Unpin for QuickCheck&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TestResult","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Unpin for Bernoulli","synthetic":true,"types":[]},{"text":"impl Unpin for Open01","synthetic":true,"types":[]},{"text":"impl Unpin for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Unpin for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Binomial","synthetic":true,"types":[]},{"text":"impl Unpin for Cauchy","synthetic":true,"types":[]},{"text":"impl Unpin for Dirichlet","synthetic":true,"types":[]},{"text":"impl Unpin for Exp","synthetic":true,"types":[]},{"text":"impl Unpin for Exp1","synthetic":true,"types":[]},{"text":"impl Unpin for Beta","synthetic":true,"types":[]},{"text":"impl Unpin for ChiSquared","synthetic":true,"types":[]},{"text":"impl Unpin for FisherF","synthetic":true,"types":[]},{"text":"impl Unpin for Gamma","synthetic":true,"types":[]},{"text":"impl Unpin for StudentT","synthetic":true,"types":[]},{"text":"impl Unpin for LogNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Normal","synthetic":true,"types":[]},{"text":"impl Unpin for StandardNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Pareto","synthetic":true,"types":[]},{"text":"impl Unpin for Poisson","synthetic":true,"types":[]},{"text":"impl Unpin for Triangular","synthetic":true,"types":[]},{"text":"impl Unpin for UnitCircle","synthetic":true,"types":[]},{"text":"impl Unpin for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Unpin for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Unpin for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Standard","synthetic":true,"types":[]},{"text":"impl Unpin for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EntropyRng","synthetic":true,"types":[]},{"text":"impl Unpin for StdRng","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadRng","synthetic":true,"types":[]},{"text":"impl Unpin for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Unpin for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Unpin for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Unpin for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_distr"] = [{"text":"impl Unpin for UnitSphere","synthetic":true,"types":[]},{"text":"impl Unpin for UnitBall","synthetic":true,"types":[]},{"text":"impl Unpin for UnitCircle","synthetic":true,"types":[]},{"text":"impl Unpin for UnitDisc","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Gamma&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for ChiSquared&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for FisherF&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for StudentT&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Beta&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Normal&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for LogNormal&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StandardNormal","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Exp&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Exp1","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Pareto&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Pert&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Poisson&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Binomial","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Cauchy&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Dirichlet&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Triangular&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Weibull&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ChiSquaredError","synthetic":true,"types":[]},{"text":"impl Unpin for FisherFError","synthetic":true,"types":[]},{"text":"impl Unpin for BetaError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for PertError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for TriangularError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["rand_pcg"] = [{"text":"impl Unpin for Lcg64Xsh32","synthetic":true,"types":[]},{"text":"impl Unpin for Lcg128Xsl64","synthetic":true,"types":[]},{"text":"impl Unpin for Mcg128Xsl64","synthetic":true,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl Unpin for RawWindowHandle","synthetic":true,"types":[]},{"text":"impl Unpin for X11Handle","synthetic":true,"types":[]},{"text":"impl Unpin for WaylandHandle","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; Unpin for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Unpin for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; Unpin for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; Unpin for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Unpin for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; Unpin for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Unpin for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StepBy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Iter&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Chunks&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for ChunksExact&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Windows&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for IterMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for ChunksMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for ChunksExactMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Unpin for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Unpin for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for Split&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for SplitTerminator&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for Matches&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for MatchIndices&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Unpin for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ThreadPoolBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Configuration","synthetic":true,"types":[]},{"text":"impl Unpin for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for WithComments","synthetic":true,"types":[]},{"text":"impl Unpin for Comment","synthetic":true,"types":[]},{"text":"impl Unpin for Alternation","synthetic":true,"types":[]},{"text":"impl Unpin for Concat","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerl","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAscii","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for Assertion","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureName","synthetic":true,"types":[]},{"text":"impl Unpin for SetFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItem","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Ast","synthetic":true,"types":[]},{"text":"impl Unpin for LiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSet","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for AssertionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Hir","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for HirKind","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for WordBoundary","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for Literals","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Translator","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Range","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequences","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequence","synthetic":true,"types":[]}];
implementors["relevant"] = [{"text":"impl Unpin for Relevant","synthetic":true,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Chain&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Link&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for LinkNode&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Chains","synthetic":true,"types":[]},{"text":"impl Unpin for Unsynchronized","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for State&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for Image","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Family&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Queue&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Schedule&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Submission&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SubmissionId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Barrier&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Guard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Signal&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, W&gt; Unpin for SyncData&lt;S, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_command"] = [{"text":"impl Unpin for DrawCommand","synthetic":true,"types":[]},{"text":"impl Unpin for DrawIndexedCommand","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; Unpin for EncoderCommon&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for RenderPassEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for RenderPassInlineEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for RenderPassSecondaryEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C, L&gt; Unpin for Encoder&lt;'a, B, C, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PrimaryLevel","synthetic":true,"types":[]},{"text":"impl Unpin for SecondaryLevel","synthetic":true,"types":[]},{"text":"impl Unpin for IndividualReset","synthetic":true,"types":[]},{"text":"impl Unpin for NoIndividualReset","synthetic":true,"types":[]},{"text":"impl Unpin for InitialState","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; Unpin for RecordingState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; Unpin for ExecutableState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for PendingState&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidState","synthetic":true,"types":[]},{"text":"impl&lt;B, S, L, P&gt; Unpin for Submit&lt;B, S, L, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OneShot","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MultiShot&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimultaneousUse","synthetic":true,"types":[]},{"text":"impl Unpin for NoSimultaneousUse","synthetic":true,"types":[]},{"text":"impl Unpin for RenderPassContinue","synthetic":true,"types":[]},{"text":"impl Unpin for OutsideRenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B, C, S, L, R&gt; Unpin for CommandBuffer&lt;B, C, S, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Transfer","synthetic":true,"types":[]},{"text":"impl Unpin for Execute","synthetic":true,"types":[]},{"text":"impl Unpin for Compute","synthetic":true,"types":[]},{"text":"impl Unpin for Graphics","synthetic":true,"types":[]},{"text":"impl Unpin for General","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Queue&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, W, C, S&gt; Unpin for Submission&lt;B, W, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FamilyId","synthetic":true,"types":[]},{"text":"impl Unpin for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Unpin for Family&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Families&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FenceEpoch","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Fence&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, C, R&gt; Unpin for CommandPool&lt;B, C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_descriptor"] = [{"text":"impl&lt;B&gt; Unpin for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorRanges","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DescriptorRangesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;B&gt; Unpin for Barriers&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Blitter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BlitRegion","synthetic":true,"types":[]},{"text":"impl Unpin for BlitImageState","synthetic":true,"types":[]},{"text":"impl&lt;D, H, Q&gt; Unpin for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OneGraphicsQueue","synthetic":true,"types":[]},{"text":"impl Unpin for SavedQueueConfig","synthetic":true,"types":[]},{"text":"impl Unpin for BasicHeapsConfigure","synthetic":true,"types":[]},{"text":"impl Unpin for SavedHeapsConfig","synthetic":true,"types":[]},{"text":"impl Unpin for BasicDevicesConfigure","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Factory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BufferState","synthetic":true,"types":[]},{"text":"impl Unpin for ImageState","synthetic":true,"types":[]},{"text":"impl Unpin for ImageStateOrLayout","synthetic":true,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl Unpin for CompleteFrame","synthetic":true,"types":[]},{"text":"impl Unpin for FramesRange","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Frames&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Unpin for InitialRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Unpin for ReadyRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; Unpin for Cirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; Unpin for DependentCirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Unpin for CirqueRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl Unpin for BufferId","synthetic":true,"types":[]},{"text":"impl Unpin for ImageId","synthetic":true,"types":[]},{"text":"impl Unpin for NodeId","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized&gt; Unpin for Graph&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for GraphContext&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized&gt; Unpin for GraphBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BufferAccess","synthetic":true,"types":[]},{"text":"impl Unpin for BufferBarrier","synthetic":true,"types":[]},{"text":"impl Unpin for NodeBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for ImageAccess","synthetic":true,"types":[]},{"text":"impl Unpin for ImageBarrier","synthetic":true,"types":[]},{"text":"impl Unpin for NodeImage","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized, N&gt; Unpin for DescBuilder&lt;B, T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for PresentNode&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for PresentBuilder&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PrepareResult","synthetic":true,"types":[]},{"text":"impl Unpin for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;B, P&gt; Unpin for SimpleRenderGroup&lt;B, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for SimpleRenderGroupDesc&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized&gt; Unpin for SubpassBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized&gt; Unpin for RenderPassNodeBuilder&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl Unpin for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DynamicAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DynamicBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DynamicConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for LinearAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for LinearBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Heaps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for HeapsConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Coherent","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; Unpin for MappedRange&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MaybeCoherent","synthetic":true,"types":[]},{"text":"impl Unpin for NonCoherent","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for Dynamic","synthetic":true,"types":[]},{"text":"impl Unpin for Upload","synthetic":true,"types":[]},{"text":"impl Unpin for Download","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl Unpin for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for HeapsError","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryUsageValue","synthetic":true,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl Unpin for VertexBufferLayout","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for IndexBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MeshBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Mesh&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Incompatible","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Indices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl Unpin for BufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Escape&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Terminal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Handle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Image&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ImageViewInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ImageView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ResourceTracker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SamplerCache&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorSetInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DescriptorSetLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl Unpin for SpirvShader","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ShaderSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SpecConstantSet","synthetic":true,"types":[]},{"text":"impl Unpin for ShaderSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ShaderStorage&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl&lt;B&gt; Unpin for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TextureBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MipLevels","synthetic":true,"types":[]},{"text":"impl Unpin for ImageTextureConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Repr","synthetic":true,"types":[]},{"text":"impl Unpin for TextureKind","synthetic":true,"types":[]},{"text":"impl Unpin for Unorm","synthetic":true,"types":[]},{"text":"impl Unpin for Inorm","synthetic":true,"types":[]},{"text":"impl Unpin for Uint","synthetic":true,"types":[]},{"text":"impl Unpin for Int","synthetic":true,"types":[]},{"text":"impl Unpin for Uscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Iscaled","synthetic":true,"types":[]},{"text":"impl Unpin for Srgb","synthetic":true,"types":[]},{"text":"impl Unpin for Float","synthetic":true,"types":[]},{"text":"impl Unpin for _8","synthetic":true,"types":[]},{"text":"impl Unpin for _16","synthetic":true,"types":[]},{"text":"impl Unpin for _32","synthetic":true,"types":[]},{"text":"impl Unpin for _64","synthetic":true,"types":[]},{"text":"impl Unpin for R","synthetic":true,"types":[]},{"text":"impl Unpin for Rg","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb","synthetic":true,"types":[]},{"text":"impl Unpin for Rgba","synthetic":true,"types":[]},{"text":"impl Unpin for Bgr","synthetic":true,"types":[]},{"text":"impl Unpin for Bgra","synthetic":true,"types":[]},{"text":"impl Unpin for Abgr","synthetic":true,"types":[]},{"text":"impl&lt;C, S, T&gt; Unpin for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as PixelRepr&lt;S, T&gt;&gt;::Repr: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_util"] = [{"text":"impl Unpin for InstanceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Instance&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SetLayout","synthetic":true,"types":[]},{"text":"impl Unpin for Layout","synthetic":true,"types":[]},{"text":"impl Unpin for AttrUuid","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Normal","synthetic":true,"types":[]},{"text":"impl Unpin for Tangent","synthetic":true,"types":[]},{"text":"impl Unpin for TexCoord","synthetic":true,"types":[]},{"text":"impl Unpin for VertexFormat","synthetic":true,"types":[]},{"text":"impl&lt;N, I&gt; Unpin for AttrGenIter&lt;N, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for PosColor","synthetic":true,"types":[]},{"text":"impl Unpin for PosNorm","synthetic":true,"types":[]},{"text":"impl Unpin for PosColorNorm","synthetic":true,"types":[]},{"text":"impl Unpin for PosTex","synthetic":true,"types":[]},{"text":"impl Unpin for PosNormTex","synthetic":true,"types":[]},{"text":"impl Unpin for PosNormTangTex","synthetic":true,"types":[]},{"text":"impl Unpin for Model","synthetic":true,"types":[]}];
implementors["rendy_wsi"] = [{"text":"impl&lt;B&gt; Unpin for Surface&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Target&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for NextImages&lt;'a, B&gt;","synthetic":true,"types":[]}];
implementors["rental"] = [{"text":"impl&lt;E, H&gt; Unpin for RentalError&lt;E, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleRef","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRef_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRef_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleMut","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleMut_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleMut_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleRefDebug","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefDebug_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefDebug_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleRefClone","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefClone_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefClone_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleRefDeref","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefDeref_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefDeref_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleMutDeref","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleMutDeref_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleMutDeref_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleRefCovariant","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefCovariant_Borrow&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref&gt; Unpin for SimpleRefCovariant_BorrowMut&lt;'head, 'iref&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SimpleRefMap&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref, T&gt; Unpin for SimpleRefMap_Borrow&lt;'head, 'iref, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'iref, T&gt; Unpin for SimpleRefMap_BorrowMut&lt;'head, 'iref, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'iref,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentRef&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRef_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRef_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentMut&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentMut_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentMut_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentRefCell&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRefCell_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRefCell_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentRefCellMut&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRefCellMut_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRefCellMut_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentMutex&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentMutex_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentMutex_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentRwLock&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRwLock_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRwLock_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for RentRwLockMut&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRwLockMut_Borrow&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'head, 'suffix, H, T&gt; Unpin for RentRwLockMut_BorrowMut&lt;'head, 'suffix, H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'head: 'suffix,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rodio"] = [{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl Unpin for SpatialSink","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SamplesBuffer&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for DynamicMixerController&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for DynamicMixer&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SourcesQueueInput&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SourcesQueueOutput&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Amplify&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for BltFilter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Buffered&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for ChannelVolume&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Delay&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Done&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Empty&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for FadeIn&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for FromFactoryIter&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for FromIter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I1, I2&gt; Unpin for Mix&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I1 as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I2 as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Pausable&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for PeriodicAccess&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Repeat&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, D&gt; Unpin for SamplesConverter&lt;I, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SineWave","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Spatial&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Speed&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Stoppable&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for TakeDuration&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, D&gt; Unpin for UniformSourceIterator&lt;I, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Zero&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for StaticSamplesBuffer&lt;S&gt;","synthetic":true,"types":[]}];
implementors["ron"] = [{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl&lt;'de&gt; Unpin for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PrettyConfig","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Serializer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for Compound&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Map","synthetic":true,"types":[]},{"text":"impl Unpin for Float","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Extensions","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Unpin for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryDemangleError","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Unpin for FxHasher","synthetic":true,"types":[]}];
implementors["rustc_version"] = [{"text":"impl Unpin for VersionMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Channel","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl Unpin for Curve","synthetic":true,"types":[]},{"text":"impl Unpin for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Codepoint","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl Unpin for HMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; Unpin for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for LayoutIter&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Segment","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'font&gt; Unpin for Cache&lt;'font&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CacheBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for CacheReadErr","synthetic":true,"types":[]},{"text":"impl Unpin for CacheWriteErr","synthetic":true,"types":[]},{"text":"impl Unpin for CachedBy","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["scoped_threadpool"] = [{"text":"impl Unpin for Pool","synthetic":true,"types":[]},{"text":"impl&lt;'pool, 'scope&gt; Unpin for Scope&lt;'pool, 'scope&gt;","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Unpin for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Always","synthetic":true,"types":[]}];
implementors["semver"] = [{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for VersionReq","synthetic":true,"types":[]},{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for SemVerError","synthetic":true,"types":[]},{"text":"impl Unpin for ReqParseError","synthetic":true,"types":[]}];
implementors["semver_parser"] = [{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for VersionReq","synthetic":true,"types":[]},{"text":"impl Unpin for Predicate","synthetic":true,"types":[]},{"text":"impl Unpin for WildcardVersion","synthetic":true,"types":[]},{"text":"impl Unpin for Op","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_bytes"] = [{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for ByteBuf","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Unpin for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Unpin for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Unpin for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CharEscape","synthetic":true,"types":[]},{"text":"impl Unpin for Serializer","synthetic":true,"types":[]},{"text":"impl Unpin for RawValue","synthetic":true,"types":[]}];
implementors["shred"] = [{"text":"impl&lt;'a, R&gt; Unpin for AsyncDispatcher&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for Par&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, T&gt; Unpin for ParSeq&lt;P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H, T&gt; Unpin for Seq&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BatchAccessor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BatchUncheckedWorld&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for DefaultBatchControllerSystem&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Dispatcher&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for DispatcherBuilder&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MetaIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MetaIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for MetaTable&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StaticAccessor&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultProvider","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Fetch&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for FetchMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PanicHandler","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F&gt; Unpin for Read&lt;'a, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResourceId","synthetic":true,"types":[]},{"text":"impl Unpin for World","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F&gt; Unpin for Write&lt;'a, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T:&nbsp;?Sized&gt; Unpin for AccessorCow&lt;'a, 'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as System&lt;'a&gt;&gt;::SystemData as DynamicSystemData&lt;'a&gt;&gt;::Accessor: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as System&lt;'a&gt;&gt;::SystemData: DynamicSystemData&lt;'a&gt;,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RunningTime","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidBorrow","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RefMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrustCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["shrev"] = [{"text":"impl&lt;T&gt; Unpin for ReaderId&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for StorageIterator&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EventChannel&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["siphasher"] = [{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]},{"text":"impl Unpin for Hash128","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Unpin for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["slice_deque"] = [{"text":"impl&lt;T&gt; Unpin for Buffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SliceDeque&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Splice&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F&gt; Unpin for DrainFilter&lt;'a, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AllocError","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CollectionAllocErr","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Unpin for Environment","synthetic":true,"types":[]},{"text":"impl Unpin for Shell","synthetic":true,"types":[]},{"text":"impl Unpin for DataDevice","synthetic":true,"types":[]},{"text":"impl Unpin for DataOffer","synthetic":true,"types":[]},{"text":"impl Unpin for ReadPipe","synthetic":true,"types":[]},{"text":"impl Unpin for DataSource","synthetic":true,"types":[]},{"text":"impl Unpin for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ModifiersState","synthetic":true,"types":[]},{"text":"impl Unpin for RMLVO","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for OutputInfo","synthetic":true,"types":[]},{"text":"impl Unpin for OutputMgr","synthetic":true,"types":[]},{"text":"impl Unpin for ThemeManager","synthetic":true,"types":[]},{"text":"impl Unpin for ThemedPointer","synthetic":true,"types":[]},{"text":"impl Unpin for AutoThemer","synthetic":true,"types":[]},{"text":"impl Unpin for AutoPointer","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl Unpin for MemPool","synthetic":true,"types":[]},{"text":"impl Unpin for BasicFrame","synthetic":true,"types":[]},{"text":"impl Unpin for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for FrameRequest","synthetic":true,"types":[]}];
implementors["specs"] = [{"text":"impl&lt;T&gt; Unpin for DefaultVecStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DenseVecStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, T&gt; Unpin for FlaggedStorage&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for HashMapStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for NullStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for VecStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Entity","synthetic":true,"types":[]},{"text":"impl Unpin for LazyUpdate","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ChangeSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxedErr","synthetic":true,"types":[]},{"text":"impl Unpin for WrongGeneration","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for NoError","synthetic":true,"types":[]},{"text":"impl&lt;J&gt; Unpin for JoinParIter&lt;J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;J&gt; Unpin for MaybeJoin&lt;J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;J&gt; Unpin for JoinIter&lt;J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Join&gt;::Mask: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Join&gt;::Value: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ComponentEvent","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, D&gt; Unpin for Entries&lt;'a, 'b, T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, D&gt; Unpin for OccupiedEntry&lt;'a, 'b, T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, D&gt; Unpin for VacantEntry&lt;'a, 'b, T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'rf, 'st, C, S, B, Restrict&gt; Unpin for RestrictedStorage&lt;'rf, 'st, C, S, B, Restrict&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Restrict: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;'st: 'rf,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BTreeStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AntiStorage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MaskedStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Component&gt;::Storage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'e, T, D&gt; Unpin for Storage&lt;'e, T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, D&gt; Unpin for StorageEntry&lt;'a, 'b, T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ImmutableParallelRestriction","synthetic":true,"types":[]},{"text":"impl Unpin for MutableParallelRestriction","synthetic":true,"types":[]},{"text":"impl Unpin for SequentialRestriction","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CreateIterAtomic&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EntitiesRes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EntityResBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Generation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LazyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CreateIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EntityBuilder&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["specs_hierarchy"] = [{"text":"impl&lt;P&gt; Unpin for Hierarchy&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for SubHierarchyIterator&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for ParentData&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for HierarchySystem&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HierarchyEvent","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; Unpin for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; Unpin for FontNameIter&lt;'a, Data&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for VertexType","synthetic":true,"types":[]},{"text":"impl Unpin for PlatformId","synthetic":true,"types":[]},{"text":"impl Unpin for UnicodeEid","synthetic":true,"types":[]},{"text":"impl Unpin for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl Unpin for MacEid","synthetic":true,"types":[]},{"text":"impl Unpin for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl Unpin for MacLang","synthetic":true,"types":[]},{"text":"impl Unpin for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIfLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprInPlace","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhileLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PathTokens&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for FloatSuffix","synthetic":true,"types":[]},{"text":"impl Unpin for IntSuffix","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArgName","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Apostrophe","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for CapSelf","synthetic":true,"types":[]},{"text":"impl Unpin for Catch","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for Self_","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl&lt;'a&gt; Unpin for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Structure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AddBounds","synthetic":true,"types":[]},{"text":"impl Unpin for BindStyle","synthetic":true,"types":[]}];
implementors["termcolor"] = [{"text":"impl Unpin for StandardStream","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StandardStreamLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BufferedStandardStream","synthetic":true,"types":[]},{"text":"impl Unpin for BufferWriter","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for NoColor&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Ansi&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ColorSpec","synthetic":true,"types":[]},{"text":"impl Unpin for ParseColorError","synthetic":true,"types":[]},{"text":"impl Unpin for ColorChoice","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; Unpin for CachedIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["tiff"] = [{"text":"impl Unpin for TiffError","synthetic":true,"types":[]},{"text":"impl Unpin for TiffFormatError","synthetic":true,"types":[]},{"text":"impl Unpin for TiffUnsupportedError","synthetic":true,"types":[]},{"text":"impl Unpin for ColorType","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DecodingResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DecodingBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PhotometricInterpretation","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionMethod","synthetic":true,"types":[]},{"text":"impl Unpin for PlanarConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Rational","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for TiffEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for DirectoryEncoder&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W, C&gt; Unpin for ImageEncoder&lt;'a, W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResolutionUnit","synthetic":true,"types":[]},{"text":"impl Unpin for Gray8","synthetic":true,"types":[]},{"text":"impl Unpin for Gray16","synthetic":true,"types":[]},{"text":"impl Unpin for RGB8","synthetic":true,"types":[]},{"text":"impl Unpin for RGB16","synthetic":true,"types":[]},{"text":"impl Unpin for RGBA8","synthetic":true,"types":[]},{"text":"impl Unpin for RGBA16","synthetic":true,"types":[]},{"text":"impl Unpin for CMYK8","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Unpin for Timespec","synthetic":true,"types":[]},{"text":"impl Unpin for PreciseTime","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTime","synthetic":true,"types":[]},{"text":"impl Unpin for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["tinystr"] = [{"text":"impl Unpin for TinyStr16","synthetic":true,"types":[]},{"text":"impl Unpin for TinyStr4","synthetic":true,"types":[]},{"text":"impl Unpin for TinyStr8","synthetic":true,"types":[]},{"text":"impl Unpin for TinyStrAuto","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for ArrayVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;T&gt; Unpin for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Datetime","synthetic":true,"types":[]},{"text":"impl Unpin for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Unpin for RandomXxHashBuilder64","synthetic":true,"types":[]},{"text":"impl Unpin for RandomXxHashBuilder32","synthetic":true,"types":[]},{"text":"impl Unpin for XxHash64","synthetic":true,"types":[]},{"text":"impl Unpin for XxHash32","synthetic":true,"types":[]}];
implementors["tynm"] = [{"text":"impl&lt;'s&gt; Unpin for TypeNameDisplay&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for TypeName&lt;'s&gt;","synthetic":true,"types":[]}];
implementors["type_map"] = [{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMap","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMap","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["typenum"] = [{"text":"impl Unpin for Greater","synthetic":true,"types":[]},{"text":"impl Unpin for Less","synthetic":true,"types":[]},{"text":"impl Unpin for Equal","synthetic":true,"types":[]},{"text":"impl Unpin for B0","synthetic":true,"types":[]},{"text":"impl Unpin for B1","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for PInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for NInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Z0","synthetic":true,"types":[]},{"text":"impl Unpin for UTerm","synthetic":true,"types":[]},{"text":"impl&lt;U, B&gt; Unpin for UInt&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ATerm","synthetic":true,"types":[]},{"text":"impl&lt;V, A&gt; Unpin for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unic_langid_impl"] = [{"text":"impl Unpin for LanguageIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for LanguageIdentifierError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterDirection","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Unpin for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeIncomplete","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl Unpin for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for WalkDir","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wavefront_obj"] = [{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for MtlSet","synthetic":true,"types":[]},{"text":"impl Unpin for Material","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Illumination","synthetic":true,"types":[]},{"text":"impl Unpin for ObjSet","synthetic":true,"types":[]},{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl Unpin for Geometry","synthetic":true,"types":[]},{"text":"impl Unpin for Shape","synthetic":true,"types":[]},{"text":"impl Unpin for Vertex","synthetic":true,"types":[]},{"text":"impl Unpin for TVertex","synthetic":true,"types":[]},{"text":"impl Unpin for Primitive","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Unpin for Display","synthetic":true,"types":[]},{"text":"impl Unpin for EventQueue","synthetic":true,"types":[]},{"text":"impl Unpin for QueueToken","synthetic":true,"types":[]},{"text":"impl Unpin for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for NewProxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectError","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalError","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ProxyMap","synthetic":true,"types":[]},{"text":"impl Unpin for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WlEglSurface","synthetic":true,"types":[]},{"text":"impl Unpin for WlDisplay","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlRegistry","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlCallback","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlCompositor","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlShmPool","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlShm","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlDataOffer","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlDataSource","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlDataDevice","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for DndAction","synthetic":true,"types":[]},{"text":"impl Unpin for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlShell","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Resize","synthetic":true,"types":[]},{"text":"impl Unpin for Transient","synthetic":true,"types":[]},{"text":"impl Unpin for WlShellSurface","synthetic":true,"types":[]},{"text":"impl Unpin for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlSurface","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Capability","synthetic":true,"types":[]},{"text":"impl Unpin for WlSeat","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlPointer","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for Axis","synthetic":true,"types":[]},{"text":"impl Unpin for AxisSource","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlKeyboard","synthetic":true,"types":[]},{"text":"impl Unpin for KeymapFormat","synthetic":true,"types":[]},{"text":"impl Unpin for KeyState","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlTouch","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for WlOutput","synthetic":true,"types":[]},{"text":"impl Unpin for Subpixel","synthetic":true,"types":[]},{"text":"impl Unpin for Transform","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlRegion","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WlSubsurface","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Unpin for AnonymousObject","synthetic":true,"types":[]},{"text":"impl Unpin for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Unpin for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Unpin for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Socket","synthetic":true,"types":[]},{"text":"impl Unpin for BufferedSocket","synthetic":true,"types":[]},{"text":"impl Unpin for UserData","synthetic":true,"types":[]},{"text":"impl Unpin for UserDataMap","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDesc","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for ArgumentType","synthetic":true,"types":[]},{"text":"impl Unpin for Argument","synthetic":true,"types":[]},{"text":"impl Unpin for MessageWriteError","synthetic":true,"types":[]},{"text":"impl Unpin for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Unpin for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl Unpin for Capability","synthetic":true,"types":[]},{"text":"impl Unpin for PresentMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Capability","synthetic":true,"types":[]},{"text":"impl Unpin for ButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Capability","synthetic":true,"types":[]},{"text":"impl Unpin for ButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl Unpin for ButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl Unpin for ContentHint","synthetic":true,"types":[]},{"text":"impl Unpin for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Unpin for PreeditStyle","synthetic":true,"types":[]},{"text":"impl Unpin for TextDirection","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ContentHint","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeCause","synthetic":true,"types":[]},{"text":"impl Unpin for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgShell","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgSurface","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgPopup","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for Gravity","synthetic":true,"types":[]},{"text":"impl Unpin for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for CancelReason","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Layer","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WpPresentation","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgWmBase","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Unpin for XdgPositioner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for Gravity","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgSurface","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgToplevel","synthetic":true,"types":[]},{"text":"impl Unpin for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for XdgPopup","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WpViewporter","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WpViewport","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl Unpin for wl_message","synthetic":true,"types":[]},{"text":"impl Unpin for wl_interface","synthetic":true,"types":[]},{"text":"impl Unpin for wl_list","synthetic":true,"types":[]},{"text":"impl Unpin for wl_array","synthetic":true,"types":[]},{"text":"impl Unpin for wl_argument","synthetic":true,"types":[]},{"text":"impl Unpin for WaylandClient","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_CLIENT_OPTION","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_CLIENT_HANDLE","synthetic":true,"types":[]},{"text":"impl Unpin for wl_proxy","synthetic":true,"types":[]},{"text":"impl Unpin for wl_display","synthetic":true,"types":[]},{"text":"impl Unpin for wl_event_queue","synthetic":true,"types":[]},{"text":"impl Unpin for WaylandEgl","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_EGL_OPTION","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_EGL_HANDLE","synthetic":true,"types":[]},{"text":"impl Unpin for wl_egl_window","synthetic":true,"types":[]},{"text":"impl Unpin for wl_cursor_image","synthetic":true,"types":[]},{"text":"impl Unpin for wl_cursor","synthetic":true,"types":[]},{"text":"impl Unpin for WaylandCursor","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_CURSOR_OPTION","synthetic":true,"types":[]},{"text":"impl Unpin for WAYLAND_CURSOR_HANDLE","synthetic":true,"types":[]},{"text":"impl Unpin for wl_cursor_theme","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl Unpin for KeyboardInput","synthetic":true,"types":[]},{"text":"impl Unpin for Touch","synthetic":true,"types":[]},{"text":"impl Unpin for ModifiersState","synthetic":true,"types":[]},{"text":"impl Unpin for AvailableMonitorsIter","synthetic":true,"types":[]},{"text":"impl Unpin for MonitorId","synthetic":true,"types":[]},{"text":"impl Unpin for Icon","synthetic":true,"types":[]},{"text":"impl Unpin for Window","synthetic":true,"types":[]},{"text":"impl Unpin for WindowId","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceId","synthetic":true,"types":[]},{"text":"impl Unpin for EventsLoop","synthetic":true,"types":[]},{"text":"impl Unpin for EventsLoopProxy","synthetic":true,"types":[]},{"text":"impl Unpin for EventsLoopClosed","synthetic":true,"types":[]},{"text":"impl Unpin for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for WindowAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for WindowEvent","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceEvent","synthetic":true,"types":[]},{"text":"impl Unpin for TouchPhase","synthetic":true,"types":[]},{"text":"impl Unpin for ElementState","synthetic":true,"types":[]},{"text":"impl Unpin for MouseButton","synthetic":true,"types":[]},{"text":"impl Unpin for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl Unpin for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl Unpin for BadIcon","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlow","synthetic":true,"types":[]},{"text":"impl Unpin for CreationError","synthetic":true,"types":[]},{"text":"impl Unpin for MouseCursor","synthetic":true,"types":[]},{"text":"impl Unpin for LogicalPosition","synthetic":true,"types":[]},{"text":"impl Unpin for PhysicalPosition","synthetic":true,"types":[]},{"text":"impl Unpin for LogicalSize","synthetic":true,"types":[]},{"text":"impl Unpin for PhysicalSize","synthetic":true,"types":[]},{"text":"impl Unpin for XNotSupported","synthetic":true,"types":[]},{"text":"impl Unpin for WindowType","synthetic":true,"types":[]},{"text":"impl Unpin for WaylandTheme","synthetic":true,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl Unpin for Atoms","synthetic":true,"types":[]},{"text":"impl Unpin for Clipboard","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Unpin for OpenError","synthetic":true,"types":[]},{"text":"impl Unpin for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Xlib","synthetic":true,"types":[]},{"text":"impl Unpin for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Unpin for XcmsColor","synthetic":true,"types":[]},{"text":"impl Unpin for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Unpin for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbAction","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbColor","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbControls","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbKey","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbMods","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbRow","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbSection","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbShape","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl Unpin for XAnyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XButtonEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XColormapEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XErrorEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XExposeEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XGravityEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XKeyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XMapEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XMappingEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XMotionEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XReparentEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl Unpin for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XkbEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Depth","synthetic":true,"types":[]},{"text":"impl Unpin for Screen","synthetic":true,"types":[]},{"text":"impl Unpin for ScreenFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Visual","synthetic":true,"types":[]},{"text":"impl Unpin for XArc","synthetic":true,"types":[]},{"text":"impl Unpin for XChar2b","synthetic":true,"types":[]},{"text":"impl Unpin for XCharStruct","synthetic":true,"types":[]},{"text":"impl Unpin for XClassHint","synthetic":true,"types":[]},{"text":"impl Unpin for XColor","synthetic":true,"types":[]},{"text":"impl Unpin for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Unpin for XExtCodes","synthetic":true,"types":[]},{"text":"impl Unpin for XExtData","synthetic":true,"types":[]},{"text":"impl Unpin for XFontProp","synthetic":true,"types":[]},{"text":"impl Unpin for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl Unpin for XFontStruct","synthetic":true,"types":[]},{"text":"impl Unpin for XGCValues","synthetic":true,"types":[]},{"text":"impl Unpin for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl Unpin for XHostAddress","synthetic":true,"types":[]},{"text":"impl Unpin for XIconSize","synthetic":true,"types":[]},{"text":"impl Unpin for XImage","synthetic":true,"types":[]},{"text":"impl Unpin for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Unpin for XKeyboardState","synthetic":true,"types":[]},{"text":"impl Unpin for XmbTextItem","synthetic":true,"types":[]},{"text":"impl Unpin for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl Unpin for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Unpin for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Unpin for XPoint","synthetic":true,"types":[]},{"text":"impl Unpin for XRectangle","synthetic":true,"types":[]},{"text":"impl Unpin for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl Unpin for XrmValue","synthetic":true,"types":[]},{"text":"impl Unpin for XSegment","synthetic":true,"types":[]},{"text":"impl Unpin for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for XSizeHints","synthetic":true,"types":[]},{"text":"impl Unpin for XStandardColormap","synthetic":true,"types":[]},{"text":"impl Unpin for XTextItem","synthetic":true,"types":[]},{"text":"impl Unpin for XTextItem16","synthetic":true,"types":[]},{"text":"impl Unpin for XTextProperty","synthetic":true,"types":[]},{"text":"impl Unpin for XTimeCoord","synthetic":true,"types":[]},{"text":"impl Unpin for XVisualInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XwcTextItem","synthetic":true,"types":[]},{"text":"impl Unpin for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Unpin for XWMHints","synthetic":true,"types":[]},{"text":"impl Unpin for XIMCallback","synthetic":true,"types":[]},{"text":"impl Unpin for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Unpin for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl Unpin for XIMText","synthetic":true,"types":[]},{"text":"impl Unpin for XICCallback","synthetic":true,"types":[]},{"text":"impl Unpin for AspectRatio","synthetic":true,"types":[]},{"text":"impl Unpin for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Unpin for ImageFns","synthetic":true,"types":[]},{"text":"impl Unpin for XEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIMTextString","synthetic":true,"types":[]},{"text":"impl Unpin for _XDisplay","synthetic":true,"types":[]},{"text":"impl Unpin for xError","synthetic":true,"types":[]},{"text":"impl Unpin for xEvent","synthetic":true,"types":[]},{"text":"impl Unpin for _XGC","synthetic":true,"types":[]},{"text":"impl Unpin for _XIC","synthetic":true,"types":[]},{"text":"impl Unpin for _XIM","synthetic":true,"types":[]},{"text":"impl Unpin for _XRegion","synthetic":true,"types":[]},{"text":"impl Unpin for _XOC","synthetic":true,"types":[]},{"text":"impl Unpin for _XOM","synthetic":true,"types":[]},{"text":"impl Unpin for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Unpin for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Unpin for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Unpin for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Xext","synthetic":true,"types":[]},{"text":"impl Unpin for Glx","synthetic":true,"types":[]},{"text":"impl Unpin for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Unpin for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl Unpin for Xcursor","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorComment","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorComments","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorFile","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorImage","synthetic":true,"types":[]},{"text":"impl Unpin for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Unpin for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl Unpin for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Xft","synthetic":true,"types":[]},{"text":"impl Unpin for XftFont","synthetic":true,"types":[]},{"text":"impl Unpin for XftColor","synthetic":true,"types":[]},{"text":"impl Unpin for XftCharSpec","synthetic":true,"types":[]},{"text":"impl Unpin for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl Unpin for XftFontSet","synthetic":true,"types":[]},{"text":"impl Unpin for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl Unpin for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Unpin for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Unpin for FcCharSet","synthetic":true,"types":[]},{"text":"impl Unpin for FcPattern","synthetic":true,"types":[]},{"text":"impl Unpin for FcEndian","synthetic":true,"types":[]},{"text":"impl Unpin for FcResult","synthetic":true,"types":[]},{"text":"impl Unpin for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XftDraw","synthetic":true,"types":[]},{"text":"impl Unpin for XftPattern","synthetic":true,"types":[]},{"text":"impl Unpin for Xlib","synthetic":true,"types":[]},{"text":"impl Unpin for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XInput","synthetic":true,"types":[]},{"text":"impl Unpin for XDevice","synthetic":true,"types":[]},{"text":"impl Unpin for XDeviceControl","synthetic":true,"types":[]},{"text":"impl Unpin for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XDeviceState","synthetic":true,"types":[]},{"text":"impl Unpin for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Unpin for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Unpin for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Unpin for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Unpin for XInputClass","synthetic":true,"types":[]},{"text":"impl Unpin for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl Unpin for XInput2","synthetic":true,"types":[]},{"text":"impl Unpin for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIModifierState","synthetic":true,"types":[]},{"text":"impl Unpin for XIButtonState","synthetic":true,"types":[]},{"text":"impl Unpin for XIValuatorState","synthetic":true,"types":[]},{"text":"impl Unpin for XIEventMask","synthetic":true,"types":[]},{"text":"impl Unpin for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Unpin for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIRawEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Xmu","synthetic":true,"types":[]},{"text":"impl Unpin for _AtomRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuArea","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Unpin for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl Unpin for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordRange","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordRange16","synthetic":true,"types":[]},{"text":"impl Unpin for XRecordState","synthetic":true,"types":[]},{"text":"impl Unpin for Xrender","synthetic":true,"types":[]},{"text":"impl Unpin for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Unpin for _XCircle","synthetic":true,"types":[]},{"text":"impl Unpin for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl Unpin for _XFilters","synthetic":true,"types":[]},{"text":"impl Unpin for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl Unpin for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl Unpin for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Unpin for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Unpin for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Unpin for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Unpin for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Unpin for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Unpin for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Unpin for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Unpin for XRenderColor","synthetic":true,"types":[]},{"text":"impl Unpin for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Unpin for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Unpin for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Unpin for _XTrap","synthetic":true,"types":[]},{"text":"impl Unpin for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Unpin for _XTriangle","synthetic":true,"types":[]},{"text":"impl Unpin for _XTransform","synthetic":true,"types":[]},{"text":"impl Unpin for Xss","synthetic":true,"types":[]},{"text":"impl Unpin for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Xt","synthetic":true,"types":[]},{"text":"impl Unpin for Arg","synthetic":true,"types":[]},{"text":"impl Unpin for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Unpin for _TranslationData","synthetic":true,"types":[]},{"text":"impl Unpin for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Unpin for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Unpin for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Unpin for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Unpin for _XtResource","synthetic":true,"types":[]},{"text":"impl Unpin for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl Unpin for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Unpin for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl Unpin for Xrandr","synthetic":true,"types":[]},{"text":"impl Unpin for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Unpin for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl Unpin for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl Unpin for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for XRRPanning","synthetic":true,"types":[]},{"text":"impl Unpin for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl Unpin for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl Unpin for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xcb"] = [{"text":"impl&lt;'a, T&gt; Unpin for StructPtr&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Event&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Error&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Cookie&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Reply&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Connection","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for QueryExtensionData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ConnError","synthetic":true,"types":[]},{"text":"impl Unpin for RequestError","synthetic":true,"types":[]},{"text":"impl Unpin for ValueError","synthetic":true,"types":[]},{"text":"impl Unpin for WindowError","synthetic":true,"types":[]},{"text":"impl Unpin for PixmapError","synthetic":true,"types":[]},{"text":"impl Unpin for AtomError","synthetic":true,"types":[]},{"text":"impl Unpin for CursorError","synthetic":true,"types":[]},{"text":"impl Unpin for FontError","synthetic":true,"types":[]},{"text":"impl Unpin for MatchError","synthetic":true,"types":[]},{"text":"impl Unpin for DrawableError","synthetic":true,"types":[]},{"text":"impl Unpin for AccessError","synthetic":true,"types":[]},{"text":"impl Unpin for AllocError","synthetic":true,"types":[]},{"text":"impl Unpin for ColormapError","synthetic":true,"types":[]},{"text":"impl Unpin for GContextError","synthetic":true,"types":[]},{"text":"impl Unpin for IdChoiceError","synthetic":true,"types":[]},{"text":"impl Unpin for NameError","synthetic":true,"types":[]},{"text":"impl Unpin for LengthError","synthetic":true,"types":[]},{"text":"impl Unpin for ImplementationError","synthetic":true,"types":[]},{"text":"impl Unpin for Char2b","synthetic":true,"types":[]},{"text":"impl Unpin for Point","synthetic":true,"types":[]},{"text":"impl Unpin for Rectangle","synthetic":true,"types":[]},{"text":"impl Unpin for Arc","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for Visualtype","synthetic":true,"types":[]},{"text":"impl Unpin for Timecoord","synthetic":true,"types":[]},{"text":"impl Unpin for Fontprop","synthetic":true,"types":[]},{"text":"impl Unpin for Charinfo","synthetic":true,"types":[]},{"text":"impl Unpin for Segment","synthetic":true,"types":[]},{"text":"impl Unpin for Coloritem","synthetic":true,"types":[]},{"text":"impl Unpin for Rgb","synthetic":true,"types":[]},{"text":"impl Unpin for PictFormatError","synthetic":true,"types":[]},{"text":"impl Unpin for PictureError","synthetic":true,"types":[]},{"text":"impl Unpin for PictOpError","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphSetError","synthetic":true,"types":[]},{"text":"impl Unpin for GlyphError","synthetic":true,"types":[]},{"text":"impl Unpin for Directformat","synthetic":true,"types":[]},{"text":"impl Unpin for Pictforminfo","synthetic":true,"types":[]},{"text":"impl Unpin for Pictvisual","synthetic":true,"types":[]},{"text":"impl Unpin for Indexvalue","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Pointfix","synthetic":true,"types":[]},{"text":"impl Unpin for Linefix","synthetic":true,"types":[]},{"text":"impl Unpin for Triangle","synthetic":true,"types":[]},{"text":"impl Unpin for Trapezoid","synthetic":true,"types":[]},{"text":"impl Unpin for Glyphinfo","synthetic":true,"types":[]},{"text":"impl Unpin for Transform","synthetic":true,"types":[]},{"text":"impl Unpin for Animcursorelt","synthetic":true,"types":[]},{"text":"impl Unpin for Spanfix","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]},{"text":"impl Unpin for BadRegionError","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_generic_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_generic_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_generic_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ge_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_generic_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_void_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_auth_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_connection_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_extension_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_special_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_char2b_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_char2b_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_window_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_pixmap_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_cursor_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_font_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_gcontext_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_colormap_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_atom_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_drawable_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_fontable_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_visualid_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_timestamp_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_keysym_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_keycode_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_button_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_point_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_point_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_rectangle_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_rectangle_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_arc_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_arc_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_format_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_format_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_visualtype_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_visualtype_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_depth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_depth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_screen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_screen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_setup_request_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_setup_request_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_setup_failed_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_setup_failed_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_setup_authenticate_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_setup_authenticate_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_setup_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_setup_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_key_press_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_button_press_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_motion_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_enter_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_focus_in_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_keymap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_expose_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_graphics_exposure_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_no_exposure_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_visibility_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_destroy_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_unmap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_map_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_map_request_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_reparent_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_configure_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_configure_request_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_gravity_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_resize_request_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_circulate_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_property_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_selection_clear_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_selection_request_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_colormap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_client_message_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_client_message_data_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_client_message_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_mapping_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ge_generic_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_request_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_value_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_window_attributes_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_window_attributes_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_destroy_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_destroy_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_reparent_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_map_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_map_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_unmap_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_unmap_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_configure_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_circulate_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_geometry_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_geometry_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_geometry_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_tree_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_tree_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_tree_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_intern_atom_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_intern_atom_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_intern_atom_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_atom_name_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_atom_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_atom_name_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_property_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_delete_property_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_property_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_property_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_property_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_properties_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_properties_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_properties_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_selection_owner_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_selection_owner_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_convert_selection_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_send_event_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ungrab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_button_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ungrab_button_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_active_pointer_grab_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_keyboard_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_keyboard_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ungrab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_key_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ungrab_key_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_allow_events_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_grab_server_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_ungrab_server_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_timecoord_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_timecoord_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_motion_events_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_motion_events_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_motion_events_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_translate_coordinates_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_translate_coordinates_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_translate_coordinates_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_warp_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_input_focus_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_input_focus_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_keymap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_keymap_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_keymap_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_open_font_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_close_font_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_fontprop_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_fontprop_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_charinfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_charinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_font_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_font_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_font_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_text_extents_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_text_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_text_extents_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_str_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_str_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_with_info_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_with_info_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_fonts_with_info_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_font_path_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_font_path_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_font_path_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_font_path_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_free_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_gc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_gc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_copy_gc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_dashes_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_free_gc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_clear_area_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_copy_area_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_copy_plane_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_point_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_line_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_segment_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_segment_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_segment_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_arc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_fill_poly_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_fill_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_fill_arc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_put_image_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_image_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_image_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_image_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_text_8_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_poly_text_16_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_image_text_8_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_image_text_16_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_free_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_copy_colormap_and_free_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_install_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_uninstall_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_installed_colormaps_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_installed_colormaps_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_installed_colormaps_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_named_color_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_named_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_named_color_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_cells_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_cells_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_cells_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_planes_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_planes_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_alloc_color_planes_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_free_colors_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_coloritem_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_coloritem_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_store_colors_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_store_named_color_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_rgb_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_rgb_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_colors_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_colors_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_colors_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_lookup_color_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_lookup_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_lookup_color_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_create_glyph_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_free_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_recolor_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_best_size_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_best_size_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_best_size_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_extension_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_extension_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_query_extension_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_extensions_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_extensions_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_extensions_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_control_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_keyboard_control_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_bell_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_control_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_control_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_screen_saver_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_screen_saver_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_change_hosts_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_host_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_host_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_hosts_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_hosts_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_list_hosts_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_access_control_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_close_down_mode_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_kill_client_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_rotate_properties_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_force_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_set_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_get_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_no_operation_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_big_requests_enable_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_big_requests_enable_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_big_requests_enable_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_version_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_version_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_range_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_range_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_range_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_list_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_list_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xc_misc_get_xid_list_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyph_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyphset_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_picture_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictformat_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_fixed_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pict_format_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_picture_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pict_op_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyph_set_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyph_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_directformat_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_directformat_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictforminfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictforminfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictvisual_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictvisual_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictdepth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_render_pictdepth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pictscreen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for xcb_render_pictscreen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_indexvalue_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_indexvalue_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_color_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_color_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pointfix_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_pointfix_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_linefix_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_linefix_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_triangle_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_triangle_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_trapezoid_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_trapezoid_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyphinfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_glyphinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_formats_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_formats_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_formats_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_index_values_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_index_values_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_pict_index_values_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_picture_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_change_picture_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_set_picture_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_free_picture_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_composite_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_trapezoids_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_triangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_tri_strip_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_tri_fan_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_reference_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_free_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_add_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_free_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_composite_glyphs_8_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_composite_glyphs_16_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_composite_glyphs_32_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_fill_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_transform_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_transform_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_set_picture_transform_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_filters_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_filters_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_query_filters_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_set_picture_filter_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_animcursorelt_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_animcursorelt_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_anim_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_spanfix_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_spanfix_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_trap_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_trap_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_add_traps_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_solid_fill_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_linear_gradient_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_radial_gradient_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_render_create_conical_gradient_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_op_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_kind_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_mask_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_combine_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_offset_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_extents_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_query_extents_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_select_input_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_input_selected_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_input_selected_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_input_selected_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_get_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_get_rectangles_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_shape_get_rectangles_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_select_selection_input_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_cursor_notify_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_select_cursor_input_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_region_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_bad_region_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_region_from_bitmap_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_region_from_window_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_region_from_gc_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_region_from_picture_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_destroy_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_set_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_copy_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_union_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_intersect_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_subtract_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_invert_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_translate_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_region_extents_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_fetch_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_fetch_region_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_fetch_region_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_set_gc_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_set_window_shape_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_set_picture_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_set_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_name_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_and_name_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_and_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_get_cursor_image_and_name_reply_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_change_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_change_cursor_by_name_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_expand_region_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_hide_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_show_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_barrier_iterator_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_create_pointer_barrier_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for xcb_xfixes_delete_pointer_barrier_request_t","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl Unpin for BaseDirectories","synthetic":true,"types":[]},{"text":"impl Unpin for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl Unpin for FileFindIterator","synthetic":true,"types":[]}];
implementors["xi_unicode"] = [{"text":"impl&lt;'a&gt; Unpin for LineBreakIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LineBreakLeafIter","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl Unpin for ParserConfig","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for ReprDisplay&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Unpin for TextPosition","synthetic":true,"types":[]},{"text":"impl Unpin for XmlVersion","synthetic":true,"types":[]},{"text":"impl Unpin for Namespace","synthetic":true,"types":[]},{"text":"impl Unpin for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for XmlEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()