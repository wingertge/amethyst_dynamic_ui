(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Clone for Adler32","synthetic":false,"types":[]}];
implementors["adler32"] = [{"text":"impl Clone for RollingAdler32","synthetic":false,"types":[]}];
implementors["ahash"] = [{"text":"impl Clone for AHasher","synthetic":false,"types":[]},{"text":"impl Clone for RandomState","synthetic":false,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S:&nbsp;Clone + StateID&gt; Clone for AhoCorasick&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for Searcher","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]}];
implementors["alga"] = [{"text":"impl&lt;O:&nbsp;Operator&gt; Clone for Id&lt;O&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Additive","synthetic":false,"types":[]},{"text":"impl Clone for Multiplicative","synthetic":false,"types":[]}];
implementors["alsa_sys"] = [{"text":"impl&lt;Storage:&nbsp;Clone, Align:&nbsp;Clone&gt; Clone for __BindgenBitfieldUnit&lt;Storage, Align&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Storage: AsRef&lt;[u8]&gt; + AsMut&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for _snd_pcm_audio_tstamp_config","synthetic":false,"types":[]},{"text":"impl Clone for _snd_pcm_audio_tstamp_report","synthetic":false,"types":[]}];
implementors["amethyst"] = [{"text":"impl Clone for StdoutLog","synthetic":false,"types":[]},{"text":"impl Clone for LoggerConfig","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for StateEvent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_animation"] = [{"text":"impl Clone for MaterialPrimitive","synthetic":false,"types":[]},{"text":"impl Clone for MaterialChannel","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AnimationPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for AnimationSetPrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AnimationHierarchyPrefab&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for AnimatablePrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Hash + Eq + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for BlendMethod","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Sampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: InterpolationPrimitive,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RestState&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AnimationHierarchy&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Animation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ControlState","synthetic":false,"types":[]},{"text":"impl Clone for EndControl","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SamplerControl&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SamplerControlSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for StepDirection","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AnimationCommand&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AnimationControl&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for DeferStartRelation","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for AnimationControlSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for AnimationSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Joint","synthetic":false,"types":[]},{"text":"impl Clone for JointPrefab","synthetic":false,"types":[]},{"text":"impl Clone for SkinPrefab","synthetic":false,"types":[]},{"text":"impl Clone for SkinnablePrefab","synthetic":false,"types":[]},{"text":"impl Clone for SpriteRenderPrimitive","synthetic":false,"types":[]},{"text":"impl Clone for SpriteRenderChannel","synthetic":false,"types":[]},{"text":"impl Clone for TransformChannel","synthetic":false,"types":[]},{"text":"impl Clone for UiTransformChannel","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for SamplerPrimitive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RealField + SubsetOf&lt;f32&gt; + SupersetOf&lt;f32&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_assets"] = [{"text":"impl&lt;'clone, D&gt; Clone for Box&lt;dyn Format&lt;D&gt; + 'clone&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'clone, D&gt; Clone for Box&lt;dyn SerializableFormat&lt;D&gt; + 'clone&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RonFormat","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for AssetPrefab&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Asset,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Format&lt;A::Data&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Completion","synthetic":false,"types":[]},{"text":"impl Clone for HotReloadStrategy","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;'static&gt; Clone for Box&lt;dyn Reload&lt;D&gt;&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;'static&gt; Clone for SingleFile&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized&gt; Clone for Handle&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A&gt; Clone for WeakHandle&lt;A&gt;","synthetic":false,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl Clone for Output","synthetic":false,"types":[]},{"text":"impl Clone for AudioPrefab","synthetic":false,"types":[]},{"text":"impl Clone for WavFormat","synthetic":false,"types":[]},{"text":"impl Clone for OggFormat","synthetic":false,"types":[]},{"text":"impl Clone for FlacFormat","synthetic":false,"types":[]},{"text":"impl Clone for Mp3Format","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl Clone for FlyControlTag","synthetic":false,"types":[]},{"text":"impl Clone for ArcBallControlTag","synthetic":false,"types":[]},{"text":"impl Clone for ControlTagPrefab","synthetic":false,"types":[]},{"text":"impl Clone for WindowFocus","synthetic":false,"types":[]},{"text":"impl Clone for HideCursor","synthetic":false,"types":[]}];
implementors["amethyst_core"] = [{"text":"impl Clone for FrameRateLimitStrategy","synthetic":false,"types":[]},{"text":"impl Clone for FrameRateLimitConfig","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Plane&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RealField,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RealField,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Time","synthetic":false,"types":[]},{"text":"impl Clone for Stopwatch","synthetic":false,"types":[]},{"text":"impl Clone for Parent","synthetic":false,"types":[]},{"text":"impl Clone for Transform","synthetic":false,"types":[]},{"text":"impl Clone for Axis2","synthetic":false,"types":[]},{"text":"impl Clone for Axis3","synthetic":false,"types":[]},{"text":"impl Clone for Hidden","synthetic":false,"types":[]},{"text":"impl Clone for HiddenPropagate","synthetic":false,"types":[]},{"text":"impl Clone for Named","synthetic":false,"types":[]}];
implementors["amethyst_dynamic_ui"] = [{"text":"impl Clone for WidgetConstraint","synthetic":false,"types":[]},{"text":"impl Clone for PaddableConstraint","synthetic":false,"types":[]},{"text":"impl Clone for WidgetConstraintBuilder","synthetic":false,"types":[]},{"text":"impl Clone for PaddableConstraintBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Padding","synthetic":false,"types":[]},{"text":"impl Clone for LinearLayoutData","synthetic":false,"types":[]},{"text":"impl Clone for FlowDirection","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for ItemAlignment","synthetic":false,"types":[]},{"text":"impl Clone for LayoutVars","synthetic":false,"types":[]},{"text":"impl Clone for VarType","synthetic":false,"types":[]},{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for ExactFrame","synthetic":false,"types":[]},{"text":"impl Clone for EditVariable","synthetic":false,"types":[]},{"text":"impl Clone for ExtraButtonData","synthetic":false,"types":[]},{"text":"impl Clone for UiCachedImage","synthetic":false,"types":[]},{"text":"impl Clone for UiCachedText","synthetic":false,"types":[]},{"text":"impl Clone for CalculatedDimensions","synthetic":false,"types":[]},{"text":"impl Clone for LayoutIdentifier","synthetic":false,"types":[]},{"text":"impl Clone for Tinted","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Clone for DynamicUiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DynamicLayout","synthetic":false,"types":[]},{"text":"impl Clone for UiButtonTintAction","synthetic":false,"types":[]},{"text":"impl Clone for UiButtonTintActionType","synthetic":false,"types":[]},{"text":"impl Clone for SoundEvent","synthetic":false,"types":[]},{"text":"impl Clone for UiFmodRetrigger","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Styles","synthetic":false,"types":[]},{"text":"impl Clone for SizeConstraints","synthetic":false,"types":[]},{"text":"impl Clone for Properties","synthetic":false,"types":[]},{"text":"impl Clone for ModalData","synthetic":false,"types":[]},{"text":"impl Clone for NoCustomElements","synthetic":false,"types":[]},{"text":"impl Clone for UiExtraTextData","synthetic":false,"types":[]},{"text":"impl Clone for ImageButtonData","synthetic":false,"types":[]},{"text":"impl Clone for I18nData","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + ToLayoutElement&gt; Clone for LayoutElement&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Rect","synthetic":false,"types":[]}];
implementors["amethyst_error"] = [{"text":"impl&lt;'a&gt; Clone for Causes&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["amethyst_fmod"] = [{"text":"impl Clone for DriverInfo","synthetic":false,"types":[]},{"text":"impl Clone for Status","synthetic":false,"types":[]}];
implementors["amethyst_input"] = [{"text":"impl Clone for Axis","synthetic":false,"types":[]},{"text":"impl Clone for StringBindings","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Clone for Bindings&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + BindingTypes&gt; Clone for BindingError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Action: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Axis: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Button","synthetic":false,"types":[]},{"text":"impl Clone for ControllerAxis","synthetic":false,"types":[]},{"text":"impl Clone for ControllerButton","synthetic":false,"types":[]},{"text":"impl Clone for ControllerEvent","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for InputEvent&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for MouseAxis","synthetic":false,"types":[]},{"text":"impl Clone for ScrollDirection","synthetic":false,"types":[]}];
implementors["amethyst_locale"] = [{"text":"impl Clone for LocaleFormat","synthetic":false,"types":[]}];
implementors["amethyst_network"] = [{"text":"impl Clone for DeliveryRequirement","synthetic":false,"types":[]},{"text":"impl Clone for UrgencyRequirement","synthetic":false,"types":[]},{"text":"impl Clone for NetworkSimulationTime","synthetic":false,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl&lt;B:&nbsp;Clone + Backend, T:&nbsp;Clone + Base3DPassDef&gt; Clone for DrawBase3DDesc&lt;B, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone + Backend, T:&nbsp;Clone + Base3DPassDef&gt; Clone for DrawBase3DTransparentDesc&lt;B, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DrawDebugLinesDesc","synthetic":false,"types":[]},{"text":"impl Clone for DrawFlat2DDesc","synthetic":false,"types":[]},{"text":"impl Clone for DrawFlat2DTransparentDesc","synthetic":false,"types":[]},{"text":"impl Clone for DrawSkyboxDesc","synthetic":false,"types":[]},{"text":"impl Clone for TargetMetadata","synthetic":false,"types":[]},{"text":"impl Clone for TargetImage","synthetic":false,"types":[]},{"text":"impl Clone for ImageOptions","synthetic":false,"types":[]},{"text":"impl Clone for Target","synthetic":false,"types":[]},{"text":"impl Clone for Camera","synthetic":false,"types":[]},{"text":"impl Clone for ActiveCamera","synthetic":false,"types":[]},{"text":"impl Clone for CameraPrefab","synthetic":false,"types":[]},{"text":"impl Clone for ActiveCameraPrefab","synthetic":false,"types":[]},{"text":"impl Clone for DebugLine","synthetic":false,"types":[]},{"text":"impl Clone for DebugLinesParams","synthetic":false,"types":[]},{"text":"impl Clone for ObjFormat","synthetic":false,"types":[]},{"text":"impl Clone for ImageFormat","synthetic":false,"types":[]},{"text":"impl Clone for TexturePrefab","synthetic":false,"types":[]},{"text":"impl Clone for TextureGenerator","synthetic":false,"types":[]},{"text":"impl Clone for Light","synthetic":false,"types":[]},{"text":"impl Clone for DirectionalLight","synthetic":false,"types":[]},{"text":"impl Clone for PointLight","synthetic":false,"types":[]},{"text":"impl Clone for SpotLight","synthetic":false,"types":[]},{"text":"impl Clone for SunLight","synthetic":false,"types":[]},{"text":"impl Clone for LightPrefab","synthetic":false,"types":[]},{"text":"impl Clone for TextureOffset","synthetic":false,"types":[]},{"text":"impl Clone for Material","synthetic":false,"types":[]},{"text":"impl Clone for MaterialDefaults","synthetic":false,"types":[]},{"text":"impl Clone for TexAlbedo","synthetic":false,"types":[]},{"text":"impl Clone for TexEmission","synthetic":false,"types":[]},{"text":"impl Clone for TexNormal","synthetic":false,"types":[]},{"text":"impl Clone for TexMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Clone for TexAmbientOcclusion","synthetic":false,"types":[]},{"text":"impl Clone for TexCavity","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Backend&gt; Clone for PipelineDescBuilder&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Clone + Backend&gt; Clone for PipelinesBuilder&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AmbientColor","synthetic":false,"types":[]},{"text":"impl Clone for Tint","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Clone&gt; Clone for ShapePrefab&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Shape","synthetic":false,"types":[]},{"text":"impl Clone for JointWeights","synthetic":false,"types":[]},{"text":"impl Clone for JointIds","synthetic":false,"types":[]},{"text":"impl Clone for JointCombined","synthetic":false,"types":[]},{"text":"impl Clone for JointTransforms","synthetic":false,"types":[]},{"text":"impl Clone for JointTransformsPrefab","synthetic":false,"types":[]},{"text":"impl Clone for SpriteSheetPrefab","synthetic":false,"types":[]},{"text":"impl Clone for SpriteSheetReference","synthetic":false,"types":[]},{"text":"impl Clone for SpriteRenderPrefab","synthetic":false,"types":[]},{"text":"impl Clone for SpriteScenePrefab","synthetic":false,"types":[]},{"text":"impl Clone for SpriteSheet","synthetic":false,"types":[]},{"text":"impl Clone for Sprite","synthetic":false,"types":[]},{"text":"impl Clone for TextureCoordinates","synthetic":false,"types":[]},{"text":"impl Clone for SpriteRender","synthetic":false,"types":[]},{"text":"impl Clone for SpritePosition","synthetic":false,"types":[]},{"text":"impl Clone for SpriteList","synthetic":false,"types":[]},{"text":"impl Clone for SpriteGrid","synthetic":false,"types":[]},{"text":"impl Clone for Sprites","synthetic":false,"types":[]},{"text":"impl Clone for SpriteSheetFormat","synthetic":false,"types":[]},{"text":"impl Clone for MaterialId","synthetic":false,"types":[]},{"text":"impl Clone for TextureId","synthetic":false,"types":[]},{"text":"impl Clone for Transparent","synthetic":false,"types":[]},{"text":"impl Clone for MeshData","synthetic":false,"types":[]},{"text":"impl Clone for TextureData","synthetic":false,"types":[]},{"text":"impl Clone for BoundingSphere","synthetic":false,"types":[]},{"text":"impl Clone for TextureOffset","synthetic":false,"types":[]},{"text":"impl Clone for ViewArgs","synthetic":false,"types":[]},{"text":"impl Clone for Tint","synthetic":false,"types":[]},{"text":"impl Clone for VertexArgs","synthetic":false,"types":[]},{"text":"impl Clone for JointsOffset","synthetic":false,"types":[]},{"text":"impl Clone for SkinnedVertexArgs","synthetic":false,"types":[]},{"text":"impl Clone for PointLight","synthetic":false,"types":[]},{"text":"impl Clone for DirectionalLight","synthetic":false,"types":[]},{"text":"impl Clone for SpotLight","synthetic":false,"types":[]},{"text":"impl Clone for Environment","synthetic":false,"types":[]},{"text":"impl Clone for Material","synthetic":false,"types":[]},{"text":"impl Clone for SpriteArgs","synthetic":false,"types":[]},{"text":"impl Clone for ChangeDetection","synthetic":false,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl Clone for UiButtonAction","synthetic":false,"types":[]},{"text":"impl Clone for UiButtonActionType","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;Clone, I:&nbsp;Clone + WidgetId&gt; Clone for UiButtonBuilder&lt;G, I&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UiButtonActionRetrigger","synthetic":false,"types":[]},{"text":"impl Clone for UiButton","synthetic":false,"types":[]},{"text":"impl Clone for UiEventType","synthetic":false,"types":[]},{"text":"impl Clone for UiEvent","synthetic":false,"types":[]},{"text":"impl Clone for Interactable","synthetic":false,"types":[]},{"text":"impl Clone for FontAsset","synthetic":false,"types":[]},{"text":"impl Clone for TtfFormat","synthetic":false,"types":[]},{"text":"impl Clone for UiImage","synthetic":false,"types":[]},{"text":"impl Clone for UiLabel","synthetic":false,"types":[]},{"text":"impl Clone for ScaleMode","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Stretch","synthetic":false,"types":[]},{"text":"impl Clone for Mask","synthetic":false,"types":[]},{"text":"impl Clone for DrawUiDesc","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;Clone&gt; Clone for UiTransformData&lt;G&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UiTextData","synthetic":false,"types":[]},{"text":"impl Clone for TextEditingPrefab","synthetic":false,"types":[]},{"text":"impl Clone for UiImagePrefab","synthetic":false,"types":[]},{"text":"impl Clone for UiImageLoadPrefab","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Clone + WidgetId&gt; Clone for UiButtonData&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, W:&nbsp;Clone, G:&nbsp;Clone&gt; Clone for UiWidget&lt;C, W, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ToNativeWidget&lt;W&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: WidgetId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for NoCustomUi","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Clone for UiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CachedSelectionOrder","synthetic":false,"types":[]},{"text":"impl Clone for UiPlaySoundAction","synthetic":false,"types":[]},{"text":"impl Clone for UiSoundRetrigger","synthetic":false,"types":[]},{"text":"impl Clone for LineMode","synthetic":false,"types":[]},{"text":"impl Clone for UiText","synthetic":false,"types":[]},{"text":"impl Clone for TextSection","synthetic":false,"types":[]},{"text":"impl Clone for UiMultipartText","synthetic":false,"types":[]},{"text":"impl Clone for TextEditing","synthetic":false,"types":[]},{"text":"impl Clone for UiTransform","synthetic":false,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl Clone for AutoFov","synthetic":false,"types":[]},{"text":"impl Clone for CameraOrthoWorldCoordinates","synthetic":false,"types":[]},{"text":"impl Clone for CameraOrtho","synthetic":false,"types":[]},{"text":"impl Clone for CameraNormalizeMode","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Removal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Debug + Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Tag&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for DestroyAtTime","synthetic":false,"types":[]},{"text":"impl Clone for DestroyInTime","synthetic":false,"types":[]}];
implementors["amethyst_window"] = [{"text":"impl Clone for DisplayConfig","synthetic":false,"types":[]},{"text":"impl Clone for MonitorIdent","synthetic":false,"types":[]},{"text":"impl Clone for ScreenDimensions","synthetic":false,"types":[]}];
implementors["andrew"] = [{"text":"impl Clone for Sides","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A:&nbsp;Array&lt;Item = u8&gt; + Copy&gt; Clone for ArrayString&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CapacityError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Clone for Stream","synthetic":false,"types":[]}];
implementors["backtrace"] = [{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for PrintFmt","synthetic":false,"types":[]},{"text":"impl Clone for Backtrace","synthetic":false,"types":[]},{"text":"impl Clone for BacktraceFrame","synthetic":false,"types":[]},{"text":"impl Clone for BacktraceSymbol","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Clone for DecodeError","synthetic":false,"types":[]},{"text":"impl Clone for CharacterSet","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["bytemuck"] = [{"text":"impl Clone for PodCastError","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Clone for Bytes","synthetic":false,"types":[]},{"text":"impl Clone for BytesMut","synthetic":false,"types":[]}];
implementors["cassowary"] = [{"text":"impl Clone for Variable","synthetic":false,"types":[]},{"text":"impl Clone for Term","synthetic":false,"types":[]},{"text":"impl Clone for Expression","synthetic":false,"types":[]},{"text":"impl Clone for RelationalOperator","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for AddConstraintError","synthetic":false,"types":[]},{"text":"impl Clone for RemoveConstraintError","synthetic":false,"types":[]},{"text":"impl Clone for AddEditVariableError","synthetic":false,"types":[]},{"text":"impl Clone for RemoveEditVariableError","synthetic":false,"types":[]},{"text":"impl Clone for SuggestValueError","synthetic":false,"types":[]}];
implementors["cgmath"] = [{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Matrix2&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Matrix3&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Matrix4&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Quaternion&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Vector1&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Vector2&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Vector3&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Vector4&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Rad&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Deg&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + Angle&gt; Clone for Euler&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Point1&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Point2&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Point3&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Basis2&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Basis3&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Clone + VectorSpace, R:&nbsp;Clone&gt; Clone for Decomposed&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V::Scalar: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for PerspectiveFov&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Perspective&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Ortho&lt;S&gt;","synthetic":false,"types":[]}];
implementors["claxon"] = [{"text":"impl Clone for StreamInfo","synthetic":false,"types":[]},{"text":"impl Clone for SeekPoint","synthetic":false,"types":[]},{"text":"impl Clone for FlacReaderOptions","synthetic":false,"types":[]}];
implementors["colored"] = [{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Styles","synthetic":false,"types":[]},{"text":"impl Clone for ColoredString","synthetic":false,"types":[]}];
implementors["colorful"] = [{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for ColorMode","synthetic":false,"types":[]},{"text":"impl Clone for Colorado","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for CString","synthetic":false,"types":[]},{"text":"impl Clone for RGB","synthetic":false,"types":[]},{"text":"impl Clone for HSL","synthetic":false,"types":[]}];
implementors["cpal"] = [{"text":"impl Clone for HostUnavailable","synthetic":false,"types":[]},{"text":"impl Clone for BackendSpecificError","synthetic":false,"types":[]},{"text":"impl Clone for Device","synthetic":false,"types":[]},{"text":"impl Clone for StreamId","synthetic":false,"types":[]},{"text":"impl Clone for StreamId","synthetic":false,"types":[]},{"text":"impl Clone for HostId","synthetic":false,"types":[]},{"text":"impl Clone for SampleFormat","synthetic":false,"types":[]},{"text":"impl Clone for SampleRate","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for SupportedFormat","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Clone for Hasher","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RecvError","synthetic":false,"types":[]},{"text":"impl Clone for TryRecvError","synthetic":false,"types":[]},{"text":"impl Clone for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Clone for TrySelectError","synthetic":false,"types":[]},{"text":"impl Clone for SelectTimeoutError","synthetic":false,"types":[]},{"text":"impl Clone for TryReadyError","synthetic":false,"types":[]},{"text":"impl Clone for ReadyTimeoutError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Clone for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Clone for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Owned&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'g, T&gt; Clone for Shared&lt;'g, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl Clone for PopError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for PushError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Unparker","synthetic":false,"types":[]},{"text":"impl Clone for WaitGroup","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Clone for Compression","synthetic":false,"types":[]},{"text":"impl Clone for SpecialOptions","synthetic":false,"types":[]},{"text":"impl Clone for CompressionOptions","synthetic":false,"types":[]},{"text":"impl Clone for MatchingType","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["env_logger"] = [{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for Target","synthetic":false,"types":[]},{"text":"impl Clone for WriteStyle","synthetic":false,"types":[]},{"text":"impl Clone for TimestampPrecision","synthetic":false,"types":[]}];
implementors["euclid"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Angle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Box2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Box3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for HomogeneousVector&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Length&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for NonEmpty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Point2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Point3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Rect&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src:&nbsp;Clone, Dst:&nbsp;Clone&gt; Clone for RigidTransform3D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Rotation2D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Rotation3D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Scale&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for SideOffsets2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Size2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Size3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Transform2D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Transform3D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Translation2D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Src, Dst&gt; Clone for Translation3D&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Vector2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U&gt; Clone for Vector3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BoolVector2D","synthetic":false,"types":[]},{"text":"impl Clone for BoolVector3D","synthetic":false,"types":[]},{"text":"impl Clone for UnknownUnit","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["fern"] = [{"text":"impl Clone for ColoredLevelConfig","synthetic":false,"types":[]}];
implementors["float_ord"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for FloatOrd&lt;T&gt;","synthetic":false,"types":[]}];
implementors["fluent_bundle"] = [{"text":"impl Clone for ResolverError","synthetic":false,"types":[]},{"text":"impl Clone for FluentNumberStyle","synthetic":false,"types":[]},{"text":"impl Clone for FluentNumberCurrencyDisplayStyle","synthetic":false,"types":[]},{"text":"impl Clone for FluentNumberOptions","synthetic":false,"types":[]},{"text":"impl Clone for FluentNumber","synthetic":false,"types":[]},{"text":"impl&lt;'source&gt; Clone for DisplayableNodeType&lt;'source&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'source&gt; Clone for DisplayableNode&lt;'source&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'s&gt; Clone for FluentValue&lt;'s&gt;","synthetic":false,"types":[]}];
implementors["fluent_langneg"] = [{"text":"impl Clone for NegotiationStrategy","synthetic":false,"types":[]}];
implementors["fmod_sys"] = [{"text":"impl Clone for FMOD_SYSTEM","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SOUND","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELCONTROL","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNEL","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELGROUP","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SOUNDGROUP","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_REVERB3D","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSPCONNECTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_POLYGON","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_GEOMETRY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SYNCPOINT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_RESULT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELCONTROL_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_OUTPUTTYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DEBUG_MODE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SPEAKERMODE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SPEAKER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELORDER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_PLUGINTYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SOUND_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SOUND_FORMAT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_OPENSTATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_SOUNDGROUP_BEHAVIOR","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELCONTROL_CALLBACK_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CHANNELCONTROL_DSP_INDEX","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_ERRORCALLBACK_INSTANCETYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_RESAMPLER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSPCONNECTION_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_TAGTYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_TAGDATATYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_ASYNCREADINFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_VECTOR","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_3D_ATTRIBUTES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_GUID","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_PLUGINLIST","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_ADVANCEDSETTINGS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_TAG","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CREATESOUNDEXINFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_REVERB_PROPERTIES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_ERRORCALLBACK_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CODEC_DESCRIPTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CODEC_WAVEFORMAT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_CODEC_STATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_OSCILLATOR","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_LOWPASS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_ITLOWPASS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_HIGHPASS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_ECHO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_FADER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_FLANGE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_DISTORTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_NORMALIZE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_LIMITER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMEQ","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_MULTIBAND_EQ","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_MULTIBAND_EQ_FILTER_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PITCHSHIFT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_CHORUS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_ITECHO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_COMPRESSOR","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_SFXREVERB","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_LOWPASS_SIMPLE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_DELAY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_TREMOLO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_SEND","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_RETURN","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_HIGHPASS_SIMPLE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN_2D_STEREO_MODE_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN_MODE_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN_3D_ROLLOFF_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN_3D_EXTENT_MODE_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_THREE_EQ_CROSSOVERSLOPE_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_THREE_EQ","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_FFT_WINDOW","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_FFT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_ENVELOPEFOLLOWER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_CONVOLUTION_REVERB","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_CHANNELMIX_OUTPUT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_CHANNELMIX","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_TRANSCEIVER_SPEAKERMODE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_TRANSCEIVER","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_OBJECTPAN","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PROCESS_OPERATION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PAN_SURROUND_FLAGS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_FLOAT_MAPPING_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DATA_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_BUFFER_ARRAY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_COMPLEX","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_FLOAT_MAPPING","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC_FLOAT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC_INT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC_BOOL","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC_DATA","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_DESC__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_OVERALLGAIN","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_3DATTRIBUTES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_3DATTRIBUTES_MULTI","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_SIDECHAIN","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_PARAMETER_FFT","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_DESCRIPTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_STATE_DFT_FUNCTIONS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_STATE_PAN_FUNCTIONS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_STATE_FUNCTIONS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_STATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_DSP_METERING_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_OUTPUT_DESCRIPTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_OUTPUT_STATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_OUTPUT_OBJECT3DINFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_SYSTEM","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_EVENTDESCRIPTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_EVENTINSTANCE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_BUS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_VCA","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_BANK","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_COMMANDREPLAY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_LOADING_STATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_LOAD_MEMORY_MODE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PARAMETER_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_USER_PROPERTY_TYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_EVENT_PROPERTY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PLAYBACK_STATE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_STOP_MODE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_INSTANCETYPE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_BANK_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PARAMETER_ID","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PARAMETER_DESCRIPTION","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_USER_PROPERTY","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_USER_PROPERTY__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PROGRAMMER_SOUND_PROPERTIES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_PLUGIN_INSTANCE_PROPERTIES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_TIMELINE_MARKER_PROPERTIES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_TIMELINE_BEAT_PROPERTIES","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_ADVANCEDSETTINGS","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_CPU_USAGE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_BUFFER_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_BUFFER_USAGE","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_SOUND_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_COMMAND_INFO","synthetic":false,"types":[]},{"text":"impl Clone for FMOD_STUDIO_MEMORY_USAGE","synthetic":false,"types":[]}];
implementors["font_kit"] = [{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for RasterizationOptions","synthetic":false,"types":[]},{"text":"impl Clone for GlyphLoadingError","synthetic":false,"types":[]},{"text":"impl Clone for SelectionError","synthetic":false,"types":[]},{"text":"impl Clone for FamilyName","synthetic":false,"types":[]},{"text":"impl Clone for FileType","synthetic":false,"types":[]},{"text":"impl Clone for Handle","synthetic":false,"types":[]},{"text":"impl Clone for HintingOptions","synthetic":false,"types":[]},{"text":"impl Clone for FontTransform","synthetic":false,"types":[]},{"text":"impl Clone for Font","synthetic":false,"types":[]},{"text":"impl Clone for Metrics","synthetic":false,"types":[]},{"text":"impl Clone for Properties","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Weight","synthetic":false,"types":[]},{"text":"impl Clone for Stretch","synthetic":false,"types":[]}];
implementors["fontconfig"] = [{"text":"impl Clone for struct__FcMatrix","synthetic":false,"types":[]}];
implementors["freetype"] = [{"text":"impl&lt;T&gt; Clone for __BindgenUnionField&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FT_MemoryRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_StreamRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_StreamDesc_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Vector_","synthetic":false,"types":[]},{"text":"impl Clone for FT_BBox_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Pixel_Mode_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Bitmap_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Outline_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Outline_Funcs_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Glyph_Format_","synthetic":false,"types":[]},{"text":"impl Clone for FT_RasterRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Span_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Raster_Params_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Raster_Funcs_","synthetic":false,"types":[]},{"text":"impl Clone for FT_UnitVector_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Matrix_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Data_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Generic_","synthetic":false,"types":[]},{"text":"impl Clone for FT_ListNodeRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_ListRec_","synthetic":false,"types":[]},{"text":"impl Clone for _bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for _bindgen_ty_2","synthetic":false,"types":[]},{"text":"impl Clone for FT_Glyph_Metrics_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Bitmap_Size_","synthetic":false,"types":[]},{"text":"impl Clone for FT_LibraryRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_ModuleRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_DriverRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_RendererRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_FaceRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_SizeRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_GlyphSlotRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_CharMapRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Encoding_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Face_InternalRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Size_InternalRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Size_Metrics_","synthetic":false,"types":[]},{"text":"impl Clone for FT_SubGlyphRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Slot_InternalRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Parameter_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Open_Args_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Size_Request_Type_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Size_RequestRec_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Render_Mode_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Kerning_Mode_","synthetic":false,"types":[]},{"text":"impl Clone for FT_LcdFilter_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Sfnt_Tag_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Module_Class_","synthetic":false,"types":[]},{"text":"impl Clone for FT_TrueTypeEngineType_","synthetic":false,"types":[]},{"text":"impl Clone for FT_Orientation_","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Clone for FxHasher","synthetic":false,"types":[]},{"text":"impl Clone for FxHasher64","synthetic":false,"types":[]},{"text":"impl Clone for FxHasher32","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Clone, N&gt; Clone for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, N&gt; Clone for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["genmesh"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Quad&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Triangle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Polygon&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Line&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Circle","synthetic":false,"types":[]},{"text":"impl Clone for Cube","synthetic":false,"types":[]},{"text":"impl Clone for Cylinder","synthetic":false,"types":[]},{"text":"impl Clone for IcoSphere","synthetic":false,"types":[]},{"text":"impl Clone for Plane","synthetic":false,"types":[]},{"text":"impl Clone for SphereUv","synthetic":false,"types":[]},{"text":"impl Clone for Torus","synthetic":false,"types":[]},{"text":"impl Clone for Vertex","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl Clone for Backend","synthetic":false,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Clone for MemoryTypeId","synthetic":false,"types":[]},{"text":"impl Clone for MemoryType","synthetic":false,"types":[]},{"text":"impl Clone for MemoryProperties","synthetic":false,"types":[]},{"text":"impl Clone for DeviceType","synthetic":false,"types":[]},{"text":"impl Clone for AdapterInfo","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for ViewCreationError","synthetic":false,"types":[]},{"text":"impl Clone for Usage","synthetic":false,"types":[]},{"text":"impl Clone for Access","synthetic":false,"types":[]},{"text":"impl Clone for ClearColor","synthetic":false,"types":[]},{"text":"impl Clone for ClearDepthStencil","synthetic":false,"types":[]},{"text":"impl Clone for ClearValue","synthetic":false,"types":[]},{"text":"impl Clone for AttachmentClear","synthetic":false,"types":[]},{"text":"impl Clone for ImageResolve","synthetic":false,"types":[]},{"text":"impl Clone for ImageBlit","synthetic":false,"types":[]},{"text":"impl Clone for ClearColorRaw","synthetic":false,"types":[]},{"text":"impl Clone for ClearDepthStencilRaw","synthetic":false,"types":[]},{"text":"impl Clone for ClearValueRaw","synthetic":false,"types":[]},{"text":"impl Clone for CommandBufferFlags","synthetic":false,"types":[]},{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for BufferCopy","synthetic":false,"types":[]},{"text":"impl Clone for ImageCopy","synthetic":false,"types":[]},{"text":"impl Clone for BufferImageCopy","synthetic":false,"types":[]},{"text":"impl Clone for DeviceLost","synthetic":false,"types":[]},{"text":"impl Clone for SurfaceLost","synthetic":false,"types":[]},{"text":"impl Clone for WindowInUse","synthetic":false,"types":[]},{"text":"impl Clone for OutOfMemory","synthetic":false,"types":[]},{"text":"impl Clone for OomOrDeviceLost","synthetic":false,"types":[]},{"text":"impl Clone for AllocationError","synthetic":false,"types":[]},{"text":"impl Clone for BindError","synthetic":false,"types":[]},{"text":"impl Clone for WaitFor","synthetic":false,"types":[]},{"text":"impl Clone for ShaderError","synthetic":false,"types":[]},{"text":"impl Clone for DeviceCreationError","synthetic":false,"types":[]},{"text":"impl Clone for HostExecutionError","synthetic":false,"types":[]},{"text":"impl Clone for Aspects","synthetic":false,"types":[]},{"text":"impl Clone for FormatDesc","synthetic":false,"types":[]},{"text":"impl Clone for FormatBits","synthetic":false,"types":[]},{"text":"impl Clone for Component","synthetic":false,"types":[]},{"text":"impl Clone for Swizzle","synthetic":false,"types":[]},{"text":"impl Clone for Properties","synthetic":false,"types":[]},{"text":"impl Clone for ImageFeature","synthetic":false,"types":[]},{"text":"impl Clone for BufferFeature","synthetic":false,"types":[]},{"text":"impl Clone for ChannelType","synthetic":false,"types":[]},{"text":"impl Clone for SurfaceType","synthetic":false,"types":[]},{"text":"impl Clone for BaseFormat","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Rg4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgba4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bgra4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for R5g6b5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for B5g6r5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for R5g5b5a1Unorm","synthetic":false,"types":[]},{"text":"impl Clone for B5g5r5a1Unorm","synthetic":false,"types":[]},{"text":"impl Clone for A1r5g5b5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for R8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for R8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for R8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for R8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for R8Uint","synthetic":false,"types":[]},{"text":"impl Clone for R8Sint","synthetic":false,"types":[]},{"text":"impl Clone for R8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rg8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Bgr8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Bgra8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Sint","synthetic":false,"types":[]},{"text":"impl Clone for Abgr8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Unorm","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Snorm","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Uint","synthetic":false,"types":[]},{"text":"impl Clone for A2r10g10b10Sint","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Unorm","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Snorm","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Uint","synthetic":false,"types":[]},{"text":"impl Clone for A2b10g10r10Sint","synthetic":false,"types":[]},{"text":"impl Clone for R16Unorm","synthetic":false,"types":[]},{"text":"impl Clone for R16Snorm","synthetic":false,"types":[]},{"text":"impl Clone for R16Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for R16Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for R16Uint","synthetic":false,"types":[]},{"text":"impl Clone for R16Sint","synthetic":false,"types":[]},{"text":"impl Clone for R16Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rg16Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb16Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Sscaled","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba16Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for R32Uint","synthetic":false,"types":[]},{"text":"impl Clone for R32Sint","synthetic":false,"types":[]},{"text":"impl Clone for R32Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rg32Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rg32Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rg32Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgb32Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb32Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb32Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgba32Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba32Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba32Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for R64Uint","synthetic":false,"types":[]},{"text":"impl Clone for R64Sint","synthetic":false,"types":[]},{"text":"impl Clone for R64Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rg64Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rg64Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rg64Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgb64Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb64Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgb64Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for Rgba64Uint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba64Sint","synthetic":false,"types":[]},{"text":"impl Clone for Rgba64Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for B10g11r11Ufloat","synthetic":false,"types":[]},{"text":"impl Clone for E5b9g9r9Ufloat","synthetic":false,"types":[]},{"text":"impl Clone for D16Unorm","synthetic":false,"types":[]},{"text":"impl Clone for X8D24Unorm","synthetic":false,"types":[]},{"text":"impl Clone for D32Sfloat","synthetic":false,"types":[]},{"text":"impl Clone for S8Uint","synthetic":false,"types":[]},{"text":"impl Clone for D16UnormS8Uint","synthetic":false,"types":[]},{"text":"impl Clone for D24UnormS8Uint","synthetic":false,"types":[]},{"text":"impl Clone for D32SfloatS8Uint","synthetic":false,"types":[]},{"text":"impl Clone for Bc1RgbUnorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc1RgbSrgb","synthetic":false,"types":[]},{"text":"impl Clone for Bc1RgbaUnorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc1RgbaSrgb","synthetic":false,"types":[]},{"text":"impl Clone for Bc2Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc2Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Bc3Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc3Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Bc4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc4Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc5Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc6hUfloat","synthetic":false,"types":[]},{"text":"impl Clone for Bc6hSfloat","synthetic":false,"types":[]},{"text":"impl Clone for Bc7Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Bc7Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8a1Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8a1Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8a8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Etc2R8g8b8a8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for EacR11Unorm","synthetic":false,"types":[]},{"text":"impl Clone for EacR11Snorm","synthetic":false,"types":[]},{"text":"impl Clone for EacR11g11Unorm","synthetic":false,"types":[]},{"text":"impl Clone for EacR11g11Snorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc4x4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc4x4Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc5x4Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc5x4Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc5x5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc5x5Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc6x5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc6x5Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc6x6Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc6x6Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x5Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x6Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x6Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc8x8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x5Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x5Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x6Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x6Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x8Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x8Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x10Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc10x10Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc12x10Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc12x10Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Astc12x12Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Astc12x12Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Extent","synthetic":false,"types":[]},{"text":"impl Clone for Offset","synthetic":false,"types":[]},{"text":"impl Clone for Tiling","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for ViewError","synthetic":false,"types":[]},{"text":"impl Clone for LayerError","synthetic":false,"types":[]},{"text":"impl Clone for Filter","synthetic":false,"types":[]},{"text":"impl Clone for Anisotropic","synthetic":false,"types":[]},{"text":"impl Clone for CubeFace","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for ViewKind","synthetic":false,"types":[]},{"text":"impl Clone for ViewCapabilities","synthetic":false,"types":[]},{"text":"impl Clone for Usage","synthetic":false,"types":[]},{"text":"impl Clone for WrapMode","synthetic":false,"types":[]},{"text":"impl Clone for Lod","synthetic":false,"types":[]},{"text":"impl Clone for PackedColor","synthetic":false,"types":[]},{"text":"impl Clone for SamplerInfo","synthetic":false,"types":[]},{"text":"impl Clone for Layout","synthetic":false,"types":[]},{"text":"impl Clone for Access","synthetic":false,"types":[]},{"text":"impl Clone for Subresource","synthetic":false,"types":[]},{"text":"impl Clone for SubresourceLayers","synthetic":false,"types":[]},{"text":"impl Clone for SubresourceRange","synthetic":false,"types":[]},{"text":"impl Clone for FormatProperties","synthetic":false,"types":[]},{"text":"impl Clone for SubresourceFootprint","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Properties","synthetic":false,"types":[]},{"text":"impl Clone for Dependencies","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Clone + Backend&gt; Clone for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Buffer: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Image: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Requirements","synthetic":false,"types":[]},{"text":"impl Clone for AttachmentLoadOp","synthetic":false,"types":[]},{"text":"impl Clone for AttachmentStoreOp","synthetic":false,"types":[]},{"text":"impl Clone for AttachmentOps","synthetic":false,"types":[]},{"text":"impl Clone for Attachment","synthetic":false,"types":[]},{"text":"impl Clone for SubpassRef","synthetic":false,"types":[]},{"text":"impl Clone for SubpassDependency","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Backend&gt; Clone for Subpass&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CommandPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl Clone for DescriptorType","synthetic":false,"types":[]},{"text":"impl Clone for DescriptorSetLayoutBinding","synthetic":false,"types":[]},{"text":"impl Clone for DescriptorRangeDesc","synthetic":false,"types":[]},{"text":"impl Clone for AllocationError","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Clone + Backend&gt; Clone for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Sampler: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::ImageView: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::ImageView: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Sampler: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Buffer: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::BufferView: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::BufferView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Clone + Backend&gt; Clone for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B::DescriptorSet: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::DescriptorSet: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for DescriptorPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl Clone for Rect","synthetic":false,"types":[]},{"text":"impl Clone for ClearRect","synthetic":false,"types":[]},{"text":"impl Clone for Viewport","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Clone + Backend&gt; Clone for GraphicsShaderSet&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BakedStates","synthetic":false,"types":[]},{"text":"impl Clone for PolygonMode","synthetic":false,"types":[]},{"text":"impl Clone for FrontFace","synthetic":false,"types":[]},{"text":"impl Clone for DepthBias","synthetic":false,"types":[]},{"text":"impl Clone for Rasterizer","synthetic":false,"types":[]},{"text":"impl Clone for BlendDesc","synthetic":false,"types":[]},{"text":"impl Clone for LogicOp","synthetic":false,"types":[]},{"text":"impl Clone for Multisampling","synthetic":false,"types":[]},{"text":"impl Clone for VertexInputRate","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for Element&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl Clone for VertexBufferDesc","synthetic":false,"types":[]},{"text":"impl Clone for AttributeDesc","synthetic":false,"types":[]},{"text":"impl Clone for PrimitiveRestart","synthetic":false,"types":[]},{"text":"impl Clone for InputAssemblerDesc","synthetic":false,"types":[]},{"text":"impl Clone for Comparison","synthetic":false,"types":[]},{"text":"impl Clone for ColorMask","synthetic":false,"types":[]},{"text":"impl Clone for Factor","synthetic":false,"types":[]},{"text":"impl Clone for BlendOp","synthetic":false,"types":[]},{"text":"impl Clone for BlendState","synthetic":false,"types":[]},{"text":"impl Clone for ColorBlendDesc","synthetic":false,"types":[]},{"text":"impl Clone for DepthTest","synthetic":false,"types":[]},{"text":"impl Clone for StencilOp","synthetic":false,"types":[]},{"text":"impl Clone for StencilFace","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Sided&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for StencilTest","synthetic":false,"types":[]},{"text":"impl Clone for DepthStencilDesc","synthetic":false,"types":[]},{"text":"impl Clone for Face","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for PipelineStage","synthetic":false,"types":[]},{"text":"impl Clone for ShaderStageFlags","synthetic":false,"types":[]},{"text":"impl Clone for Stage","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Backend&gt; Clone for EntryPoint&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PipelineCreationFlags","synthetic":false,"types":[]},{"text":"impl Clone for SpecializationConstant","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Specialization&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for State&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlags","synthetic":false,"types":[]},{"text":"impl Clone for ResultFlags","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for PipelineStatistic","synthetic":false,"types":[]},{"text":"impl Clone for QueueFamilyId","synthetic":false,"types":[]},{"text":"impl Clone for QueueType","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for Extent2D","synthetic":false,"types":[]},{"text":"impl Clone for SurfaceCapabilities","synthetic":false,"types":[]},{"text":"impl Clone for PresentMode","synthetic":false,"types":[]},{"text":"impl Clone for CompositeAlpha","synthetic":false,"types":[]},{"text":"impl Clone for SwapchainConfig","synthetic":false,"types":[]},{"text":"impl Clone for AcquireError","synthetic":false,"types":[]},{"text":"impl Clone for PresentError","synthetic":false,"types":[]},{"text":"impl Clone for InitError","synthetic":false,"types":[]},{"text":"impl Clone for Features","synthetic":false,"types":[]},{"text":"impl Clone for Limits","synthetic":false,"types":[]},{"text":"impl Clone for Primitive","synthetic":false,"types":[]},{"text":"impl Clone for IndexType","synthetic":false,"types":[]},{"text":"impl Clone for SubmissionError","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl Clone for DisposalMethod","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for Extension","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Frame&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["gimli"] = [{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Encoding","synthetic":false,"types":[]},{"text":"impl Clone for LineEncoding","synthetic":false,"types":[]},{"text":"impl Clone for Register","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugAbbrevOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugAddrBase&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugAddrIndex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugInfoOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugLineOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugLineStrOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for LocationListsOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugLocListsBase&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugLocListsIndex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugMacinfoOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugMacroOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RangeListsOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugRngListsBase&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugRngListsIndex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugStrOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugStrOffsetsBase&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugStrOffsetsIndex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugTypesOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DebugTypeSignature","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DebugFrameOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for EhFrameOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for UnitSectionOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SectionId","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for X86","synthetic":false,"types":[]},{"text":"impl Clone for X86_64","synthetic":false,"types":[]},{"text":"impl Clone for DwUt","synthetic":false,"types":[]},{"text":"impl Clone for DwCfa","synthetic":false,"types":[]},{"text":"impl Clone for DwChildren","synthetic":false,"types":[]},{"text":"impl Clone for DwTag","synthetic":false,"types":[]},{"text":"impl Clone for DwAt","synthetic":false,"types":[]},{"text":"impl Clone for DwForm","synthetic":false,"types":[]},{"text":"impl Clone for DwAte","synthetic":false,"types":[]},{"text":"impl Clone for DwLle","synthetic":false,"types":[]},{"text":"impl Clone for DwDs","synthetic":false,"types":[]},{"text":"impl Clone for DwEnd","synthetic":false,"types":[]},{"text":"impl Clone for DwAccess","synthetic":false,"types":[]},{"text":"impl Clone for DwVis","synthetic":false,"types":[]},{"text":"impl Clone for DwVirtuality","synthetic":false,"types":[]},{"text":"impl Clone for DwLang","synthetic":false,"types":[]},{"text":"impl Clone for DwAddr","synthetic":false,"types":[]},{"text":"impl Clone for DwId","synthetic":false,"types":[]},{"text":"impl Clone for DwCc","synthetic":false,"types":[]},{"text":"impl Clone for DwInl","synthetic":false,"types":[]},{"text":"impl Clone for DwOrd","synthetic":false,"types":[]},{"text":"impl Clone for DwDsc","synthetic":false,"types":[]},{"text":"impl Clone for DwIdx","synthetic":false,"types":[]},{"text":"impl Clone for DwDefaulted","synthetic":false,"types":[]},{"text":"impl Clone for DwLns","synthetic":false,"types":[]},{"text":"impl Clone for DwLne","synthetic":false,"types":[]},{"text":"impl Clone for DwLnct","synthetic":false,"types":[]},{"text":"impl Clone for DwMacro","synthetic":false,"types":[]},{"text":"impl Clone for DwRle","synthetic":false,"types":[]},{"text":"impl Clone for DwOp","synthetic":false,"types":[]},{"text":"impl Clone for DwEhPe","synthetic":false,"types":[]},{"text":"impl Clone for RunTimeEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]},{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugAddr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for DebugFrame&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for EhFrameHdr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for ParsedEhFrameHdr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;Clone + Reader&gt; Clone for EhHdrTable&lt;'a, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for EhFrame&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BaseAddresses","synthetic":false,"types":[]},{"text":"impl Clone for SectionBaseAddresses","synthetic":false,"types":[]},{"text":"impl&lt;'bases, Section:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: UnwindSection&lt;R&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'bases, Section:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: UnwindSection&lt;R&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Augmentation","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'bases, Section:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: UnwindSection&lt;R&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for UninitializedUnwindContext&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for UnwindContext&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'iter, R:&nbsp;Clone&gt; Clone for RegisterRuleIter&lt;'iter, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for UnwindTableRow&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for CfaRule&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for RegisterRule&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for CallFrameInstruction&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;Clone + Reader&gt; Clone for CallFrameInstructionIter&lt;'a, R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Pointer","synthetic":false,"types":[]},{"text":"impl&lt;'input, Endian:&nbsp;Clone&gt; Clone for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Endianity,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ReaderOffsetId","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugAbbrev&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Abbreviations","synthetic":false,"types":[]},{"text":"impl Clone for Abbreviation","synthetic":false,"types":[]},{"text":"impl Clone for AttributeSpecification","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Copy&gt; Clone for ArangeEntry&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for DebugAranges&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for ArangeEntryIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugLine&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Program:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: LineProgram&lt;R, Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for LineInstructions&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for LineRow","synthetic":false,"types":[]},{"text":"impl Clone for ColumnType","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for LineSequence&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for FileEntryFormat","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugLoc&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugLocLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for LocationLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for LocationListEntry&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for DieReference&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for Expression&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for OperationIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for DebugPubNames&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for PubNamesEntryIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for DebugPubTypes&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for PubTypesEntryIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugRanges&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugRngLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for RangeLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RawRngListEntry&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Range","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugStrOffsets&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugLineStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for UnitOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugInfo&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for CompilationUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for CompilationUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for Attribute&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R:&nbsp;Clone + Reader&gt; Clone for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R:&nbsp;Clone&gt; Clone for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R:&nbsp;Clone&gt; Clone for EntriesCursor&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R:&nbsp;Clone&gt; Clone for EntriesTree&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for DebugTypes&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Reader&gt; Clone for TypeUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone, Offset:&nbsp;Clone&gt; Clone for TypeUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Reader&lt;Offset = Offset&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: ReaderOffset,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ValueType","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["glsl_layout"] = [{"text":"impl Clone for boolean","synthetic":false,"types":[]},{"text":"impl Clone for bvec2","synthetic":false,"types":[]},{"text":"impl Clone for bvec3","synthetic":false,"types":[]},{"text":"impl Clone for bvec4","synthetic":false,"types":[]},{"text":"impl Clone for ivec2","synthetic":false,"types":[]},{"text":"impl Clone for ivec3","synthetic":false,"types":[]},{"text":"impl Clone for ivec4","synthetic":false,"types":[]},{"text":"impl Clone for uvec2","synthetic":false,"types":[]},{"text":"impl Clone for uvec3","synthetic":false,"types":[]},{"text":"impl Clone for uvec4","synthetic":false,"types":[]},{"text":"impl Clone for vec2","synthetic":false,"types":[]},{"text":"impl Clone for vec3","synthetic":false,"types":[]},{"text":"impl Clone for vec4","synthetic":false,"types":[]},{"text":"impl Clone for dvec2","synthetic":false,"types":[]},{"text":"impl Clone for dvec3","synthetic":false,"types":[]},{"text":"impl Clone for dvec4","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + AsStd140&gt; Clone for Element&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Align: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for bmat2x2","synthetic":false,"types":[]},{"text":"impl Clone for bmat2x3","synthetic":false,"types":[]},{"text":"impl Clone for bmat2x4","synthetic":false,"types":[]},{"text":"impl Clone for bmat3x2","synthetic":false,"types":[]},{"text":"impl Clone for bmat3x3","synthetic":false,"types":[]},{"text":"impl Clone for bmat3x4","synthetic":false,"types":[]},{"text":"impl Clone for bmat4x2","synthetic":false,"types":[]},{"text":"impl Clone for bmat4x3","synthetic":false,"types":[]},{"text":"impl Clone for bmat4x4","synthetic":false,"types":[]},{"text":"impl Clone for imat2x2","synthetic":false,"types":[]},{"text":"impl Clone for imat2x3","synthetic":false,"types":[]},{"text":"impl Clone for imat2x4","synthetic":false,"types":[]},{"text":"impl Clone for imat3x2","synthetic":false,"types":[]},{"text":"impl Clone for imat3x3","synthetic":false,"types":[]},{"text":"impl Clone for imat3x4","synthetic":false,"types":[]},{"text":"impl Clone for imat4x2","synthetic":false,"types":[]},{"text":"impl Clone for imat4x3","synthetic":false,"types":[]},{"text":"impl Clone for imat4x4","synthetic":false,"types":[]},{"text":"impl Clone for umat2x2","synthetic":false,"types":[]},{"text":"impl Clone for umat2x3","synthetic":false,"types":[]},{"text":"impl Clone for umat2x4","synthetic":false,"types":[]},{"text":"impl Clone for umat3x2","synthetic":false,"types":[]},{"text":"impl Clone for umat3x3","synthetic":false,"types":[]},{"text":"impl Clone for umat3x4","synthetic":false,"types":[]},{"text":"impl Clone for umat4x2","synthetic":false,"types":[]},{"text":"impl Clone for umat4x3","synthetic":false,"types":[]},{"text":"impl Clone for umat4x4","synthetic":false,"types":[]},{"text":"impl Clone for mat2x2","synthetic":false,"types":[]},{"text":"impl Clone for mat2x3","synthetic":false,"types":[]},{"text":"impl Clone for mat2x4","synthetic":false,"types":[]},{"text":"impl Clone for mat3x2","synthetic":false,"types":[]},{"text":"impl Clone for mat3x3","synthetic":false,"types":[]},{"text":"impl Clone for mat3x4","synthetic":false,"types":[]},{"text":"impl Clone for mat4x2","synthetic":false,"types":[]},{"text":"impl Clone for mat4x3","synthetic":false,"types":[]},{"text":"impl Clone for mat4x4","synthetic":false,"types":[]},{"text":"impl Clone for dmat2x2","synthetic":false,"types":[]},{"text":"impl Clone for dmat2x3","synthetic":false,"types":[]},{"text":"impl Clone for dmat2x4","synthetic":false,"types":[]},{"text":"impl Clone for dmat3x2","synthetic":false,"types":[]},{"text":"impl Clone for dmat3x3","synthetic":false,"types":[]},{"text":"impl Clone for dmat3x4","synthetic":false,"types":[]},{"text":"impl Clone for dmat4x2","synthetic":false,"types":[]},{"text":"impl Clone for dmat4x3","synthetic":false,"types":[]},{"text":"impl Clone for dmat4x4","synthetic":false,"types":[]}];
implementors["gltf"] = [{"text":"impl&lt;'a, T:&nbsp;Clone + Item&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SparseIndicesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone + Item&gt; Clone for SparseIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone + Item&gt; Clone for ItemIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IndexType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Accessor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Channels&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Samplers&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for I8","synthetic":false,"types":[]},{"text":"impl Clone for U8","synthetic":false,"types":[]},{"text":"impl Clone for I16","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl Clone for F32","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for I8","synthetic":false,"types":[]},{"text":"impl Clone for U8","synthetic":false,"types":[]},{"text":"impl Clone for I16","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl Clone for F32","synthetic":false,"types":[]},{"text":"impl&lt;'a, 's, F:&nbsp;Clone&gt; Clone for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone + Fn(Buffer&lt;'a&gt;) -&gt; Option&lt;&amp;'s [u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Rotations&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for MorphTargetWeights&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Animation&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Channel&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Sampler&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Target&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Glb&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Header","synthetic":false,"types":[]},{"text":"impl Clone for ChunkType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Buffer&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for View&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Source&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Projection&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Camera&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Orthographic&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Perspective&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Source&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Image&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ExtensionsUsed&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ExtensionsRequired&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Accessors&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Animations&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Buffers&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Views&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cameras&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Images&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Lights&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Materials&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Meshes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Nodes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Samplers&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Scenes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Skins&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Textures&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Material&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for MorphTargets&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Attributes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Primitives&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RgbU8","synthetic":false,"types":[]},{"text":"impl Clone for RgbU16","synthetic":false,"types":[]},{"text":"impl Clone for RgbF32","synthetic":false,"types":[]},{"text":"impl Clone for RgbaU8","synthetic":false,"types":[]},{"text":"impl Clone for RgbaU16","synthetic":false,"types":[]},{"text":"impl Clone for RgbaF32","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for U32","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for U8","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl Clone for F32","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; Clone for CastingIter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for U8","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl Clone for F32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReadColors&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReadIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReadJoints&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReadTexCoords&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReadWeights&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 's, F:&nbsp;Clone&gt; Clone for ReadMorphTargets&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone + Fn(Buffer&lt;'a&gt;) -&gt; Option&lt;&amp;'s [u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Bounds&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Mesh&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for MorphTarget&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Primitive&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 's, F:&nbsp;Clone&gt; Clone for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone + Fn(Buffer&lt;'a&gt;) -&gt; Option&lt;&amp;'s [u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Nodes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Children&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Transform","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Node&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Scene&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Joints&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 's, F:&nbsp;Clone&gt; Clone for Reader&lt;'a, 's, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone + Fn(Buffer&lt;'a&gt;) -&gt; Option&lt;&amp;'s [u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Skin&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Info&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Sampler&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Texture&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Gltf","synthetic":false,"types":[]},{"text":"impl Clone for Document","synthetic":false,"types":[]}];
implementors["gltf_json"] = [{"text":"impl Clone for ComponentType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Indices","synthetic":false,"types":[]},{"text":"impl Clone for Sparse","synthetic":false,"types":[]},{"text":"impl Clone for Values","synthetic":false,"types":[]},{"text":"impl Clone for Accessor","synthetic":false,"types":[]},{"text":"impl Clone for IndexComponentType","synthetic":false,"types":[]},{"text":"impl Clone for GenericComponentType","synthetic":false,"types":[]},{"text":"impl Clone for Interpolation","synthetic":false,"types":[]},{"text":"impl Clone for Property","synthetic":false,"types":[]},{"text":"impl Clone for Animation","synthetic":false,"types":[]},{"text":"impl Clone for Channel","synthetic":false,"types":[]},{"text":"impl Clone for Target","synthetic":false,"types":[]},{"text":"impl Clone for Sampler","synthetic":false,"types":[]},{"text":"impl Clone for Asset","synthetic":false,"types":[]},{"text":"impl Clone for Target","synthetic":false,"types":[]},{"text":"impl Clone for Buffer","synthetic":false,"types":[]},{"text":"impl Clone for View","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Camera","synthetic":false,"types":[]},{"text":"impl Clone for Orthographic","synthetic":false,"types":[]},{"text":"impl Clone for Perspective","synthetic":false,"types":[]},{"text":"impl Clone for Indices","synthetic":false,"types":[]},{"text":"impl Clone for Sparse","synthetic":false,"types":[]},{"text":"impl Clone for Values","synthetic":false,"types":[]},{"text":"impl Clone for Accessor","synthetic":false,"types":[]},{"text":"impl Clone for Animation","synthetic":false,"types":[]},{"text":"impl Clone for Channel","synthetic":false,"types":[]},{"text":"impl Clone for Target","synthetic":false,"types":[]},{"text":"impl Clone for Sampler","synthetic":false,"types":[]},{"text":"impl Clone for Asset","synthetic":false,"types":[]},{"text":"impl Clone for Buffer","synthetic":false,"types":[]},{"text":"impl Clone for View","synthetic":false,"types":[]},{"text":"impl Clone for Camera","synthetic":false,"types":[]},{"text":"impl Clone for Orthographic","synthetic":false,"types":[]},{"text":"impl Clone for Perspective","synthetic":false,"types":[]},{"text":"impl Clone for Image","synthetic":false,"types":[]},{"text":"impl Clone for Material","synthetic":false,"types":[]},{"text":"impl Clone for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Clone for NormalTexture","synthetic":false,"types":[]},{"text":"impl Clone for OcclusionTexture","synthetic":false,"types":[]},{"text":"impl Clone for Mesh","synthetic":false,"types":[]},{"text":"impl Clone for Primitive","synthetic":false,"types":[]},{"text":"impl Clone for Root","synthetic":false,"types":[]},{"text":"impl Clone for KhrLightsPunctual","synthetic":false,"types":[]},{"text":"impl Clone for Node","synthetic":false,"types":[]},{"text":"impl Clone for KhrLightsPunctual","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Light","synthetic":false,"types":[]},{"text":"impl Clone for Spot","synthetic":false,"types":[]},{"text":"impl Clone for Scene","synthetic":false,"types":[]},{"text":"impl Clone for Skin","synthetic":false,"types":[]},{"text":"impl Clone for Sampler","synthetic":false,"types":[]},{"text":"impl Clone for Texture","synthetic":false,"types":[]},{"text":"impl Clone for Info","synthetic":false,"types":[]},{"text":"impl Clone for Void","synthetic":false,"types":[]},{"text":"impl Clone for Image","synthetic":false,"types":[]},{"text":"impl Clone for MimeType","synthetic":false,"types":[]},{"text":"impl Clone for AlphaMode","synthetic":false,"types":[]},{"text":"impl Clone for Material","synthetic":false,"types":[]},{"text":"impl Clone for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Clone for NormalTexture","synthetic":false,"types":[]},{"text":"impl Clone for OcclusionTexture","synthetic":false,"types":[]},{"text":"impl Clone for AlphaCutoff","synthetic":false,"types":[]},{"text":"impl Clone for EmissiveFactor","synthetic":false,"types":[]},{"text":"impl Clone for PbrBaseColorFactor","synthetic":false,"types":[]},{"text":"impl Clone for StrengthFactor","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Mesh","synthetic":false,"types":[]},{"text":"impl Clone for Primitive","synthetic":false,"types":[]},{"text":"impl Clone for MorphTarget","synthetic":false,"types":[]},{"text":"impl Clone for Semantic","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for Root","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Index&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Node","synthetic":false,"types":[]},{"text":"impl Clone for Scene","synthetic":false,"types":[]},{"text":"impl Clone for UnitQuaternion","synthetic":false,"types":[]},{"text":"impl Clone for Skin","synthetic":false,"types":[]},{"text":"impl Clone for MagFilter","synthetic":false,"types":[]},{"text":"impl Clone for MinFilter","synthetic":false,"types":[]},{"text":"impl Clone for WrappingMode","synthetic":false,"types":[]},{"text":"impl Clone for Sampler","synthetic":false,"types":[]},{"text":"impl Clone for Texture","synthetic":false,"types":[]},{"text":"impl Clone for Info","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Checked&lt;T&gt;","synthetic":false,"types":[]}];
implementors["glyph_brush"] = [{"text":"impl Clone for BrushError","synthetic":false,"types":[]},{"text":"impl&lt;'a, H:&nbsp;Clone&gt; Clone for GlyphCalculatorBuilder&lt;'a, H&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OwnedVariedSection","synthetic":false,"types":[]},{"text":"impl Clone for OwnedSectionText","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for VariedSection&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Section&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["glyph_brush_layout"] = [{"text":"impl&lt;L:&nbsp;Clone + LineBreaker&gt; Clone for Layout&lt;L&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HorizontalAlign","synthetic":false,"types":[]},{"text":"impl Clone for VerticalAlign","synthetic":false,"types":[]},{"text":"impl Clone for FontId","synthetic":false,"types":[]},{"text":"impl Clone for LineBreak","synthetic":false,"types":[]},{"text":"impl Clone for BuiltInLineBreaker","synthetic":false,"types":[]},{"text":"impl Clone for SectionGeometry","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SectionText&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K:&nbsp;Clone, V:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V, '_&gt; Clone for Iter&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V, '_&gt; Clone for Keys&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V, '_&gt; Clone for Values&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashSet&lt;T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, '_&gt; Clone for Iter&lt;'_, K&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S, '_&gt; Clone for Intersection&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S, '_&gt; Clone for Difference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S, '_&gt; Clone for SymmetricDifference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S, '_&gt; Clone for Union&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CollectionAllocErr","synthetic":false,"types":[]}];
implementors["hibitset"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for BitIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + BitSetLike, B:&nbsp;Clone + BitSetLike&gt; Clone for BitSetAnd&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + BitSetLike, B:&nbsp;Clone + BitSetLike&gt; Clone for BitSetOr&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + BitSetLike&gt; Clone for BitSetNot&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + BitSetLike, B:&nbsp;Clone + BitSetLike&gt; Clone for BitSetXor&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BitSetAll","synthetic":false,"types":[]},{"text":"impl Clone for BitSet","synthetic":false,"types":[]}];
implementors["hound"] = [{"text":"impl Clone for SampleFormat","synthetic":false,"types":[]},{"text":"impl Clone for WavSpec","synthetic":false,"types":[]}];
implementors["humantime"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for FormattedDuration","synthetic":false,"types":[]},{"text":"impl Clone for Duration","synthetic":false,"types":[]},{"text":"impl Clone for Timestamp","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Rfc3339Timestamp","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Clone for UnsupportedErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for ParameterErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for LimitErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl Clone for Rect","synthetic":false,"types":[]},{"text":"impl Clone for BiLevel","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone&gt; Clone for FlatSamples&lt;Buffer&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SampleLayout","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone, P:&nbsp;Clone + Pixel&gt; Clone for View&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: AsRef&lt;[P::Subpixel]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone, P:&nbsp;Clone + Pixel&gt; Clone for ViewMut&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: AsMut&lt;[P::Subpixel]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for NormalForm","synthetic":false,"types":[]},{"text":"impl Clone for PixelDensityUnit","synthetic":false,"types":[]},{"text":"impl Clone for PixelDensity","synthetic":false,"types":[]},{"text":"impl Clone for CompressionType","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]},{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for Delay","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for Pixels&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for Rows&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for EnumeratePixels&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for EnumerateRows&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P, Container&gt; Clone for ImageBuffer&lt;P, Container&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Pixel,<br>&nbsp;&nbsp;&nbsp;&nbsp;Container: Deref&lt;Target = [P::Subpixel]&gt; + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ColorType","synthetic":false,"types":[]},{"text":"impl Clone for ExtendedColorType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Rgb&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Bgr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Luma&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Rgba&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Bgra&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for LumaA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DynamicImage","synthetic":false,"types":[]},{"text":"impl Clone for ImageFormat","synthetic":false,"types":[]},{"text":"impl Clone for ImageOutputFormat","synthetic":false,"types":[]},{"text":"impl Clone for Progress","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;?Sized, '_&gt; Clone for Pixels&lt;'_, I&gt;","synthetic":false,"types":[]}];
implementors["intl_pluralrules"] = [{"text":"impl Clone for PluralRuleType","synthetic":false,"types":[]},{"text":"impl Clone for PluralRules","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Interleave&lt;I, J&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Batching&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Step&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, J, F&gt; Clone for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator&lt;Item = I::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Peekable&lt;I&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Peekable&lt;J&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, Pred:&nbsp;Clone&gt; Clone for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for WhileSome&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HasCombination&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Combination: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for MapInto&lt;I, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapResults&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Positions&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Update&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for EitherOrBoth&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, J&gt; Clone for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator&lt;Item = J&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FormatWith&lt;'a, I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Clone&gt; Clone for Format&lt;'a, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, F&gt; Clone for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, J, F&gt; Clone for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;PutBack&lt;Fuse&lt;I&gt;&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;PutBack&lt;Fuse&lt;J&gt;&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for MinMaxResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for PadUsing&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator&gt; Clone for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for RcIter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RepeatN&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for RepeatCall&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Unfold&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Iterate&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator&lt;Item = T::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator&lt;Item = T::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator, V:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for UniqueBy&lt;I, V, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator&gt; Clone for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Position&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for ZipEq&lt;I, J&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U:&nbsp;Clone&gt; Clone for ZipLongest&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Zip&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for FoldWhile&lt;T&gt;","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl Clone for PixelFormat","synthetic":false,"types":[]},{"text":"impl Clone for ImageInfo","synthetic":false,"types":[]}];
implementors["laminar"] = [{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for LinkConditioner","synthetic":false,"types":[]},{"text":"impl Clone for DeliveryGuarantee","synthetic":false,"types":[]},{"text":"impl Clone for OrderingGuarantee","synthetic":false,"types":[]},{"text":"impl Clone for Packet","synthetic":false,"types":[]}];
implementors["lewton"] = [{"text":"impl Clone for CommentHeader","synthetic":false,"types":[]}];
implementors["lexical"] = [{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Clone for ErrorCode","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Result&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RoundingKind","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["libloading"] = [{"text":"impl&lt;T&gt; Clone for Symbol&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'lib, T&gt; Clone for Symbol&lt;'lib, T&gt;","synthetic":false,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K:&nbsp;Hash + Eq + Clone, V:&nbsp;Clone, S:&nbsp;BuildHasher + Clone&gt; Clone for LinkedHashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Clone for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Clone for Keys&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Clone for Values&lt;'a, K, V&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["lyon_geom"] = [{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for BezierSegment&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for QuadraticBezierSegment&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for CubicBezierSegment&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for SvgArc&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Arc&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArcFlags","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Triangle&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for LineSegment&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Line&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for LineEquation&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Monotonic&lt;T&gt;","synthetic":false,"types":[]}];
implementors["lyon_path"] = [{"text":"impl Clone for SvgEvent","synthetic":false,"types":[]},{"text":"impl Clone for PathEvent","synthetic":false,"types":[]},{"text":"impl Clone for QuadraticEvent","synthetic":false,"types":[]},{"text":"impl Clone for FlattenedEvent","synthetic":false,"types":[]},{"text":"impl Clone for PathState","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl&lt;'l&gt; Clone for PathSlice&lt;'l&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Cursor","synthetic":false,"types":[]},{"text":"impl&lt;'l&gt; Clone for Iter&lt;'l&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FillRule","synthetic":false,"types":[]},{"text":"impl Clone for VertexId","synthetic":false,"types":[]}];
implementors["memmap"] = [{"text":"impl Clone for MmapOptions","synthetic":false,"types":[]}];
implementors["minimp3"] = [{"text":"impl Clone for Frame","synthetic":false,"types":[]}];
implementors["minimp3_sys"] = [{"text":"impl Clone for __fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for mp3dec_frame_info_t","synthetic":false,"types":[]},{"text":"impl Clone for mp3dec_t","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Clone for CompressionStrategy","synthetic":false,"types":[]},{"text":"impl Clone for TDEFLFlush","synthetic":false,"types":[]},{"text":"impl Clone for TDEFLStatus","synthetic":false,"types":[]},{"text":"impl Clone for CompressionLevel","synthetic":false,"types":[]},{"text":"impl Clone for TINFLStatus","synthetic":false,"types":[]},{"text":"impl Clone for MZFlush","synthetic":false,"types":[]},{"text":"impl Clone for MZStatus","synthetic":false,"types":[]},{"text":"impl Clone for MZError","synthetic":false,"types":[]},{"text":"impl Clone for DataFormat","synthetic":false,"types":[]},{"text":"impl Clone for StreamResult","synthetic":false,"types":[]}];
implementors["mint"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix2x3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix2x4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix3x2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix3x4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix4x3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix4x2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RowMatrix4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix2x3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix2x4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix3x2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix3x4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix4x2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix4x3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ColumnMatrix4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Quaternion&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for EulerAngles&lt;T, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IntraXYZ","synthetic":false,"types":[]},{"text":"impl Clone for IntraZXZ","synthetic":false,"types":[]},{"text":"impl Clone for IntraZYX","synthetic":false,"types":[]},{"text":"impl Clone for ExtraXYZ","synthetic":false,"types":[]},{"text":"impl Clone for ExtraZXZ","synthetic":false,"types":[]},{"text":"impl Clone for ExtraZYX","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Vector2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Vector3&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Vector4&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Point2&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Point3&lt;T&gt;","synthetic":false,"types":[]}];
implementors["minterpolate"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for InterpolationFunction&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: InterpolationPrimitive,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["nalgebra"] = [{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for X&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for XY&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for XYZ&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for XYZW&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for XYZWA&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for XYZWAB&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for IJKW&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M2x2&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M2x3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M2x4&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M2x5&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M2x6&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M3x2&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M3x3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M3x4&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M3x5&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M3x6&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M4x2&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M4x3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M4x4&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M4x5&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M4x6&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M5x2&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M5x3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M5x4&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M5x5&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M5x6&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M6x2&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M6x3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M6x4&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M6x5&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar&gt; Clone for M6x6&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Dynamic","synthetic":false,"types":[]},{"text":"impl Clone for U1","synthetic":false,"types":[]},{"text":"impl Clone for U0","synthetic":false,"types":[]},{"text":"impl Clone for U2","synthetic":false,"types":[]},{"text":"impl Clone for U3","synthetic":false,"types":[]},{"text":"impl Clone for U4","synthetic":false,"types":[]},{"text":"impl Clone for U5","synthetic":false,"types":[]},{"text":"impl Clone for U6","synthetic":false,"types":[]},{"text":"impl Clone for U7","synthetic":false,"types":[]},{"text":"impl Clone for U8","synthetic":false,"types":[]},{"text":"impl Clone for U9","synthetic":false,"types":[]},{"text":"impl Clone for U10","synthetic":false,"types":[]},{"text":"impl Clone for U11","synthetic":false,"types":[]},{"text":"impl Clone for U12","synthetic":false,"types":[]},{"text":"impl Clone for U13","synthetic":false,"types":[]},{"text":"impl Clone for U14","synthetic":false,"types":[]},{"text":"impl Clone for U15","synthetic":false,"types":[]},{"text":"impl Clone for U16","synthetic":false,"types":[]},{"text":"impl Clone for U17","synthetic":false,"types":[]},{"text":"impl Clone for U18","synthetic":false,"types":[]},{"text":"impl Clone for U19","synthetic":false,"types":[]},{"text":"impl Clone for U20","synthetic":false,"types":[]},{"text":"impl Clone for U21","synthetic":false,"types":[]},{"text":"impl Clone for U22","synthetic":false,"types":[]},{"text":"impl Clone for U23","synthetic":false,"types":[]},{"text":"impl Clone for U24","synthetic":false,"types":[]},{"text":"impl Clone for U25","synthetic":false,"types":[]},{"text":"impl Clone for U26","synthetic":false,"types":[]},{"text":"impl Clone for U27","synthetic":false,"types":[]},{"text":"impl Clone for U28","synthetic":false,"types":[]},{"text":"impl Clone for U29","synthetic":false,"types":[]},{"text":"impl Clone for U30","synthetic":false,"types":[]},{"text":"impl Clone for U31","synthetic":false,"types":[]},{"text":"impl Clone for U32","synthetic":false,"types":[]},{"text":"impl Clone for U33","synthetic":false,"types":[]},{"text":"impl Clone for U34","synthetic":false,"types":[]},{"text":"impl Clone for U35","synthetic":false,"types":[]},{"text":"impl Clone for U36","synthetic":false,"types":[]},{"text":"impl Clone for U37","synthetic":false,"types":[]},{"text":"impl Clone for U38","synthetic":false,"types":[]},{"text":"impl Clone for U39","synthetic":false,"types":[]},{"text":"impl Clone for U40","synthetic":false,"types":[]},{"text":"impl Clone for U41","synthetic":false,"types":[]},{"text":"impl Clone for U42","synthetic":false,"types":[]},{"text":"impl Clone for U43","synthetic":false,"types":[]},{"text":"impl Clone for U44","synthetic":false,"types":[]},{"text":"impl Clone for U45","synthetic":false,"types":[]},{"text":"impl Clone for U46","synthetic":false,"types":[]},{"text":"impl Clone for U47","synthetic":false,"types":[]},{"text":"impl Clone for U48","synthetic":false,"types":[]},{"text":"impl Clone for U49","synthetic":false,"types":[]},{"text":"impl Clone for U50","synthetic":false,"types":[]},{"text":"impl Clone for U51","synthetic":false,"types":[]},{"text":"impl Clone for U52","synthetic":false,"types":[]},{"text":"impl Clone for U53","synthetic":false,"types":[]},{"text":"impl Clone for U54","synthetic":false,"types":[]},{"text":"impl Clone for U55","synthetic":false,"types":[]},{"text":"impl Clone for U56","synthetic":false,"types":[]},{"text":"impl Clone for U57","synthetic":false,"types":[]},{"text":"impl Clone for U58","synthetic":false,"types":[]},{"text":"impl Clone for U59","synthetic":false,"types":[]},{"text":"impl Clone for U60","synthetic":false,"types":[]},{"text":"impl Clone for U61","synthetic":false,"types":[]},{"text":"impl Clone for U62","synthetic":false,"types":[]},{"text":"impl Clone for U63","synthetic":false,"types":[]},{"text":"impl Clone for U64","synthetic":false,"types":[]},{"text":"impl Clone for U65","synthetic":false,"types":[]},{"text":"impl Clone for U66","synthetic":false,"types":[]},{"text":"impl Clone for U67","synthetic":false,"types":[]},{"text":"impl Clone for U68","synthetic":false,"types":[]},{"text":"impl Clone for U69","synthetic":false,"types":[]},{"text":"impl Clone for U70","synthetic":false,"types":[]},{"text":"impl Clone for U71","synthetic":false,"types":[]},{"text":"impl Clone for U72","synthetic":false,"types":[]},{"text":"impl Clone for U73","synthetic":false,"types":[]},{"text":"impl Clone for U74","synthetic":false,"types":[]},{"text":"impl Clone for U75","synthetic":false,"types":[]},{"text":"impl Clone for U76","synthetic":false,"types":[]},{"text":"impl Clone for U77","synthetic":false,"types":[]},{"text":"impl Clone for U78","synthetic":false,"types":[]},{"text":"impl Clone for U79","synthetic":false,"types":[]},{"text":"impl Clone for U80","synthetic":false,"types":[]},{"text":"impl Clone for U81","synthetic":false,"types":[]},{"text":"impl Clone for U82","synthetic":false,"types":[]},{"text":"impl Clone for U83","synthetic":false,"types":[]},{"text":"impl Clone for U84","synthetic":false,"types":[]},{"text":"impl Clone for U85","synthetic":false,"types":[]},{"text":"impl Clone for U86","synthetic":false,"types":[]},{"text":"impl Clone for U87","synthetic":false,"types":[]},{"text":"impl Clone for U88","synthetic":false,"types":[]},{"text":"impl Clone for U89","synthetic":false,"types":[]},{"text":"impl Clone for U90","synthetic":false,"types":[]},{"text":"impl Clone for U91","synthetic":false,"types":[]},{"text":"impl Clone for U92","synthetic":false,"types":[]},{"text":"impl Clone for U93","synthetic":false,"types":[]},{"text":"impl Clone for U94","synthetic":false,"types":[]},{"text":"impl Clone for U95","synthetic":false,"types":[]},{"text":"impl Clone for U96","synthetic":false,"types":[]},{"text":"impl Clone for U97","synthetic":false,"types":[]},{"text":"impl Clone for U98","synthetic":false,"types":[]},{"text":"impl Clone for U99","synthetic":false,"types":[]},{"text":"impl Clone for U100","synthetic":false,"types":[]},{"text":"impl Clone for U101","synthetic":false,"types":[]},{"text":"impl Clone for U102","synthetic":false,"types":[]},{"text":"impl Clone for U103","synthetic":false,"types":[]},{"text":"impl Clone for U104","synthetic":false,"types":[]},{"text":"impl Clone for U105","synthetic":false,"types":[]},{"text":"impl Clone for U106","synthetic":false,"types":[]},{"text":"impl Clone for U107","synthetic":false,"types":[]},{"text":"impl Clone for U108","synthetic":false,"types":[]},{"text":"impl Clone for U109","synthetic":false,"types":[]},{"text":"impl Clone for U110","synthetic":false,"types":[]},{"text":"impl Clone for U111","synthetic":false,"types":[]},{"text":"impl Clone for U112","synthetic":false,"types":[]},{"text":"impl Clone for U113","synthetic":false,"types":[]},{"text":"impl Clone for U114","synthetic":false,"types":[]},{"text":"impl Clone for U115","synthetic":false,"types":[]},{"text":"impl Clone for U116","synthetic":false,"types":[]},{"text":"impl Clone for U117","synthetic":false,"types":[]},{"text":"impl Clone for U118","synthetic":false,"types":[]},{"text":"impl Clone for U119","synthetic":false,"types":[]},{"text":"impl Clone for U120","synthetic":false,"types":[]},{"text":"impl Clone for U121","synthetic":false,"types":[]},{"text":"impl Clone for U122","synthetic":false,"types":[]},{"text":"impl Clone for U123","synthetic":false,"types":[]},{"text":"impl Clone for U124","synthetic":false,"types":[]},{"text":"impl Clone for U125","synthetic":false,"types":[]},{"text":"impl Clone for U126","synthetic":false,"types":[]},{"text":"impl Clone for U127","synthetic":false,"types":[]},{"text":"impl&lt;'a, N:&nbsp;Clone + Scalar, R:&nbsp;Clone + Dim, C:&nbsp;Clone + Dim, S:&nbsp;Clone + Storage&lt;N, R, C&gt;&gt; Clone for RowIter&lt;'a, N, R, C, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, N:&nbsp;Clone + Scalar, R:&nbsp;Clone + Dim, C:&nbsp;Clone + Dim, S:&nbsp;Clone + Storage&lt;N, R, C&gt;&gt; Clone for ColumnIter&lt;'a, N, R, C, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar, R:&nbsp;Clone + Dim, C:&nbsp;Clone + Dim, S:&nbsp;Clone&gt; Clone for Matrix&lt;N, R, C, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N, R, C&gt; Clone for ArrayStorage&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: DimName,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: DimName,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Value: Mul&lt;C::Value&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prod&lt;R::Value, C::Value&gt;: ArrayLength&lt;N&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, N:&nbsp;Scalar, R:&nbsp;Dim, C:&nbsp;Dim, RStride:&nbsp;Dim, CStride:&nbsp;Dim&gt; Clone for SliceStorage&lt;'a, N, R, C, RStride, CStride&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone, R:&nbsp;Clone + Dim, C:&nbsp;Clone + Dim&gt; Clone for VecStorage&lt;N, R, C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Unit&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Scalar, D:&nbsp;Clone + DimName&gt; Clone for Point&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar, D:&nbsp;DimName&gt; Clone for Rotation&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;DefaultAllocator as Allocator&lt;N, D, D&gt;&gt;::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField&gt; Clone for Quaternion&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar, D:&nbsp;DimName&gt; Clone for Translation&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Owned&lt;N, D&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimName, R:&nbsp;Rotation&lt;Point&lt;N, D&gt;&gt; + Clone&gt; Clone for Isometry&lt;N, D, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimName, R:&nbsp;Rotation&lt;Point&lt;N, D&gt;&gt; + Clone&gt; Clone for Similarity&lt;N, D, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for TGeneral","synthetic":false,"types":[]},{"text":"impl Clone for TProjective","synthetic":false,"types":[]},{"text":"impl Clone for TAffine","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField, D:&nbsp;DimNameAdd&lt;U1&gt;, C:&nbsp;TCategory&gt; Clone for Transform&lt;N, D, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, DimNameSum&lt;D, U1&gt;, DimNameSum&lt;D, U1&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField&gt; Clone for Orthographic3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;RealField&gt; Clone for Perspective3&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, R:&nbsp;Clone + DimMin&lt;C&gt;, C:&nbsp;Clone + Dim&gt; Clone for Bidiagonal&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DimMinimum&lt;R, C&gt;: DimSub&lt;U1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N, DimDiff&lt;DimMinimum&lt;R, C&gt;, U1&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, D:&nbsp;Clone + Dim&gt; Clone for Cholesky&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, R:&nbsp;Clone + DimMin&lt;C&gt;, C:&nbsp;Clone + Dim&gt; Clone for FullPivLU&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField&gt; Clone for GivensRotation&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N::RealField: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, D:&nbsp;Clone + DimSub&lt;U1&gt;&gt; Clone for Hessenberg&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, R:&nbsp;Clone + DimMin&lt;C&gt;, C:&nbsp;Clone + Dim&gt; Clone for LU&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;(usize, usize), DimMinimum&lt;R, C&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone + Dim&gt; Clone for PermutationSequence&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;(usize, usize), D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, R:&nbsp;Clone + DimMin&lt;C&gt;, C:&nbsp;Clone + Dim&gt; Clone for QR&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, R, C&gt; + Allocator&lt;N, DimMinimum&lt;R, C&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, D:&nbsp;Clone + Dim&gt; Clone for Schur&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, R:&nbsp;Clone + DimMin&lt;C&gt;, C:&nbsp;Clone + Dim&gt; Clone for SVD&lt;N, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, DimMinimum&lt;R, C&gt;, C&gt; + Allocator&lt;N, R, DimMinimum&lt;R, C&gt;&gt; + Allocator&lt;N::RealField, DimMinimum&lt;R, C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;N::RealField: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, D:&nbsp;Clone + Dim&gt; Clone for SymmetricEigen&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N::RealField, D&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;N::RealField: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + ComplexField, D:&nbsp;Clone + DimSub&lt;U1&gt;&gt; Clone for SymmetricTridiagonal&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D, D&gt; + Allocator&lt;N, DimDiff&lt;D, U1&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Errno","synthetic":false,"types":[]},{"text":"impl Clone for AtFlags","synthetic":false,"types":[]},{"text":"impl Clone for OFlag","synthetic":false,"types":[]},{"text":"impl Clone for SealFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for FlockArg","synthetic":false,"types":[]},{"text":"impl Clone for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Clone for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceAddress","synthetic":false,"types":[]},{"text":"impl Clone for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Clone for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MntFlags","synthetic":false,"types":[]},{"text":"impl Clone for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for MqAttr","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Clone for PollFd","synthetic":false,"types":[]},{"text":"impl Clone for PollFlags","synthetic":false,"types":[]},{"text":"impl Clone for OpenptyResult","synthetic":false,"types":[]},{"text":"impl Clone for ForkptyResult","synthetic":false,"types":[]},{"text":"impl Clone for CloneFlags","synthetic":false,"types":[]},{"text":"impl Clone for CpuSet","synthetic":false,"types":[]},{"text":"impl Clone for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Clone for LioOpcode","synthetic":false,"types":[]},{"text":"impl Clone for LioMode","synthetic":false,"types":[]},{"text":"impl Clone for AioCancelStat","synthetic":false,"types":[]},{"text":"impl Clone for EpollFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollOp","synthetic":false,"types":[]},{"text":"impl Clone for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollEvent","synthetic":false,"types":[]},{"text":"impl Clone for EfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Clone for ProtFlags","synthetic":false,"types":[]},{"text":"impl Clone for MapFlags","synthetic":false,"types":[]},{"text":"impl Clone for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Clone for Request","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Options","synthetic":false,"types":[]},{"text":"impl Clone for QuotaType","synthetic":false,"types":[]},{"text":"impl Clone for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Clone for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Clone for Dqblk","synthetic":false,"types":[]},{"text":"impl Clone for RebootMode","synthetic":false,"types":[]},{"text":"impl Clone for FdSet","synthetic":false,"types":[]},{"text":"impl Clone for Signal","synthetic":false,"types":[]},{"text":"impl Clone for SignalIterator","synthetic":false,"types":[]},{"text":"impl Clone for SaFlags","synthetic":false,"types":[]},{"text":"impl Clone for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Clone for SigSet","synthetic":false,"types":[]},{"text":"impl Clone for SigHandler","synthetic":false,"types":[]},{"text":"impl Clone for SigAction","synthetic":false,"types":[]},{"text":"impl Clone for SigevNotify","synthetic":false,"types":[]},{"text":"impl Clone for SigEvent","synthetic":false,"types":[]},{"text":"impl Clone for SfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for SignalFd","synthetic":false,"types":[]},{"text":"impl Clone for AddressFamily","synthetic":false,"types":[]},{"text":"impl Clone for InetAddr","synthetic":false,"types":[]},{"text":"impl Clone for IpAddr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4Addr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6Addr","synthetic":false,"types":[]},{"text":"impl Clone for UnixAddr","synthetic":false,"types":[]},{"text":"impl Clone for SockAddr","synthetic":false,"types":[]},{"text":"impl Clone for NetlinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for AlgAddr","synthetic":false,"types":[]},{"text":"impl Clone for LinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReuseAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReusePort","synthetic":false,"types":[]},{"text":"impl Clone for TcpNoDelay","synthetic":false,"types":[]},{"text":"impl Clone for Linger","synthetic":false,"types":[]},{"text":"impl Clone for IpAddMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpDropMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6AddMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6DropMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastTtl","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastLoop","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimeout","synthetic":false,"types":[]},{"text":"impl Clone for SendTimeout","synthetic":false,"types":[]},{"text":"impl Clone for Broadcast","synthetic":false,"types":[]},{"text":"impl Clone for OobInline","synthetic":false,"types":[]},{"text":"impl Clone for SocketError","synthetic":false,"types":[]},{"text":"impl Clone for KeepAlive","synthetic":false,"types":[]},{"text":"impl Clone for PeerCredentials","synthetic":false,"types":[]},{"text":"impl Clone for TcpKeepIdle","synthetic":false,"types":[]},{"text":"impl Clone for RcvBuf","synthetic":false,"types":[]},{"text":"impl Clone for SndBuf","synthetic":false,"types":[]},{"text":"impl Clone for RcvBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SndBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for AcceptConn","synthetic":false,"types":[]},{"text":"impl Clone for OriginalDst","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimestamp","synthetic":false,"types":[]},{"text":"impl Clone for IpTransparent","synthetic":false,"types":[]},{"text":"impl Clone for Mark","synthetic":false,"types":[]},{"text":"impl Clone for PassCred","synthetic":false,"types":[]},{"text":"impl Clone for TcpCongestion","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4PacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6RecvPacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for AlgSetAeadAuthSize","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AlgSetKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for SockProtocol","synthetic":false,"types":[]},{"text":"impl Clone for SockFlag","synthetic":false,"types":[]},{"text":"impl Clone for MsgFlags","synthetic":false,"types":[]},{"text":"impl Clone for UnixCredentials","synthetic":false,"types":[]},{"text":"impl Clone for IpMembershipRequest","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6MembershipRequest","synthetic":false,"types":[]},{"text":"impl Clone for SockLevel","synthetic":false,"types":[]},{"text":"impl Clone for Shutdown","synthetic":false,"types":[]},{"text":"impl Clone for SFlag","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for FchmodatFlags","synthetic":false,"types":[]},{"text":"impl Clone for UtimensatFlags","synthetic":false,"types":[]},{"text":"impl Clone for FsFlags","synthetic":false,"types":[]},{"text":"impl Clone for Statvfs","synthetic":false,"types":[]},{"text":"impl Clone for SysInfo","synthetic":false,"types":[]},{"text":"impl Clone for Termios","synthetic":false,"types":[]},{"text":"impl Clone for BaudRate","synthetic":false,"types":[]},{"text":"impl Clone for SetArg","synthetic":false,"types":[]},{"text":"impl Clone for FlushArg","synthetic":false,"types":[]},{"text":"impl Clone for FlowArg","synthetic":false,"types":[]},{"text":"impl Clone for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Clone for InputFlags","synthetic":false,"types":[]},{"text":"impl Clone for OutputFlags","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlags","synthetic":false,"types":[]},{"text":"impl Clone for LocalFlags","synthetic":false,"types":[]},{"text":"impl Clone for TimeSpec","synthetic":false,"types":[]},{"text":"impl Clone for TimeVal","synthetic":false,"types":[]},{"text":"impl Clone for RemoteIoVec","synthetic":false,"types":[]},{"text":"impl Clone for UtsName","synthetic":false,"types":[]},{"text":"impl Clone for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Clone for WaitStatus","synthetic":false,"types":[]},{"text":"impl Clone for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Clone for InitFlags","synthetic":false,"types":[]},{"text":"impl Clone for Inotify","synthetic":false,"types":[]},{"text":"impl Clone for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for UContext","synthetic":false,"types":[]},{"text":"impl Clone for Uid","synthetic":false,"types":[]},{"text":"impl Clone for Gid","synthetic":false,"types":[]},{"text":"impl Clone for Pid","synthetic":false,"types":[]},{"text":"impl Clone for ForkResult","synthetic":false,"types":[]},{"text":"impl Clone for FchownatFlags","synthetic":false,"types":[]},{"text":"impl Clone for Whence","synthetic":false,"types":[]},{"text":"impl Clone for PathconfVar","synthetic":false,"types":[]},{"text":"impl Clone for SysconfVar","synthetic":false,"types":[]},{"text":"impl Clone for AccessFlags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Clone for Sign","synthetic":false,"types":[]},{"text":"impl Clone for BigInt","synthetic":false,"types":[]},{"text":"impl Clone for BigUint","synthetic":false,"types":[]},{"text":"impl Clone for ParseBigIntError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TryFromBigIntError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for Range&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeInclusive&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStep&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStepInclusive&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeFrom&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStepFrom&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseRatioError","synthetic":false,"types":[]}];
implementors["object"] = [{"text":"impl Clone for Architecture","synthetic":false,"types":[]},{"text":"impl Clone for AddressSize","synthetic":false,"types":[]},{"text":"impl Clone for BinaryFormat","synthetic":false,"types":[]},{"text":"impl Clone for SectionKind","synthetic":false,"types":[]},{"text":"impl Clone for SymbolKind","synthetic":false,"types":[]},{"text":"impl Clone for SymbolScope","synthetic":false,"types":[]},{"text":"impl Clone for RelocationKind","synthetic":false,"types":[]},{"text":"impl Clone for RelocationEncoding","synthetic":false,"types":[]},{"text":"impl Clone for FileFlags","synthetic":false,"types":[]},{"text":"impl Clone for SectionFlags","synthetic":false,"types":[]},{"text":"impl&lt;Section:&nbsp;Clone&gt; Clone for SymbolFlags&lt;Section&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Endianness","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]},{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for U16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for U32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for U64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for I16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for I32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for I64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Clone for Bytes&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Clone for StringTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Clone for SectionTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;Clone + FileHeader&gt; Clone for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf::SectionHeader: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;Clone + FileHeader&gt; Clone for SymbolTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf::Sym: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'data, Mach:&nbsp;Clone + MachHeader&gt; Clone for SymbolTable&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach::Nlist: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for SectionIndex","synthetic":false,"types":[]},{"text":"impl Clone for SymbolIndex","synthetic":false,"types":[]},{"text":"impl Clone for SymbolSection","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Clone for Symbol&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RelocationTarget","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Clone for CompressedData&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CompressionFormat","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for FileHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for FileHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SectionHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SectionHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for CompressionHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for CompressionHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Sym32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Sym64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Syminfo32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Syminfo64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Rel32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Rela32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Rel64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Rela64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for ProgramHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for ProgramHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Dyn32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Dyn64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for NoteHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for NoteHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FatHeader","synthetic":false,"types":[]},{"text":"impl Clone for FatArch32","synthetic":false,"types":[]},{"text":"impl Clone for FatArch64","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for MachHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for MachHeader64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for LoadCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for LcStr&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SegmentCommand32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SegmentCommand64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Section32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Section64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Fvmlib&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for FvmlibCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Dylib&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylibCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SubFrameworkCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SubClientCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SubUmbrellaCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SubLibraryCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for PreboundDylibCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylinkerCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for ThreadCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for RoutinesCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for RoutinesCommand_64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SymtabCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DysymtabCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylibTableOfContents&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylibModule32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylibModule64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DylibReference&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for TwolevelHintsCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for TwolevelHint&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for PrebindCksumCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for UuidCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for RpathCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for LinkeditDataCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for EncryptionInfoCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for EncryptionInfoCommand64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for VersionMinCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for BuildVersionCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for BuildToolVersion&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DyldInfoCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for LinkerOptionCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SymSegCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for IdentCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for FvmfileCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for EntryPointCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for SourceVersionCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for DataInCodeEntry&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for NoteCommand&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Nlist32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Nlist64&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone + Endian&gt; Clone for Relocation&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RelocationInfo","synthetic":false,"types":[]},{"text":"impl Clone for ScatteredRelocationInfo","synthetic":false,"types":[]},{"text":"impl Clone for ImageDosHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageOs2Header","synthetic":false,"types":[]},{"text":"impl Clone for ImageVxdHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageFileHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageDataDirectory","synthetic":false,"types":[]},{"text":"impl Clone for ImageOptionalHeader32","synthetic":false,"types":[]},{"text":"impl Clone for ImageRomOptionalHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageOptionalHeader64","synthetic":false,"types":[]},{"text":"impl Clone for ImageNtHeaders64","synthetic":false,"types":[]},{"text":"impl Clone for ImageNtHeaders32","synthetic":false,"types":[]},{"text":"impl Clone for ImageRomHeaders","synthetic":false,"types":[]},{"text":"impl Clone for Guid","synthetic":false,"types":[]},{"text":"impl Clone for AnonObjectHeader","synthetic":false,"types":[]},{"text":"impl Clone for AnonObjectHeaderV2","synthetic":false,"types":[]},{"text":"impl Clone for AnonObjectHeaderBigobj","synthetic":false,"types":[]},{"text":"impl Clone for ImageSectionHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageSymbol","synthetic":false,"types":[]},{"text":"impl Clone for ImageSymbolBytes","synthetic":false,"types":[]},{"text":"impl Clone for ImageSymbolEx","synthetic":false,"types":[]},{"text":"impl Clone for ImageSymbolExBytes","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolTokenDef","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolFunction","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolFunctionBeginEnd","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolWeak","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolSection","synthetic":false,"types":[]},{"text":"impl Clone for ImageAuxSymbolCrc","synthetic":false,"types":[]},{"text":"impl Clone for ImageRelocation","synthetic":false,"types":[]},{"text":"impl Clone for ImageLinenumber","synthetic":false,"types":[]},{"text":"impl Clone for ImageBaseRelocation","synthetic":false,"types":[]},{"text":"impl Clone for ImageArchiveMemberHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageExportDirectory","synthetic":false,"types":[]},{"text":"impl Clone for ImageImportByName","synthetic":false,"types":[]},{"text":"impl Clone for ImageTlsDirectory64","synthetic":false,"types":[]},{"text":"impl Clone for ImageTlsDirectory32","synthetic":false,"types":[]},{"text":"impl Clone for ImageImportDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for ImageBoundImportDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for ImageBoundForwarderRef","synthetic":false,"types":[]},{"text":"impl Clone for ImageDelayloadDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for ImageResourceDirectory","synthetic":false,"types":[]},{"text":"impl Clone for ImageResourceDirectoryEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageResourceDirectoryString","synthetic":false,"types":[]},{"text":"impl Clone for ImageResourceDirStringU","synthetic":false,"types":[]},{"text":"impl Clone for ImageResourceDataEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageLoadConfigCodeIntegrity","synthetic":false,"types":[]},{"text":"impl Clone for ImageDynamicRelocationTable","synthetic":false,"types":[]},{"text":"impl Clone for ImageDynamicRelocation32","synthetic":false,"types":[]},{"text":"impl Clone for ImageDynamicRelocation64","synthetic":false,"types":[]},{"text":"impl Clone for ImageDynamicRelocation32V2","synthetic":false,"types":[]},{"text":"impl Clone for ImageDynamicRelocation64V2","synthetic":false,"types":[]},{"text":"impl Clone for ImagePrologueDynamicRelocationHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageEpilogueDynamicRelocationHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageLoadConfigDirectory32","synthetic":false,"types":[]},{"text":"impl Clone for ImageLoadConfigDirectory64","synthetic":false,"types":[]},{"text":"impl Clone for ImageHotPatchInfo","synthetic":false,"types":[]},{"text":"impl Clone for ImageHotPatchBase","synthetic":false,"types":[]},{"text":"impl Clone for ImageHotPatchHashes","synthetic":false,"types":[]},{"text":"impl Clone for ImageArmRuntimeFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageArm64RuntimeFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageAlpha64RuntimeFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageAlphaRuntimeFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageRuntimeFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageEnclaveConfig32","synthetic":false,"types":[]},{"text":"impl Clone for ImageEnclaveConfig64","synthetic":false,"types":[]},{"text":"impl Clone for ImageEnclaveImport","synthetic":false,"types":[]},{"text":"impl Clone for ImageDebugDirectory","synthetic":false,"types":[]},{"text":"impl Clone for ImageCoffSymbolsHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageDebugMisc","synthetic":false,"types":[]},{"text":"impl Clone for ImageFunctionEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImageFunctionEntry64","synthetic":false,"types":[]},{"text":"impl Clone for ImageSeparateDebugHeader","synthetic":false,"types":[]},{"text":"impl Clone for NonPagedDebugInfo","synthetic":false,"types":[]},{"text":"impl Clone for ImageArchitectureEntry","synthetic":false,"types":[]},{"text":"impl Clone for ImportObjectHeader","synthetic":false,"types":[]},{"text":"impl Clone for ImageCor20Header","synthetic":false,"types":[]}];
implementors["ogg"] = [{"text":"impl Clone for PacketWriteEndInfo","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for NotNan&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["palette"] = [{"text":"impl Clone for Equations","synthetic":false,"types":[]},{"text":"impl Clone for Equation","synthetic":false,"types":[]},{"text":"impl Clone for Parameters","synthetic":false,"types":[]},{"text":"impl Clone for Parameter","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, T:&nbsp;Clone + Float&gt; Clone for PreAlpha&lt;C, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + Mix&gt; Clone for Gradient&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::Scalar: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, C:&nbsp;Clone + Mix + 'a&gt; Clone for Take&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::Scalar: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;C::Scalar: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, C:&nbsp;Clone + Mix + 'a&gt; Clone for Slice&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::Scalar: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for Range&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for Alpha&lt;C, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Clone for Hsl&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Clone for Hsv&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Clone for Hwb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Clone for Lab&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Clone for Lch&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Clone for Luma&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: LumaStandard,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;RgbStandard, T:&nbsp;Component&gt; Clone for Rgb&lt;S, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Clone for Xyz&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Clone for Yxy&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for LabHue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for RgbHue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Srgb","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone, N:&nbsp;Clone + Number&gt; Clone for Gamma&lt;S, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone + Number&gt; Clone for GammaFn&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for F2p2","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Linear&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for LinearFn","synthetic":false,"types":[]},{"text":"impl Clone for A","synthetic":false,"types":[]},{"text":"impl Clone for B","synthetic":false,"types":[]},{"text":"impl Clone for C","synthetic":false,"types":[]},{"text":"impl Clone for D50","synthetic":false,"types":[]},{"text":"impl Clone for D55","synthetic":false,"types":[]},{"text":"impl Clone for D65","synthetic":false,"types":[]},{"text":"impl Clone for D75","synthetic":false,"types":[]},{"text":"impl Clone for E","synthetic":false,"types":[]},{"text":"impl Clone for F2","synthetic":false,"types":[]},{"text":"impl Clone for F7","synthetic":false,"types":[]},{"text":"impl Clone for F11","synthetic":false,"types":[]},{"text":"impl Clone for D50Degree10","synthetic":false,"types":[]},{"text":"impl Clone for D55Degree10","synthetic":false,"types":[]},{"text":"impl Clone for D65Degree10","synthetic":false,"types":[]},{"text":"impl Clone for D75Degree10","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Clone for Color&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Float + Component,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Clone for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Clone for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Clone for ParkResult","synthetic":false,"types":[]},{"text":"impl Clone for UnparkResult","synthetic":false,"types":[]},{"text":"impl Clone for RequeueOp","synthetic":false,"types":[]},{"text":"impl Clone for FilterOp","synthetic":false,"types":[]},{"text":"impl Clone for UnparkToken","synthetic":false,"types":[]},{"text":"impl Clone for ParkToken","synthetic":false,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl&lt;'a&gt; Clone for PercentEncode&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PercentDecode&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Clone for Limits","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]},{"text":"impl Clone for ColorType","synthetic":false,"types":[]},{"text":"impl Clone for BitDepth","synthetic":false,"types":[]},{"text":"impl Clone for PixelDimensions","synthetic":false,"types":[]},{"text":"impl Clone for Unit","synthetic":false,"types":[]},{"text":"impl Clone for FrameControl","synthetic":false,"types":[]},{"text":"impl Clone for AnimationControl","synthetic":false,"types":[]},{"text":"impl Clone for Compression","synthetic":false,"types":[]},{"text":"impl Clone for Transformations","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Clone for YesS3","synthetic":false,"types":[]},{"text":"impl Clone for NoS3","synthetic":false,"types":[]},{"text":"impl Clone for YesS4","synthetic":false,"types":[]},{"text":"impl Clone for NoS4","synthetic":false,"types":[]},{"text":"impl Clone for YesA1","synthetic":false,"types":[]},{"text":"impl Clone for NoA1","synthetic":false,"types":[]},{"text":"impl Clone for YesA2","synthetic":false,"types":[]},{"text":"impl Clone for NoA2","synthetic":false,"types":[]},{"text":"impl Clone for YesNI","synthetic":false,"types":[]},{"text":"impl Clone for NoNI","synthetic":false,"types":[]},{"text":"impl&lt;S3:&nbsp;Clone, S4:&nbsp;Clone, NI:&nbsp;Clone&gt; Clone for SseMachine&lt;S3, S4, NI&gt;","synthetic":false,"types":[]},{"text":"impl&lt;NI:&nbsp;Clone&gt; Clone for Avx2Machine&lt;NI&gt;","synthetic":false,"types":[]},{"text":"impl Clone for vec128_storage","synthetic":false,"types":[]},{"text":"impl Clone for vec256_storage","synthetic":false,"types":[]},{"text":"impl Clone for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Clone for SpanRange","synthetic":false,"types":[]}];
implementors["quickcheck"] = [{"text":"impl Clone for TestResult","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Clone for Bernoulli","synthetic":false,"types":[]},{"text":"impl Clone for BernoulliError","synthetic":false,"types":[]},{"text":"impl Clone for Binomial","synthetic":false,"types":[]},{"text":"impl Clone for Cauchy","synthetic":false,"types":[]},{"text":"impl Clone for Dirichlet","synthetic":false,"types":[]},{"text":"impl Clone for Exp1","synthetic":false,"types":[]},{"text":"impl Clone for Exp","synthetic":false,"types":[]},{"text":"impl Clone for Gamma","synthetic":false,"types":[]},{"text":"impl Clone for ChiSquared","synthetic":false,"types":[]},{"text":"impl Clone for FisherF","synthetic":false,"types":[]},{"text":"impl Clone for StudentT","synthetic":false,"types":[]},{"text":"impl Clone for Beta","synthetic":false,"types":[]},{"text":"impl Clone for StandardNormal","synthetic":false,"types":[]},{"text":"impl Clone for Normal","synthetic":false,"types":[]},{"text":"impl Clone for LogNormal","synthetic":false,"types":[]},{"text":"impl Clone for Pareto","synthetic":false,"types":[]},{"text":"impl Clone for Poisson","synthetic":false,"types":[]},{"text":"impl Clone for Triangular","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone + SampleUniform&gt; Clone for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone&gt; Clone for UniformInt&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone&gt; Clone for UniformFloat&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UniformDuration","synthetic":false,"types":[]},{"text":"impl Clone for UnitCircle","synthetic":false,"types":[]},{"text":"impl Clone for UnitSphereSurface","synthetic":false,"types":[]},{"text":"impl Clone for Weibull","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Weight&gt; Clone for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Uniform&lt;W&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone + SampleUniform + PartialOrd&gt; Clone for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for WeightedError","synthetic":false,"types":[]},{"text":"impl Clone for OpenClosed01","synthetic":false,"types":[]},{"text":"impl Clone for Open01","synthetic":false,"types":[]},{"text":"impl Clone for Standard","synthetic":false,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Clone for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BlockRngCore + SeedableRng + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RngCore + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for StepRng","synthetic":false,"types":[]},{"text":"impl Clone for StdRng","synthetic":false,"types":[]},{"text":"impl Clone for ThreadRng","synthetic":false,"types":[]},{"text":"impl Clone for IndexVec","synthetic":false,"types":[]},{"text":"impl Clone for IndexVecIntoIter","synthetic":false,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Clone for ChaCha20Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha20Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha8Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha8Rng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for OsRng","synthetic":false,"types":[]}];
implementors["rand_distr"] = [{"text":"impl Clone for UnitSphere","synthetic":false,"types":[]},{"text":"impl Clone for UnitBall","synthetic":false,"types":[]},{"text":"impl Clone for UnitCircle","synthetic":false,"types":[]},{"text":"impl Clone for UnitDisc","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Gamma&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for ChiSquared&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ChiSquaredError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for FisherF&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FisherFError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for StudentT&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Beta&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BetaError","synthetic":false,"types":[]},{"text":"impl Clone for StandardNormal","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Normal&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for LogNormal&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Exp1","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Exp&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Pareto&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Pert&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PertError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Poisson&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Binomial","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Cauchy&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Dirichlet&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Triangular&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for TriangularError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Weibull&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["rand_pcg"] = [{"text":"impl Clone for Lcg64Xsh32","synthetic":false,"types":[]},{"text":"impl Clone for Lcg128Xsl64","synthetic":false,"types":[]},{"text":"impl Clone for Mcg128Xsl64","synthetic":false,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl Clone for X11Handle","synthetic":false,"types":[]},{"text":"impl Clone for WaylandHandle","synthetic":false,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T:&nbsp;Clone + Ord + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Ord + Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;Ord + Sync, V:&nbsp;Sync&gt; Clone for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Ord + Sync + 'a&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;Hash + Eq + Sync, V:&nbsp;Sync&gt; Clone for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Hash + Eq + Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: ParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ParallelIterator&lt;Item = A::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Cloned&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Copied&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Clone for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Enumerate&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, P:&nbsp;Clone&gt; Clone for Filter&lt;I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, P:&nbsp;Clone&gt; Clone for FilterMap&lt;I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for FlatMap&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Flatten&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, ID:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Fold&lt;I, ID, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FoldWith&lt;I, U, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Inspect&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: IndexedParallelIterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: IndexedParallelIterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: ParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for MinLen&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for MaxLen&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Map&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, T:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapWith&lt;I, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, INIT:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapInit&lt;I, INIT, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for MultiZip&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for Once&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for PanicFuse&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Iter:&nbsp;Clone&gt; Clone for IterBridge&lt;Iter&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for RepeatN&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Rev&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Skip&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for Split&lt;D, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Take&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone, ID:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for TryFold&lt;I, U, ID, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone + Try, F:&nbsp;Clone&gt; Clone for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U::Ok: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Update&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for WhileSome&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + IndexedParallelIterator, B:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Zip&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + IndexedParallelIterator, B:&nbsp;Clone + IndexedParallelIterator&gt; Clone for ZipEq&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for StepBy&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Iter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Iter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Iter&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Chunks&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for ChunksExact&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Windows&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T, P:&nbsp;Clone&gt; Clone for Split&lt;'data, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Chars&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for CharIndices&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Bytes&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for EncodeUtf16&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for Split&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for SplitTerminator&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Lines&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for SplitWhitespace&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for Matches&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for MatchIndices&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for WithComments","synthetic":false,"types":[]},{"text":"impl Clone for Comment","synthetic":false,"types":[]},{"text":"impl Clone for Ast","synthetic":false,"types":[]},{"text":"impl Clone for Alternation","synthetic":false,"types":[]},{"text":"impl Clone for Concat","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for LiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for SpecialLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for HexLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerl","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerlKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassAscii","synthetic":false,"types":[]},{"text":"impl Clone for ClassAsciiKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeOpKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassBracketed","synthetic":false,"types":[]},{"text":"impl Clone for ClassSet","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetItem","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetUnion","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOp","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOpKind","synthetic":false,"types":[]},{"text":"impl Clone for Assertion","synthetic":false,"types":[]},{"text":"impl Clone for AssertionKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionOp","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for CaptureName","synthetic":false,"types":[]},{"text":"impl Clone for SetFlags","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItem","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItemKind","synthetic":false,"types":[]},{"text":"impl Clone for Flag","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Literals","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Translator","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Hir","synthetic":false,"types":[]},{"text":"impl Clone for HirKind","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytes","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for WordBoundary","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Range","synthetic":false,"types":[]}];
implementors["relevant"] = [{"text":"impl Clone for Relevant","synthetic":false,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl Clone for Id","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resource&gt; Clone for Link&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Access: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Usage: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Layout: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resource&gt; Clone for Chain&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Unsynchronized","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resource&gt; Clone for State&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Access: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Layout: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Usage: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Node","synthetic":false,"types":[]},{"text":"impl Clone for Buffer","synthetic":false,"types":[]},{"text":"impl Clone for Image","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Family&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for QueueId","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Queue&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SubmissionId","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Submission&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Schedule&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Signal&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Wait&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resource&gt; Clone for Barrier&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Access: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Layout: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Guard","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone, W:&nbsp;Clone&gt; Clone for SyncData&lt;S, W&gt;","synthetic":false,"types":[]}];
implementors["rendy_command"] = [{"text":"impl Clone for DrawCommand","synthetic":false,"types":[]},{"text":"impl Clone for DrawIndexedCommand","synthetic":false,"types":[]},{"text":"impl Clone for DispatchCommand","synthetic":false,"types":[]},{"text":"impl Clone for PrimaryLevel","synthetic":false,"types":[]},{"text":"impl Clone for SecondaryLevel","synthetic":false,"types":[]},{"text":"impl Clone for IndividualReset","synthetic":false,"types":[]},{"text":"impl Clone for NoIndividualReset","synthetic":false,"types":[]},{"text":"impl Clone for InitialState","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for RecordingState&lt;U, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for ExecutableState&lt;U, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for PendingState&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for InvalidState","synthetic":false,"types":[]},{"text":"impl Clone for OneShot","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for MultiShot&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SimultaneousUse","synthetic":false,"types":[]},{"text":"impl Clone for NoSimultaneousUse","synthetic":false,"types":[]},{"text":"impl Clone for RenderPassContinue","synthetic":false,"types":[]},{"text":"impl Clone for OutsideRenderPass","synthetic":false,"types":[]},{"text":"impl Clone for Transfer","synthetic":false,"types":[]},{"text":"impl Clone for Execute","synthetic":false,"types":[]},{"text":"impl Clone for Compute","synthetic":false,"types":[]},{"text":"impl Clone for Graphics","synthetic":false,"types":[]},{"text":"impl Clone for General","synthetic":false,"types":[]},{"text":"impl Clone for FamilyId","synthetic":false,"types":[]},{"text":"impl Clone for QueueId","synthetic":false,"types":[]},{"text":"impl Clone for FenceEpoch","synthetic":false,"types":[]}];
implementors["rendy_descriptor"] = [{"text":"impl Clone for DescriptorRanges","synthetic":false,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl Clone for BlitRegion","synthetic":false,"types":[]},{"text":"impl Clone for BlitImageState","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone, H:&nbsp;Clone, Q:&nbsp;Clone&gt; Clone for Config&lt;D, H, Q&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OneGraphicsQueue","synthetic":false,"types":[]},{"text":"impl Clone for SavedQueueConfig","synthetic":false,"types":[]},{"text":"impl Clone for BasicHeapsConfigure","synthetic":false,"types":[]},{"text":"impl Clone for SavedHeapsConfig","synthetic":false,"types":[]},{"text":"impl Clone for BasicDevicesConfigure","synthetic":false,"types":[]},{"text":"impl Clone for BufferState","synthetic":false,"types":[]},{"text":"impl Clone for ImageState","synthetic":false,"types":[]},{"text":"impl Clone for ImageStateOrLayout","synthetic":false,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for FramesRange","synthetic":false,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl Clone for BufferId","synthetic":false,"types":[]},{"text":"impl Clone for ImageId","synthetic":false,"types":[]},{"text":"impl Clone for NodeId","synthetic":false,"types":[]},{"text":"impl Clone for Pipeline","synthetic":false,"types":[]},{"text":"impl Clone for PrepareResult","synthetic":false,"types":[]},{"text":"impl Clone for BufferAccess","synthetic":false,"types":[]},{"text":"impl Clone for BufferBarrier","synthetic":false,"types":[]},{"text":"impl Clone for NodeBuffer","synthetic":false,"types":[]},{"text":"impl Clone for ImageAccess","synthetic":false,"types":[]},{"text":"impl Clone for ImageBarrier","synthetic":false,"types":[]},{"text":"impl Clone for NodeImage","synthetic":false,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl Clone for DynamicConfig","synthetic":false,"types":[]},{"text":"impl Clone for LinearConfig","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for HeapsConfig","synthetic":false,"types":[]},{"text":"impl Clone for NonCoherent","synthetic":false,"types":[]},{"text":"impl Clone for Coherent","synthetic":false,"types":[]},{"text":"impl Clone for MaybeCoherent","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for Dynamic","synthetic":false,"types":[]},{"text":"impl Clone for Upload","synthetic":false,"types":[]},{"text":"impl Clone for Download","synthetic":false,"types":[]},{"text":"impl Clone for MemoryUsageValue","synthetic":false,"types":[]},{"text":"impl Clone for MemoryUtilization","synthetic":false,"types":[]},{"text":"impl Clone for MemoryHeapUtilization","synthetic":false,"types":[]},{"text":"impl Clone for MemoryTypeUtilization","synthetic":false,"types":[]},{"text":"impl Clone for TotalMemoryUtilization","synthetic":false,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl&lt;'a&gt; Clone for MeshBuilder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Incompatible","synthetic":false,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl Clone for BufferInfo","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Handle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ImageInfo","synthetic":false,"types":[]},{"text":"impl Clone for ImageViewInfo","synthetic":false,"types":[]},{"text":"impl Clone for DescriptorSetInfo","synthetic":false,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl Clone for SpirvShader","synthetic":false,"types":[]},{"text":"impl Clone for SpecConstantSet","synthetic":false,"types":[]},{"text":"impl Clone for ShaderSetBuilder","synthetic":false,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl Clone for Repr","synthetic":false,"types":[]},{"text":"impl Clone for TextureKind","synthetic":false,"types":[]},{"text":"impl Clone for ImageTextureConfig","synthetic":false,"types":[]},{"text":"impl Clone for Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Inorm","synthetic":false,"types":[]},{"text":"impl Clone for Uint","synthetic":false,"types":[]},{"text":"impl Clone for Int","synthetic":false,"types":[]},{"text":"impl Clone for Uscaled","synthetic":false,"types":[]},{"text":"impl Clone for Iscaled","synthetic":false,"types":[]},{"text":"impl Clone for Srgb","synthetic":false,"types":[]},{"text":"impl Clone for Float","synthetic":false,"types":[]},{"text":"impl Clone for _8","synthetic":false,"types":[]},{"text":"impl Clone for _16","synthetic":false,"types":[]},{"text":"impl Clone for _32","synthetic":false,"types":[]},{"text":"impl Clone for _64","synthetic":false,"types":[]},{"text":"impl Clone for R","synthetic":false,"types":[]},{"text":"impl Clone for Rg","synthetic":false,"types":[]},{"text":"impl Clone for Rgb","synthetic":false,"types":[]},{"text":"impl Clone for Rgba","synthetic":false,"types":[]},{"text":"impl Clone for Bgr","synthetic":false,"types":[]},{"text":"impl Clone for Bgra","synthetic":false,"types":[]},{"text":"impl Clone for Abgr","synthetic":false,"types":[]},{"text":"impl&lt;C, S, T&gt; Clone for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: PixelRepr&lt;S, T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for MipLevels","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TextureBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["rendy_util"] = [{"text":"impl Clone for AttrUuid","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for Normal","synthetic":false,"types":[]},{"text":"impl Clone for Tangent","synthetic":false,"types":[]},{"text":"impl Clone for TexCoord","synthetic":false,"types":[]},{"text":"impl Clone for VertexFormat","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for PosColor","synthetic":false,"types":[]},{"text":"impl Clone for PosNorm","synthetic":false,"types":[]},{"text":"impl Clone for PosColorNorm","synthetic":false,"types":[]},{"text":"impl Clone for PosTex","synthetic":false,"types":[]},{"text":"impl Clone for PosNormTex","synthetic":false,"types":[]},{"text":"impl Clone for PosNormTangTex","synthetic":false,"types":[]},{"text":"impl Clone for Model","synthetic":false,"types":[]},{"text":"impl Clone for SetLayout","synthetic":false,"types":[]},{"text":"impl Clone for Layout","synthetic":false,"types":[]},{"text":"impl Clone for InstanceId","synthetic":false,"types":[]},{"text":"impl Clone for DeviceId","synthetic":false,"types":[]}];
implementors["rental"] = [{"text":"impl Clone for SimpleRefClone <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Arc&lt;i32&gt;: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'static i32: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;'static + StableDeref, T:&nbsp;'static&gt; Clone for RentRef&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'static T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;'static + StableDeref, T:&nbsp;'static&gt; Clone for RentRefCell&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ref&lt;'static, T&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;'static + StableDeref + DerefMut, T:&nbsp;'static&gt; Clone for RentMutex&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;MutexGuard&lt;'static, T&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;'static + StableDeref, T:&nbsp;'static&gt; Clone for RentRwLock&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;RwLockReadGuard&lt;'static, T&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;'static + StableDeref, T:&nbsp;'static&gt; Clone for RentRwLockMut&lt;H, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: CloneStableDeref,<br>&nbsp;&nbsp;&nbsp;&nbsp;RwLockWriteGuard&lt;'static, T&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rodio"] = [{"text":"impl Clone for DecoderError","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Amplify&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for BltFilter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Buffered&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Sample,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for ChannelVolume&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Sample,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Delay&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Done&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Empty&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for FadeIn&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for FromIter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I1:&nbsp;Clone, I2:&nbsp;Clone&gt; Clone for Mix&lt;I1, I2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I1: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I1::Item: Sample,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I2::Item: Sample,<br>&nbsp;&nbsp;&nbsp;&nbsp;I1::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I1::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Pausable&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for PeriodicAccess&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Repeat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Sample,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, D:&nbsp;Clone&gt; Clone for SamplesConverter&lt;I, D&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SineWave","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Spatial&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Sample + Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Speed&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Stoppable&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for TakeDuration&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, D:&nbsp;Clone&gt; Clone for UniformSourceIterator&lt;I, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Source,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Sample,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sample,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Zero&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for StaticSamplesBuffer&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ron"] = [{"text":"impl Clone for PrettyConfig","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorCode","synthetic":false,"types":[]},{"text":"impl Clone for Map","synthetic":false,"types":[]},{"text":"impl Clone for Number","synthetic":false,"types":[]},{"text":"impl Clone for Float","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Extensions","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl Clone for TryDemangleError","synthetic":false,"types":[]}];
implementors["rustc_version"] = [{"text":"impl Clone for Channel","synthetic":false,"types":[]},{"text":"impl Clone for VersionMeta","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Point&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Vector&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Line","synthetic":false,"types":[]},{"text":"impl Clone for Curve","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Rect&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CacheBuilder","synthetic":false,"types":[]},{"text":"impl Clone for CacheReadErr","synthetic":false,"types":[]},{"text":"impl Clone for CacheWriteErr","synthetic":false,"types":[]},{"text":"impl Clone for CachedBy","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for FontCollection&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Font&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SharedBytes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Codepoint","synthetic":false,"types":[]},{"text":"impl Clone for GlyphId","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Glyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HMetrics","synthetic":false,"types":[]},{"text":"impl Clone for VMetrics","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ScaledGlyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PositionedGlyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Scale","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b, I:&nbsp;Clone + Iterator&gt; Clone for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: IntoGlyphId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for LayoutIter&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Segment","synthetic":false,"types":[]},{"text":"impl Clone for Contour","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["semver"] = [{"text":"impl Clone for Identifier","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for SemVerError","synthetic":false,"types":[]},{"text":"impl Clone for VersionReq","synthetic":false,"types":[]},{"text":"impl Clone for ReqParseError","synthetic":false,"types":[]}];
implementors["semver_parser"] = [{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for Identifier","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for StringDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for CowStrDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_bytes"] = [{"text":"impl Clone for ByteBuf","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Clone for Category","synthetic":false,"types":[]},{"text":"impl Clone for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CompactFormatter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Number","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;RawValue&gt;","synthetic":false,"types":[]}];
implementors["shred"] = [{"text":"impl Clone for InvalidBorrow","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Clone for Ref&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RunningTime","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Fetch&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ResourceId","synthetic":false,"types":[]}];
implementors["siphasher"] = [{"text":"impl Clone for SipHasher13","synthetic":false,"types":[]},{"text":"impl Clone for SipHasher24","synthetic":false,"types":[]},{"text":"impl Clone for SipHasher","synthetic":false,"types":[]},{"text":"impl Clone for Hash128","synthetic":false,"types":[]},{"text":"impl Clone for SipHasher13","synthetic":false,"types":[]},{"text":"impl Clone for SipHasher24","synthetic":false,"types":[]},{"text":"impl Clone for SipHasher","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["slice_deque"] = [{"text":"impl&lt;T&gt; Clone for Buffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SliceDeque&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Clone for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array + Clone&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Clone for ModifiersState","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for OutputInfo","synthetic":false,"types":[]},{"text":"impl Clone for OutputMgr","synthetic":false,"types":[]},{"text":"impl Clone for ThemedPointer","synthetic":false,"types":[]},{"text":"impl Clone for AutoPointer","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]}];
implementors["specs"] = [{"text":"impl&lt;J:&nbsp;Join&gt; Clone for JoinIter&lt;J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;J::Mask: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;J::Value: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ComponentEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, D:&nbsp;Clone&gt; Clone for Storage&lt;'a, T, D&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Entity","synthetic":false,"types":[]},{"text":"impl Clone for Generation","synthetic":false,"types":[]}];
implementors["specs_hierarchy"] = [{"text":"impl Clone for HierarchyEvent","synthetic":false,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data:&nbsp;Clone + Deref&lt;Target = [u8]&gt;&gt; Clone for FontInfo&lt;Data&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Vertex","synthetic":false,"types":[]},{"text":"impl Clone for VertexType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Rect&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HMetrics","synthetic":false,"types":[]},{"text":"impl Clone for VMetrics","synthetic":false,"types":[]},{"text":"impl Clone for PlatformId","synthetic":false,"types":[]},{"text":"impl Clone for UnicodeEid","synthetic":false,"types":[]},{"text":"impl Clone for MicrosoftEid","synthetic":false,"types":[]},{"text":"impl Clone for MacEid","synthetic":false,"types":[]},{"text":"impl Clone for MicrosoftLang","synthetic":false,"types":[]},{"text":"impl Clone for MacLang","synthetic":false,"types":[]},{"text":"impl Clone for PlatformEncodingLanguageId","synthetic":false,"types":[]},{"text":"impl&lt;'a, Data:&nbsp;Clone + Deref&lt;Target = [u8]&gt;&gt; Clone for FontNameIter&lt;'a, Data&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Apostrophe","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for CapSelf","synthetic":false,"types":[]},{"text":"impl Clone for Catch","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for Self_","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprInPlace","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIfLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhileLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprCatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for ExprVerbatim","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for LitVerbatim","synthetic":false,"types":[]},{"text":"impl Clone for StrStyle","synthetic":false,"types":[]},{"text":"impl Clone for IntSuffix","synthetic":false,"types":[]},{"text":"impl Clone for FloatSuffix","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeVerbatim","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArgName","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PathTokens&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
implementors["synstructure"] = [{"text":"impl Clone for AddBounds","synthetic":false,"types":[]},{"text":"impl Clone for BindStyle","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for BindingInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for VariantAst&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for VariantInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Structure&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Clone for ColorChoice","synthetic":false,"types":[]},{"text":"impl Clone for ColorSpec","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for ParseColorError","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Clone for Tag","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for PhotometricInterpretation","synthetic":false,"types":[]},{"text":"impl Clone for CompressionMethod","synthetic":false,"types":[]},{"text":"impl Clone for PlanarConfiguration","synthetic":false,"types":[]},{"text":"impl Clone for Limits","synthetic":false,"types":[]},{"text":"impl Clone for Rational","synthetic":false,"types":[]},{"text":"impl Clone for TiffFormatError","synthetic":false,"types":[]},{"text":"impl Clone for TiffUnsupportedError","synthetic":false,"types":[]},{"text":"impl Clone for ColorType","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Clone for Duration","synthetic":false,"types":[]},{"text":"impl Clone for OutOfRangeError","synthetic":false,"types":[]},{"text":"impl Clone for Timespec","synthetic":false,"types":[]},{"text":"impl Clone for PreciseTime","synthetic":false,"types":[]},{"text":"impl Clone for SteadyTime","synthetic":false,"types":[]},{"text":"impl Clone for Tm","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]}];
implementors["tinystr"] = [{"text":"impl Clone for TinyStr16","synthetic":false,"types":[]},{"text":"impl Clone for TinyStr4","synthetic":false,"types":[]},{"text":"impl Clone for TinyStr8","synthetic":false,"types":[]},{"text":"impl Clone for TinyStrAuto","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Clone for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Datetime","synthetic":false,"types":[]},{"text":"impl Clone for DatetimeParseError","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Spanned&lt;T&gt;","synthetic":false,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Clone for XxHash64","synthetic":false,"types":[]},{"text":"impl Clone for XxHash32","synthetic":false,"types":[]},{"text":"impl Clone for RandomXxHashBuilder64","synthetic":false,"types":[]},{"text":"impl Clone for RandomXxHashBuilder32","synthetic":false,"types":[]}];
implementors["tynm"] = [{"text":"impl&lt;'s&gt; Clone for TypeNameDisplay&lt;'s&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'s&gt; Clone for TypeName&lt;'s&gt;","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Clone for B0","synthetic":false,"types":[]},{"text":"impl Clone for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone + Unsigned + NonZero&gt; Clone for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone + Unsigned + NonZero&gt; Clone for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Z0","synthetic":false,"types":[]},{"text":"impl Clone for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Clone, A:&nbsp;Clone&gt; Clone for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Greater","synthetic":false,"types":[]},{"text":"impl Clone for Less","synthetic":false,"types":[]},{"text":"impl Clone for Equal","synthetic":false,"types":[]}];
implementors["unic_langid_impl"] = [{"text":"impl Clone for LanguageIdentifier","synthetic":false,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Decompositions&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Recompositions&lt;I&gt;","synthetic":false,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Clone for GraphemeIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Graphemes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GraphemeCursor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBoundIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UnicodeSentences&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBoundIndices&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Clone for Void","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Clone for DirEntry","synthetic":false,"types":[]}];
implementors["wavefront_obj"] = [{"text":"impl Clone for MtlSet","synthetic":false,"types":[]},{"text":"impl Clone for Material","synthetic":false,"types":[]},{"text":"impl Clone for Illumination","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for ObjSet","synthetic":false,"types":[]},{"text":"impl Clone for Object","synthetic":false,"types":[]},{"text":"impl Clone for Geometry","synthetic":false,"types":[]},{"text":"impl Clone for Shape","synthetic":false,"types":[]},{"text":"impl Clone for Primitive","synthetic":false,"types":[]},{"text":"impl Clone for Vertex","synthetic":false,"types":[]},{"text":"impl Clone for TVertex","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Clone for GlobalManager","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interface&gt; Clone for Proxy&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for DndAction","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Resize","synthetic":false,"types":[]},{"text":"impl Clone for Transient","synthetic":false,"types":[]},{"text":"impl Clone for FullscreenMethod","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Axis","synthetic":false,"types":[]},{"text":"impl Clone for AxisSource","synthetic":false,"types":[]},{"text":"impl Clone for KeymapFormat","synthetic":false,"types":[]},{"text":"impl Clone for KeyState","synthetic":false,"types":[]},{"text":"impl Clone for Subpixel","synthetic":false,"types":[]},{"text":"impl Clone for Transform","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl&lt;Meta:&nbsp;Clone + ObjectMetadata&gt; Clone for Object&lt;Meta&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArgumentType","synthetic":false,"types":[]},{"text":"impl Clone for Argument","synthetic":false,"types":[]},{"text":"impl Clone for Message","synthetic":false,"types":[]},{"text":"impl Clone for MessageWriteError","synthetic":false,"types":[]},{"text":"impl Clone for MessageParseError","synthetic":false,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for PresentMethod","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for ContentHint","synthetic":false,"types":[]},{"text":"impl Clone for ContentPurpose","synthetic":false,"types":[]},{"text":"impl Clone for PreeditStyle","synthetic":false,"types":[]},{"text":"impl Clone for TextDirection","synthetic":false,"types":[]},{"text":"impl Clone for ChangeCause","synthetic":false,"types":[]},{"text":"impl Clone for ContentHint","synthetic":false,"types":[]},{"text":"impl Clone for ContentPurpose","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Gravity","synthetic":false,"types":[]},{"text":"impl Clone for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for CancelReason","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Layer","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Gravity","synthetic":false,"types":[]},{"text":"impl Clone for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Clone for LogicalPosition","synthetic":false,"types":[]},{"text":"impl Clone for PhysicalPosition","synthetic":false,"types":[]},{"text":"impl Clone for LogicalSize","synthetic":false,"types":[]},{"text":"impl Clone for PhysicalSize","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for WindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for DeviceEvent","synthetic":false,"types":[]},{"text":"impl Clone for KeyboardInput","synthetic":false,"types":[]},{"text":"impl Clone for TouchPhase","synthetic":false,"types":[]},{"text":"impl Clone for Touch","synthetic":false,"types":[]},{"text":"impl Clone for ElementState","synthetic":false,"types":[]},{"text":"impl Clone for MouseButton","synthetic":false,"types":[]},{"text":"impl Clone for MouseScrollDelta","synthetic":false,"types":[]},{"text":"impl Clone for VirtualKeyCode","synthetic":false,"types":[]},{"text":"impl Clone for ModifiersState","synthetic":false,"types":[]},{"text":"impl Clone for BadIcon","synthetic":false,"types":[]},{"text":"impl Clone for Icon","synthetic":false,"types":[]},{"text":"impl Clone for XNotSupported","synthetic":false,"types":[]},{"text":"impl Clone for WindowType","synthetic":false,"types":[]},{"text":"impl Clone for MonitorId","synthetic":false,"types":[]},{"text":"impl Clone for WindowId","synthetic":false,"types":[]},{"text":"impl Clone for DeviceId","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlow","synthetic":false,"types":[]},{"text":"impl Clone for EventsLoopProxy","synthetic":false,"types":[]},{"text":"impl Clone for EventsLoopClosed","synthetic":false,"types":[]},{"text":"impl Clone for WindowBuilder","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for MouseCursor","synthetic":false,"types":[]},{"text":"impl Clone for WindowAttributes","synthetic":false,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl Clone for Atoms","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Clone for OpenError","synthetic":false,"types":[]},{"text":"impl Clone for OpenErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for XEvent","synthetic":false,"types":[]},{"text":"impl Clone for XAnyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XButtonEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCirculateEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCirculateRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XClientMessageEvent","synthetic":false,"types":[]},{"text":"impl Clone for XColormapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XConfigureEvent","synthetic":false,"types":[]},{"text":"impl Clone for XConfigureRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCreateWindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCrossingEvent","synthetic":false,"types":[]},{"text":"impl Clone for XDestroyWindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for XErrorEvent","synthetic":false,"types":[]},{"text":"impl Clone for XExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XFocusChangeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XGraphicsExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XGravityEvent","synthetic":false,"types":[]},{"text":"impl Clone for XKeyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XKeymapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMappingEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMapRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMotionEvent","synthetic":false,"types":[]},{"text":"impl Clone for XNoExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XPropertyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XReparentEvent","synthetic":false,"types":[]},{"text":"impl Clone for XResizeRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionClearEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XUnmapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XVisibilityEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbDesc","synthetic":false,"types":[]},{"text":"impl Clone for _XkbKeyAliasRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbKeyNameRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbNamesRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbStateRec","synthetic":false,"types":[]},{"text":"impl Clone for XkbAnyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbNewKeyboardNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbMapNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbStateNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbControlsNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbIndicatorNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbNamesNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbCompatMapNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbBellNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbActionMessageEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbAccessXNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbExtensionDeviceNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbEvent","synthetic":false,"types":[]},{"text":"impl Clone for Depth","synthetic":false,"types":[]},{"text":"impl Clone for Screen","synthetic":false,"types":[]},{"text":"impl Clone for ScreenFormat","synthetic":false,"types":[]},{"text":"impl Clone for Visual","synthetic":false,"types":[]},{"text":"impl Clone for XArc","synthetic":false,"types":[]},{"text":"impl Clone for XChar2b","synthetic":false,"types":[]},{"text":"impl Clone for XCharStruct","synthetic":false,"types":[]},{"text":"impl Clone for XClassHint","synthetic":false,"types":[]},{"text":"impl Clone for XColor","synthetic":false,"types":[]},{"text":"impl Clone for XComposeStatus","synthetic":false,"types":[]},{"text":"impl Clone for XExtCodes","synthetic":false,"types":[]},{"text":"impl Clone for XFontProp","synthetic":false,"types":[]},{"text":"impl Clone for XFontSetExtents","synthetic":false,"types":[]},{"text":"impl Clone for XFontStruct","synthetic":false,"types":[]},{"text":"impl Clone for XGCValues","synthetic":false,"types":[]},{"text":"impl Clone for XGenericEventCookie","synthetic":false,"types":[]},{"text":"impl Clone for XHostAddress","synthetic":false,"types":[]},{"text":"impl Clone for XIconSize","synthetic":false,"types":[]},{"text":"impl Clone for XImage","synthetic":false,"types":[]},{"text":"impl Clone for XKeyboardControl","synthetic":false,"types":[]},{"text":"impl Clone for XKeyboardState","synthetic":false,"types":[]},{"text":"impl Clone for XmbTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XModifierKeymap","synthetic":false,"types":[]},{"text":"impl Clone for XOMCharSetList","synthetic":false,"types":[]},{"text":"impl Clone for XPixmapFormatValues","synthetic":false,"types":[]},{"text":"impl Clone for XPoint","synthetic":false,"types":[]},{"text":"impl Clone for XRectangle","synthetic":false,"types":[]},{"text":"impl Clone for XrmOptionDescRec","synthetic":false,"types":[]},{"text":"impl Clone for XrmValue","synthetic":false,"types":[]},{"text":"impl Clone for XSegment","synthetic":false,"types":[]},{"text":"impl Clone for XSetWindowAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XSizeHints","synthetic":false,"types":[]},{"text":"impl Clone for XStandardColormap","synthetic":false,"types":[]},{"text":"impl Clone for XTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XTextItem16","synthetic":false,"types":[]},{"text":"impl Clone for XTextProperty","synthetic":false,"types":[]},{"text":"impl Clone for XTimeCoord","synthetic":false,"types":[]},{"text":"impl Clone for XVisualInfo","synthetic":false,"types":[]},{"text":"impl Clone for XwcTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XWindowAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XWindowChanges","synthetic":false,"types":[]},{"text":"impl Clone for XWMHints","synthetic":false,"types":[]},{"text":"impl Clone for XIMCaretDirection","synthetic":false,"types":[]},{"text":"impl Clone for XIMCaretStyle","synthetic":false,"types":[]},{"text":"impl Clone for XIMPreeditDrawCallbackStruct","synthetic":false,"types":[]},{"text":"impl Clone for XIMPreeditCaretCallbackStruct","synthetic":false,"types":[]},{"text":"impl Clone for XIMTextString","synthetic":false,"types":[]},{"text":"impl Clone for XIMText","synthetic":false,"types":[]},{"text":"impl Clone for AspectRatio","synthetic":false,"types":[]},{"text":"impl Clone for ClientMessageData","synthetic":false,"types":[]},{"text":"impl Clone for ImageFns","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorAnimate","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorChunkHeader","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorComment","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorComments","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorCursors","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFile","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFileHeader","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFileToc","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorImage","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorImages","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeGamma","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeModeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeModeLine","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeMonitor","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeSyncRange","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XftFont","synthetic":false,"types":[]},{"text":"impl Clone for XftColor","synthetic":false,"types":[]},{"text":"impl Clone for XftCharSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftCharFontSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftFontSet","synthetic":false,"types":[]},{"text":"impl Clone for XftGlyphSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftGlyphFontSpec","synthetic":false,"types":[]},{"text":"impl Clone for XineramaScreenInfo","synthetic":false,"types":[]},{"text":"impl Clone for XPanoramiXInfo","synthetic":false,"types":[]},{"text":"impl Clone for XDevice","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceControl","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceInfo","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceState","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceTimeCoord","synthetic":false,"types":[]},{"text":"impl Clone for XExtensionVersion","synthetic":false,"types":[]},{"text":"impl Clone for XFeedbackControl","synthetic":false,"types":[]},{"text":"impl Clone for XFeedbackState","synthetic":false,"types":[]},{"text":"impl Clone for XInputClass","synthetic":false,"types":[]},{"text":"impl Clone for XInputClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAddMasterInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIRemoveMasterInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAttachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIDetachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAnyHierarchyChangeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIModifierState","synthetic":false,"types":[]},{"text":"impl Clone for XIButtonState","synthetic":false,"types":[]},{"text":"impl Clone for XIValuatorState","synthetic":false,"types":[]},{"text":"impl Clone for XIEventMask","synthetic":false,"types":[]},{"text":"impl Clone for XIAnyClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIButtonClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIKeyClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIValuatorClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIScrollClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XITouchClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIGrabModifiers","synthetic":false,"types":[]},{"text":"impl Clone for XIBarrierReleasePointerInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIHierarchyInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIHierarchyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceChangedEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIRawEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIEnterEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIPropertyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XITouchOwnershipEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIBarrierEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRecordClientInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRecordExtRange","synthetic":false,"types":[]},{"text":"impl Clone for XRecordInterceptData","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange8","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange16","synthetic":false,"types":[]},{"text":"impl Clone for XRecordState","synthetic":false,"types":[]},{"text":"impl Clone for _XAnimCursor","synthetic":false,"types":[]},{"text":"impl Clone for _XCircle","synthetic":false,"types":[]},{"text":"impl Clone for _XConicalGradient","synthetic":false,"types":[]},{"text":"impl Clone for _XFilters","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt8","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt16","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt32","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphInfo","synthetic":false,"types":[]},{"text":"impl Clone for _XIndexValue","synthetic":false,"types":[]},{"text":"impl Clone for _XLinearGradient","synthetic":false,"types":[]},{"text":"impl Clone for _XLineFixed","synthetic":false,"types":[]},{"text":"impl Clone for _XPointDouble","synthetic":false,"types":[]},{"text":"impl Clone for _XPointFixed","synthetic":false,"types":[]},{"text":"impl Clone for _XRadialGradient","synthetic":false,"types":[]},{"text":"impl Clone for XRenderColor","synthetic":false,"types":[]},{"text":"impl Clone for XRenderDirectFormat","synthetic":false,"types":[]},{"text":"impl Clone for XRenderPictFormat","synthetic":false,"types":[]},{"text":"impl Clone for _XRenderPictureAttributes","synthetic":false,"types":[]},{"text":"impl Clone for _XSpanFix","synthetic":false,"types":[]},{"text":"impl Clone for _XTrap","synthetic":false,"types":[]},{"text":"impl Clone for _XTrapezoid","synthetic":false,"types":[]},{"text":"impl Clone for _XTriangle","synthetic":false,"types":[]},{"text":"impl Clone for _XTransform","synthetic":false,"types":[]},{"text":"impl Clone for XScreenSaverInfo","synthetic":false,"types":[]},{"text":"impl Clone for XScreenSaverNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenSize","synthetic":false,"types":[]},{"text":"impl Clone for XRRModeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenResources","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRPropertyInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcGamma","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcTransformAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XRRPanning","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderResources","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRMonitorInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRResourceChangeNotifyEvent","synthetic":false,"types":[]}];
implementors["xcb"] = [{"text":"impl Clone for Char2b","synthetic":false,"types":[]},{"text":"impl Clone for Point","synthetic":false,"types":[]},{"text":"impl Clone for Rectangle","synthetic":false,"types":[]},{"text":"impl Clone for Arc","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Visualtype","synthetic":false,"types":[]},{"text":"impl Clone for Timecoord","synthetic":false,"types":[]},{"text":"impl Clone for Fontprop","synthetic":false,"types":[]},{"text":"impl Clone for Charinfo","synthetic":false,"types":[]},{"text":"impl Clone for Segment","synthetic":false,"types":[]},{"text":"impl Clone for Coloritem","synthetic":false,"types":[]},{"text":"impl Clone for Rgb","synthetic":false,"types":[]},{"text":"impl Clone for Directformat","synthetic":false,"types":[]},{"text":"impl Clone for Pictforminfo","synthetic":false,"types":[]},{"text":"impl Clone for Pictvisual","synthetic":false,"types":[]},{"text":"impl Clone for Indexvalue","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for Pointfix","synthetic":false,"types":[]},{"text":"impl Clone for Linefix","synthetic":false,"types":[]},{"text":"impl Clone for Triangle","synthetic":false,"types":[]},{"text":"impl Clone for Trapezoid","synthetic":false,"types":[]},{"text":"impl Clone for Glyphinfo","synthetic":false,"types":[]},{"text":"impl Clone for Transform","synthetic":false,"types":[]},{"text":"impl Clone for Animcursorelt","synthetic":false,"types":[]},{"text":"impl Clone for Spanfix","synthetic":false,"types":[]},{"text":"impl Clone for Trap","synthetic":false,"types":[]},{"text":"impl Clone for xcb_generic_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_generic_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ge_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_generic_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_void_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_char2b_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_point_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_rectangle_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_arc_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_format_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_visualtype_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_key_press_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_button_press_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_motion_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_enter_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_focus_in_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_keymap_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_expose_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_graphics_exposure_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_no_exposure_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_visibility_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_create_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_destroy_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_unmap_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_map_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_map_request_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_reparent_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_configure_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_configure_request_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_gravity_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_resize_request_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_circulate_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_property_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_selection_clear_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_selection_request_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_selection_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_colormap_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_client_message_data_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_client_message_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_mapping_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ge_generic_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_request_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_value_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_window_attributes_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_window_attributes_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_window_attributes_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_destroy_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_destroy_subwindows_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_change_save_set_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_reparent_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_map_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_map_subwindows_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_unmap_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_unmap_subwindows_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_circulate_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_geometry_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_geometry_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_geometry_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_tree_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_tree_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_intern_atom_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_intern_atom_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_atom_name_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_atom_name_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_delete_property_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_property_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_property_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_properties_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_properties_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_selection_owner_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_selection_owner_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_selection_owner_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_selection_owner_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_convert_selection_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_send_event_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_pointer_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_pointer_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_pointer_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ungrab_pointer_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_button_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ungrab_button_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_change_active_pointer_grab_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_keyboard_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_keyboard_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_keyboard_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ungrab_keyboard_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_key_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ungrab_key_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_allow_events_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_grab_server_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_ungrab_server_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_pointer_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_pointer_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_pointer_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_timecoord_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_motion_events_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_motion_events_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_translate_coordinates_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_translate_coordinates_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_translate_coordinates_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_warp_pointer_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_input_focus_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_input_focus_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_input_focus_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_input_focus_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_keymap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_keymap_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_keymap_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_close_font_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_fontprop_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_charinfo_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_font_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_font_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_text_extents_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_text_extents_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_fonts_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_fonts_with_info_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_font_path_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_font_path_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_create_pixmap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_free_pixmap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_copy_gc_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_free_gc_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_clear_area_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_copy_area_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_copy_plane_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_segment_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_image_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_image_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_create_colormap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_free_colormap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_copy_colormap_and_free_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_install_colormap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_uninstall_colormap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_installed_colormaps_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_installed_colormaps_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_named_color_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_named_color_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_cells_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_cells_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_planes_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_alloc_color_planes_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_coloritem_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_rgb_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_colors_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_lookup_color_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_lookup_color_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_create_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_create_glyph_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_free_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_recolor_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_best_size_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_best_size_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_best_size_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_extension_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_query_extension_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_extensions_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_extensions_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_keyboard_mapping_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_keyboard_mapping_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_keyboard_control_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_keyboard_control_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_keyboard_control_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_bell_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_change_pointer_control_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_pointer_control_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_pointer_control_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_pointer_control_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_screen_saver_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_screen_saver_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_screen_saver_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_screen_saver_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_hosts_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_list_hosts_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_access_control_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_close_down_mode_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_kill_client_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_force_screen_saver_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_pointer_mapping_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_pointer_mapping_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_pointer_mapping_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_pointer_mapping_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_modifier_mapping_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_set_modifier_mapping_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_modifier_mapping_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_get_modifier_mapping_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_no_operation_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_big_requests_enable_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_big_requests_enable_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_big_requests_enable_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_version_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_version_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_version_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_xid_range_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_xid_range_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_xid_range_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_xid_list_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xc_misc_get_xid_list_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_pict_format_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_picture_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_pict_op_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_glyph_set_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_glyph_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_directformat_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_pictforminfo_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_pictvisual_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_indexvalue_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_color_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_pointfix_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_linefix_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_triangle_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_trapezoid_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_glyphinfo_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_version_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_version_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_version_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_pict_formats_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_pict_formats_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_pict_index_values_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_pict_index_values_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_free_picture_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_composite_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_create_glyph_set_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_reference_glyph_set_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_free_glyph_set_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_create_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_transform_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_set_picture_transform_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_filters_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_query_filters_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_animcursorelt_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_spanfix_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_trap_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_render_create_solid_fill_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_version_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_version_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_version_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_mask_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_combine_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_offset_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_extents_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_extents_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_query_extents_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_select_input_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_input_selected_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_input_selected_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_input_selected_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_get_rectangles_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_shape_get_rectangles_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_query_version_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_query_version_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_query_version_reply_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_change_save_set_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_selection_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_select_selection_input_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_cursor_notify_event_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_select_cursor_input_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_image_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_image_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_bad_region_error_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_create_region_from_bitmap_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_create_region_from_window_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_create_region_from_gc_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_create_region_from_picture_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_destroy_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_copy_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_union_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_intersect_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_subtract_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_invert_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_translate_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_region_extents_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_fetch_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_fetch_region_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_set_gc_clip_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_set_window_shape_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_set_picture_clip_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_name_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_name_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_image_and_name_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_get_cursor_image_and_name_cookie_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_change_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_expand_region_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_hide_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_show_cursor_request_t","synthetic":false,"types":[]},{"text":"impl Clone for xcb_xfixes_delete_pointer_barrier_request_t","synthetic":false,"types":[]}];
implementors["xdg"] = [{"text":"impl Clone for BaseDirectories","synthetic":false,"types":[]}];
implementors["xi_unicode"] = [{"text":"impl&lt;'a&gt; Clone for LineBreakIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for LineBreakLeafIter","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Clone for Name&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OwnedName","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Attribute&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OwnedAttribute","synthetic":false,"types":[]},{"text":"impl Clone for TextPosition","synthetic":false,"types":[]},{"text":"impl Clone for XmlVersion","synthetic":false,"types":[]},{"text":"impl Clone for Namespace","synthetic":false,"types":[]},{"text":"impl Clone for NamespaceStack","synthetic":false,"types":[]},{"text":"impl Clone for ParserConfig","synthetic":false,"types":[]},{"text":"impl Clone for XmlEvent","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for EmitterConfig","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()