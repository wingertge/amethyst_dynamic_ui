(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Default for Adler32","synthetic":false,"types":[]}];
implementors["adler32"] = [{"text":"impl Default for RollingAdler32","synthetic":false,"types":[]}];
implementors["ahash"] = [{"text":"impl Default for RandomState","synthetic":false,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl Default for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for Config","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["alsa_sys"] = [{"text":"impl&lt;Storage:&nbsp;Default, Align:&nbsp;Default&gt; Default for __BindgenBitfieldUnit&lt;Storage, Align&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Storage: AsRef&lt;[u8]&gt; + AsMut&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst"] = [{"text":"impl Default for CallbackQueue","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Default for GameDataBuilder&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl Default for LoggerConfig","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for StateEventReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_animation"] = [{"text":"impl&lt;'a&gt; Default for VertexSkinningBundle&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Default&gt; Default for SamplingBundle&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Default, T:&nbsp;Default&gt; Default for AnimationBundle&lt;'a, I, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for AnimationPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Default, T:&nbsp;Default&gt; Default for AnimationSetPrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for AnimationHierarchyPrefab&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, T&gt; Default for AnimatablePrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Hash + Eq + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for AnimationHierarchy&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Animation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for SamplerControlSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, T&gt; Default for AnimationControlSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, T&gt; Default for AnimationSet&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for JointPrefab","synthetic":false,"types":[]},{"text":"impl Default for SkinnablePrefab","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Default, T:&nbsp;Default&gt; Default for AnimationControlSystem&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Eq + Hash,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for SamplerInterpolationSystem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Channel: Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_assets"] = [{"text":"impl&lt;A&gt; Default for Cache&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for PrefabLoaderSystemDesc&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Prefab&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for ProgressCounter","synthetic":false,"types":[]},{"text":"impl Default for HotReloadBundle","synthetic":false,"types":[]},{"text":"impl Default for HotReloadStrategy","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Asset&gt; Default for AssetStorage&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Default&gt; Default for Processor&lt;A&gt;","synthetic":false,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl Default for Output","synthetic":false,"types":[]},{"text":"impl Default for AudioBundle","synthetic":false,"types":[]},{"text":"impl Default for AudioEmitter","synthetic":false,"types":[]},{"text":"impl Default for AudioListener","synthetic":false,"types":[]},{"text":"impl Default for AudioPrefab","synthetic":false,"types":[]},{"text":"impl Default for AudioSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for AudioSystem","synthetic":false,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Default for ArcBallControlBundle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for FlyControlTag","synthetic":false,"types":[]},{"text":"impl Default for ControlTagPrefab","synthetic":false,"types":[]},{"text":"impl Default for WindowFocus","synthetic":false,"types":[]},{"text":"impl Default for HideCursor","synthetic":false,"types":[]},{"text":"impl Default for ArcBallRotationSystem","synthetic":false,"types":[]},{"text":"impl Default for MouseFocusUpdateSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for CursorHideSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for CursorHideSystem","synthetic":false,"types":[]}];
implementors["amethyst_core"] = [{"text":"impl Default for FrameRateLimitStrategy","synthetic":false,"types":[]},{"text":"impl Default for FrameRateLimitConfig","synthetic":false,"types":[]},{"text":"impl Default for FrameLimiter","synthetic":false,"types":[]},{"text":"impl Default for Time","synthetic":false,"types":[]},{"text":"impl Default for Stopwatch","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for TransformBundle&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Transform","synthetic":false,"types":[]},{"text":"impl Default for TransformSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for Hidden","synthetic":false,"types":[]},{"text":"impl Default for HideHierarchySystemDesc","synthetic":false,"types":[]}];
implementors["amethyst_dynamic_ui"] = [{"text":"impl Default for Fonts","synthetic":false,"types":[]},{"text":"impl Default for Textures","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Default&gt; Default for DynamicUiBundle&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Default for Padding","synthetic":false,"types":[]},{"text":"impl Default for LinearLayoutData","synthetic":false,"types":[]},{"text":"impl Default for FlowDirection","synthetic":false,"types":[]},{"text":"impl Default for Spacing","synthetic":false,"types":[]},{"text":"impl Default for ItemAlignment","synthetic":false,"types":[]},{"text":"impl Default for LayoutVars","synthetic":false,"types":[]},{"text":"impl Default for Frame","synthetic":false,"types":[]},{"text":"impl Default for ExtraButtonData","synthetic":false,"types":[]},{"text":"impl Default for CalculatedDimensions","synthetic":false,"types":[]},{"text":"impl Default for Tinted","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Default for DynamicUiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Default for ResizeSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for ResizeSystem","synthetic":false,"types":[]},{"text":"impl Default for LimnSolver","synthetic":false,"types":[]},{"text":"impl Default for LayoutManager","synthetic":false,"types":[]},{"text":"impl Default for UiFmodSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for UiButtonTintSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for ModalData","synthetic":false,"types":[]},{"text":"impl Default for ImageButtonData","synthetic":false,"types":[]}];
implementors["amethyst_input"] = [{"text":"impl Default for StringBindings","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Default for Bindings&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Default for InputBundle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for InputHandler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_network"] = [{"text":"impl Default for NetworkSimulationTime","synthetic":false,"types":[]},{"text":"impl Default for LaminarSocketResource","synthetic":false,"types":[]},{"text":"impl Default for TcpNetworkResource","synthetic":false,"types":[]},{"text":"impl Default for UdpSocketResource","synthetic":false,"types":[]},{"text":"impl Default for TransportResource","synthetic":false,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl&lt;B:&nbsp;Backend, T:&nbsp;Base3DPassDef&gt; Default for DrawBase3DDesc&lt;B, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend, T:&nbsp;Base3DPassDef&gt; Default for DrawBase3DTransparentDesc&lt;B, T&gt;","synthetic":false,"types":[]},{"text":"impl Default for DrawDebugLinesDesc","synthetic":false,"types":[]},{"text":"impl Default for DrawFlat2DDesc","synthetic":false,"types":[]},{"text":"impl Default for DrawFlat2DTransparentDesc","synthetic":false,"types":[]},{"text":"impl Default for DrawSkyboxDesc","synthetic":false,"types":[]},{"text":"impl&lt;PK, SK, C&gt; Default for TwoLevelBatch&lt;PK, SK, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Eq + Hash,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PK, SK, D&gt; Default for OrderedTwoLevelBatch&lt;PK, SK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: PartialEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;SK: PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PK, D&gt; Default for OneLevelBatch&lt;PK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: Eq + Hash,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PK, D&gt; Default for OrderedOneLevelBatch&lt;PK, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PK: PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for Target","synthetic":false,"types":[]},{"text":"impl Default for ActiveCamera","synthetic":false,"types":[]},{"text":"impl Default for DebugLinesParams","synthetic":false,"types":[]},{"text":"impl Default for DebugLinesComponent","synthetic":false,"types":[]},{"text":"impl Default for DebugLines","synthetic":false,"types":[]},{"text":"impl Default for MaterialPrefab","synthetic":false,"types":[]},{"text":"impl Default for ImageFormat","synthetic":false,"types":[]},{"text":"impl Default for DirectionalLight","synthetic":false,"types":[]},{"text":"impl Default for PointLight","synthetic":false,"types":[]},{"text":"impl Default for SpotLight","synthetic":false,"types":[]},{"text":"impl Default for SunLight","synthetic":false,"types":[]},{"text":"impl Default for LightPrefab","synthetic":false,"types":[]},{"text":"impl Default for TextureOffset","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Backend&gt; Default for PipelineDescBuilder&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Default + Backend&gt; Default for PipelinesBuilder&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Default for RenderToWindow","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Base3DPassDef&gt; Default for RenderBase3D&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl Default for RenderFlat2D","synthetic":false,"types":[]},{"text":"impl Default for RenderDebugLines","synthetic":false,"types":[]},{"text":"impl Default for RenderSkybox","synthetic":false,"types":[]},{"text":"impl Default for AmbientColor","synthetic":false,"types":[]},{"text":"impl Default for Tint","synthetic":false,"types":[]},{"text":"impl Default for JointTransformsPrefab","synthetic":false,"types":[]},{"text":"impl Default for SpriteSheetLoadedSet","synthetic":false,"types":[]},{"text":"impl Default for SpriteRenderPrefab","synthetic":false,"types":[]},{"text":"impl Default for SpriteGrid","synthetic":false,"types":[]},{"text":"impl Default for SpriteVisibility","synthetic":false,"types":[]},{"text":"impl Default for SpriteVisibilitySortingSystem","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Default + Backend, V:&nbsp;Default + VertexDataBufferType, T:&nbsp;Default + 'static&gt; Default for DynamicVertexData&lt;B, V, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Default for MeshProcessorSystem&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Default for TextureProcessorSystem&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl Default for Transparent","synthetic":false,"types":[]},{"text":"impl Default for Visibility","synthetic":false,"types":[]},{"text":"impl Default for VisibilitySortingSystem","synthetic":false,"types":[]},{"text":"impl Default for BoundingSphere","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Default + Hash + Eq&gt; Default for LookupBuilder&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Default for ChangeDetection","synthetic":false,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl&lt;G, I&gt; Default for UiButtonBuilder&lt;G, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: WidgetId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for UiButtonActionRetrigger","synthetic":false,"types":[]},{"text":"impl Default for UiButtonSystemDesc","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;BindingTypes&gt; Default for DragWidgetSystemDesc&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Interactable","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + BindingTypes&gt; Default for UiMouseSystem&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for EventRetriggerSystemDesc&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Default for UiGlyphsSystemDesc&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Default for UiGlyphsSystem&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, I&gt; Default for UiLabelBuilder&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: WidgetId + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for UiTransformSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for RenderUi","synthetic":false,"types":[]},{"text":"impl Default for DrawUiDesc","synthetic":false,"types":[]},{"text":"impl&lt;G&gt; Default for UiTransformData&lt;G&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Default for UiFormat&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Default for ResizeSystemDesc","synthetic":false,"types":[]},{"text":"impl&lt;G&gt; Default for SelectionKeyboardSystemDesc&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send + Sync + 'static + PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;G, T&gt; Default for SelectionMouseSystemDesc&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send + Sync + 'static + PartialEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BindingTypes,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for CachedSelectionOrder","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;Default&gt; Default for CacheSelectionOrderSystem&lt;G&gt;","synthetic":false,"types":[]},{"text":"impl Default for UiSoundSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for TextEditingMouseSystemDesc","synthetic":false,"types":[]},{"text":"impl Default for TextEditingInputSystemDesc","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Widget, I:&nbsp;WidgetId&gt; Default for Widgets&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl Default for AutoFov","synthetic":false,"types":[]},{"text":"impl Default for AutoFovSystem","synthetic":false,"types":[]},{"text":"impl Default for FpsCounter","synthetic":false,"types":[]},{"text":"impl Default for FpsCounterBundle","synthetic":false,"types":[]},{"text":"impl Default for CameraOrthoWorldCoordinates","synthetic":false,"types":[]},{"text":"impl Default for CameraOrtho","synthetic":false,"types":[]},{"text":"impl Default for CameraNormalizeMode","synthetic":false,"types":[]},{"text":"impl Default for CameraOrthoSystem","synthetic":false,"types":[]},{"text":"impl&lt;V, R&gt; Default for BasicScenePrefab&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: PartialEq + Debug + Clone + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for Tag&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_window"] = [{"text":"impl Default for DisplayConfig","synthetic":false,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AbsDiffEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RelativeEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UlpsEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A:&nbsp;Array&lt;Item = u8&gt;&gt; Default for ArrayString&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Default for ArrayVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["backtrace"] = [{"text":"impl Default for Backtrace","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Default for Bytes","synthetic":false,"types":[]},{"text":"impl Default for BytesMut","synthetic":false,"types":[]}];
implementors["claxon"] = [{"text":"impl Default for FlacReaderOptions","synthetic":false,"types":[]}];
implementors["colored"] = [{"text":"impl Default for ShouldColorize","synthetic":false,"types":[]},{"text":"impl Default for ColoredString","synthetic":false,"types":[]}];
implementors["colorful"] = [{"text":"impl Default for Colorado","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Default for Hasher","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a&gt; Default for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Default for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'g, T&gt; Default for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; Default for SegQueue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Backoff","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Default for Compression","synthetic":false,"types":[]},{"text":"impl Default for SpecialOptions","synthetic":false,"types":[]},{"text":"impl Default for CompressionOptions","synthetic":false,"types":[]}];
implementors["env_logger"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Target","synthetic":false,"types":[]},{"text":"impl Default for WriteStyle","synthetic":false,"types":[]},{"text":"impl Default for TimestampPrecision","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Env&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["euclid"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Angle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Length&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Point2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Point3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Rect&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, Src, Dst&gt; Default for Scale&lt;T, Src, Dst&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for SideOffsets2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Size2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Size3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Transform2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero + One,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Transform3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero + One,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Translation2D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Src, Dst&gt; Default for Translation3D&lt;T, Src, Dst&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Zero,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Vector2D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U&gt; Default for Vector3D&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Default for UnknownUnit","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl Default for Backtrace","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default&gt; Default for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["fern"] = [{"text":"impl Default for Dispatch","synthetic":false,"types":[]},{"text":"impl Default for ColoredLevelConfig","synthetic":false,"types":[]}];
implementors["fluent_bundle"] = [{"text":"impl Default for FluentNumberStyle","synthetic":false,"types":[]},{"text":"impl Default for FluentNumberCurrencyDisplayStyle","synthetic":false,"types":[]},{"text":"impl Default for FluentNumberOptions","synthetic":false,"types":[]},{"text":"impl&lt;'source&gt; Default for DisplayableNode&lt;'source&gt;","synthetic":false,"types":[]}];
implementors["fnv"] = [{"text":"impl Default for FnvHasher","synthetic":false,"types":[]}];
implementors["font_kit"] = [{"text":"impl Default for Properties","synthetic":false,"types":[]},{"text":"impl Default for Style","synthetic":false,"types":[]},{"text":"impl Default for Weight","synthetic":false,"types":[]},{"text":"impl Default for Stretch","synthetic":false,"types":[]}];
implementors["freetype"] = [{"text":"impl&lt;T&gt; Default for __BindgenUnionField&lt;T&gt;","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Default for FxHasher","synthetic":false,"types":[]},{"text":"impl Default for FxHasher64","synthetic":false,"types":[]},{"text":"impl Default for FxHasher32","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Default, N&gt; Default for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Default for CommandBufferFlags","synthetic":false,"types":[]},{"text":"impl&lt;'a, B:&nbsp;Backend&gt; Default for CommandBufferInheritanceInfo&lt;'a, B&gt;","synthetic":false,"types":[]},{"text":"impl Default for Swizzle","synthetic":false,"types":[]},{"text":"impl Default for Properties","synthetic":false,"types":[]},{"text":"impl Default for ImageFeature","synthetic":false,"types":[]},{"text":"impl Default for BufferFeature","synthetic":false,"types":[]},{"text":"impl Default for Extent","synthetic":false,"types":[]},{"text":"impl Default for BakedStates","synthetic":false,"types":[]},{"text":"impl Default for DepthBias","synthetic":false,"types":[]},{"text":"impl Default for BlendDesc","synthetic":false,"types":[]},{"text":"impl Default for ColorMask","synthetic":false,"types":[]},{"text":"impl Default for ColorBlendDesc","synthetic":false,"types":[]},{"text":"impl Default for StencilFace","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Sided&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for StencilTest","synthetic":false,"types":[]},{"text":"impl Default for DepthStencilDesc","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Default for Specialization&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl Default for Limits","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl&lt;'a&gt; Default for Frame&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["gimli"] = [{"text":"impl Default for LineEncoding","synthetic":false,"types":[]},{"text":"impl Default for RunTimeEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]},{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugAddr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for BaseAddresses","synthetic":false,"types":[]},{"text":"impl Default for SectionBaseAddresses","synthetic":false,"types":[]},{"text":"impl Default for Augmentation","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for UninitializedUnwindContext&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for UnwindTableRow&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for CfaRule&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for Pointer","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for Dwarf&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for RangeIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'input, Endian:&nbsp;Default&gt; Default for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Endianity,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugAbbrev&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for Abbreviations","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLine&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLoc&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLocLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for LocationLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugRanges&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugRngLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for RangeLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugStrOffsets&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLineStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugInfo&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugTypes&lt;R&gt;","synthetic":false,"types":[]}];
implementors["glsl_layout"] = [{"text":"impl Default for boolean","synthetic":false,"types":[]},{"text":"impl Default for bvec2","synthetic":false,"types":[]},{"text":"impl Default for bvec3","synthetic":false,"types":[]},{"text":"impl Default for bvec4","synthetic":false,"types":[]},{"text":"impl Default for ivec2","synthetic":false,"types":[]},{"text":"impl Default for ivec3","synthetic":false,"types":[]},{"text":"impl Default for ivec4","synthetic":false,"types":[]},{"text":"impl Default for uvec2","synthetic":false,"types":[]},{"text":"impl Default for uvec3","synthetic":false,"types":[]},{"text":"impl Default for uvec4","synthetic":false,"types":[]},{"text":"impl Default for vec2","synthetic":false,"types":[]},{"text":"impl Default for vec3","synthetic":false,"types":[]},{"text":"impl Default for vec4","synthetic":false,"types":[]},{"text":"impl Default for dvec2","synthetic":false,"types":[]},{"text":"impl Default for dvec3","synthetic":false,"types":[]},{"text":"impl Default for dvec4","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + AsStd140&gt; Default for Element&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Align: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for bmat2x2","synthetic":false,"types":[]},{"text":"impl Default for bmat2x3","synthetic":false,"types":[]},{"text":"impl Default for bmat2x4","synthetic":false,"types":[]},{"text":"impl Default for bmat3x2","synthetic":false,"types":[]},{"text":"impl Default for bmat3x3","synthetic":false,"types":[]},{"text":"impl Default for bmat3x4","synthetic":false,"types":[]},{"text":"impl Default for bmat4x2","synthetic":false,"types":[]},{"text":"impl Default for bmat4x3","synthetic":false,"types":[]},{"text":"impl Default for bmat4x4","synthetic":false,"types":[]},{"text":"impl Default for imat2x2","synthetic":false,"types":[]},{"text":"impl Default for imat2x3","synthetic":false,"types":[]},{"text":"impl Default for imat2x4","synthetic":false,"types":[]},{"text":"impl Default for imat3x2","synthetic":false,"types":[]},{"text":"impl Default for imat3x3","synthetic":false,"types":[]},{"text":"impl Default for imat3x4","synthetic":false,"types":[]},{"text":"impl Default for imat4x2","synthetic":false,"types":[]},{"text":"impl Default for imat4x3","synthetic":false,"types":[]},{"text":"impl Default for imat4x4","synthetic":false,"types":[]},{"text":"impl Default for umat2x2","synthetic":false,"types":[]},{"text":"impl Default for umat2x3","synthetic":false,"types":[]},{"text":"impl Default for umat2x4","synthetic":false,"types":[]},{"text":"impl Default for umat3x2","synthetic":false,"types":[]},{"text":"impl Default for umat3x3","synthetic":false,"types":[]},{"text":"impl Default for umat3x4","synthetic":false,"types":[]},{"text":"impl Default for umat4x2","synthetic":false,"types":[]},{"text":"impl Default for umat4x3","synthetic":false,"types":[]},{"text":"impl Default for umat4x4","synthetic":false,"types":[]},{"text":"impl Default for mat2x2","synthetic":false,"types":[]},{"text":"impl Default for mat2x3","synthetic":false,"types":[]},{"text":"impl Default for mat2x4","synthetic":false,"types":[]},{"text":"impl Default for mat3x2","synthetic":false,"types":[]},{"text":"impl Default for mat3x3","synthetic":false,"types":[]},{"text":"impl Default for mat3x4","synthetic":false,"types":[]},{"text":"impl Default for mat4x2","synthetic":false,"types":[]},{"text":"impl Default for mat4x3","synthetic":false,"types":[]},{"text":"impl Default for mat4x4","synthetic":false,"types":[]},{"text":"impl Default for dmat2x2","synthetic":false,"types":[]},{"text":"impl Default for dmat2x3","synthetic":false,"types":[]},{"text":"impl Default for dmat2x4","synthetic":false,"types":[]},{"text":"impl Default for dmat3x2","synthetic":false,"types":[]},{"text":"impl Default for dmat3x3","synthetic":false,"types":[]},{"text":"impl Default for dmat3x4","synthetic":false,"types":[]},{"text":"impl Default for dmat4x2","synthetic":false,"types":[]},{"text":"impl Default for dmat4x3","synthetic":false,"types":[]},{"text":"impl Default for dmat4x4","synthetic":false,"types":[]}];
implementors["gltf_json"] = [{"text":"impl Default for Interpolation","synthetic":false,"types":[]},{"text":"impl Default for Asset","synthetic":false,"types":[]},{"text":"impl Default for Indices","synthetic":false,"types":[]},{"text":"impl Default for Sparse","synthetic":false,"types":[]},{"text":"impl Default for Values","synthetic":false,"types":[]},{"text":"impl Default for Accessor","synthetic":false,"types":[]},{"text":"impl Default for Animation","synthetic":false,"types":[]},{"text":"impl Default for Channel","synthetic":false,"types":[]},{"text":"impl Default for Target","synthetic":false,"types":[]},{"text":"impl Default for Sampler","synthetic":false,"types":[]},{"text":"impl Default for Asset","synthetic":false,"types":[]},{"text":"impl Default for Buffer","synthetic":false,"types":[]},{"text":"impl Default for View","synthetic":false,"types":[]},{"text":"impl Default for Camera","synthetic":false,"types":[]},{"text":"impl Default for Orthographic","synthetic":false,"types":[]},{"text":"impl Default for Perspective","synthetic":false,"types":[]},{"text":"impl Default for Image","synthetic":false,"types":[]},{"text":"impl Default for Material","synthetic":false,"types":[]},{"text":"impl Default for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Default for NormalTexture","synthetic":false,"types":[]},{"text":"impl Default for OcclusionTexture","synthetic":false,"types":[]},{"text":"impl Default for Mesh","synthetic":false,"types":[]},{"text":"impl Default for Primitive","synthetic":false,"types":[]},{"text":"impl Default for Root","synthetic":false,"types":[]},{"text":"impl Default for KhrLightsPunctual","synthetic":false,"types":[]},{"text":"impl Default for Node","synthetic":false,"types":[]},{"text":"impl Default for Spot","synthetic":false,"types":[]},{"text":"impl Default for Scene","synthetic":false,"types":[]},{"text":"impl Default for Skin","synthetic":false,"types":[]},{"text":"impl Default for Sampler","synthetic":false,"types":[]},{"text":"impl Default for Texture","synthetic":false,"types":[]},{"text":"impl Default for Info","synthetic":false,"types":[]},{"text":"impl Default for Void","synthetic":false,"types":[]},{"text":"impl Default for Material","synthetic":false,"types":[]},{"text":"impl Default for PbrMetallicRoughness","synthetic":false,"types":[]},{"text":"impl Default for EmissiveFactor","synthetic":false,"types":[]},{"text":"impl Default for AlphaCutoff","synthetic":false,"types":[]},{"text":"impl Default for AlphaMode","synthetic":false,"types":[]},{"text":"impl Default for PbrBaseColorFactor","synthetic":false,"types":[]},{"text":"impl Default for StrengthFactor","synthetic":false,"types":[]},{"text":"impl Default for Mode","synthetic":false,"types":[]},{"text":"impl Default for Path","synthetic":false,"types":[]},{"text":"impl Default for Root","synthetic":false,"types":[]},{"text":"impl Default for UnitQuaternion","synthetic":false,"types":[]},{"text":"impl Default for Sampler","synthetic":false,"types":[]},{"text":"impl Default for WrappingMode","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Checked&lt;T&gt;","synthetic":false,"types":[]}];
implementors["glyph_brush"] = [{"text":"impl Default for OwnedVariedSection","synthetic":false,"types":[]},{"text":"impl Default for OwnedSectionText","synthetic":false,"types":[]},{"text":"impl Default for VariedSection&lt;'static&gt;","synthetic":false,"types":[]},{"text":"impl Default for Section&lt;'static&gt;","synthetic":false,"types":[]}];
implementors["glyph_brush_layout"] = [{"text":"impl Default for Layout&lt;BuiltInLineBreaker&gt;","synthetic":false,"types":[]},{"text":"impl Default for FontId","synthetic":false,"types":[]},{"text":"impl Default for BuiltInLineBreaker","synthetic":false,"types":[]},{"text":"impl Default for SectionGeometry","synthetic":false,"types":[]},{"text":"impl Default for SectionText&lt;'static&gt;","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S&gt; Default for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Default for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["hibitset"] = [{"text":"impl Default for AtomicBitSet","synthetic":false,"types":[]},{"text":"impl Default for BitSet","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Default for PixelDensity","synthetic":false,"types":[]},{"text":"impl Default for CompressionType","synthetic":false,"types":[]},{"text":"impl Default for FilterType","synthetic":false,"types":[]}];
implementors["intl_memoizer"] = [{"text":"impl Default for IntlMemoizer","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["laminar"] = [{"text":"impl Default for Config","synthetic":false,"types":[]},{"text":"impl Default for LinkConditioner","synthetic":false,"types":[]},{"text":"impl Default for OrderingGuarantee","synthetic":false,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K:&nbsp;Hash + Eq, V, S:&nbsp;BuildHasher + Default&gt; Default for LinkedHashMap&lt;K, V, S&gt;","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;RawMutex, T:&nbsp;?Sized + Default&gt; Default for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex, G:&nbsp;GetThreadId, T:&nbsp;?Sized + Default&gt; Default for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock, T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;R, T&gt;","synthetic":false,"types":[]}];
implementors["lyon_geom"] = [{"text":"impl Default for ArcFlags","synthetic":false,"types":[]}];
implementors["lyon_path"] = [{"text":"impl Default for Path","synthetic":false,"types":[]}];
implementors["memmap"] = [{"text":"impl Default for MmapOptions","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Default for CompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for DecompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for InflateState","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Default for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Default for Dqblk","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for AlgSetKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for FsFlags","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Default for BigInt","synthetic":false,"types":[]},{"text":"impl Default for BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["object"] = [{"text":"impl Default for Endianness","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]},{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for Bytes&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for StringTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for SectionTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;Default + FileHeader&gt; Default for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf::SectionHeader: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;FileHeader&gt; Default for SymbolTable&lt;'data, Elf&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, Mach:&nbsp;MachHeader&gt; Default for SymbolTable&lt;'data, Mach&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, 'file&gt; Default for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for CompressionHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for CompressionHeader64&lt;E&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Default + Float&gt; Default for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + Float&gt; Default for NotNan&lt;T&gt;","synthetic":false,"types":[]}];
implementors["palette"] = [{"text":"impl&lt;C:&nbsp;Default, T:&nbsp;Float&gt; Default for PreAlpha&lt;C, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Default, T:&nbsp;Component&gt; Default for Alpha&lt;C, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Hsl&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Hsv&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Hwb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Default for Lab&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Default for Lch&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Luma&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: LumaStandard,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Rgb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbStandard,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Default for Xyz&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; Default for Yxy&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + Float&gt; Default for LabHue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + Float&gt; Default for RgbHue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; Default for Color&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Float + Component,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Default for Condvar","synthetic":false,"types":[]},{"text":"impl Default for Once","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Default for UnparkResult","synthetic":false,"types":[]},{"text":"impl Default for SpinWait","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Default for Limits","synthetic":false,"types":[]},{"text":"impl Default for Info","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Default for vec128_storage","synthetic":false,"types":[]},{"text":"impl Default for vec256_storage","synthetic":false,"types":[]},{"text":"impl Default for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Default for TokenStream","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Default for EntropyRng","synthetic":false,"types":[]},{"text":"impl Default for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Default for OsRng","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Default for ThreadPoolBuilder","synthetic":false,"types":[]},{"text":"impl Default for Configuration","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Default for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Default for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Default for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]},{"text":"impl Default for Image","synthetic":false,"types":[]}];
implementors["rendy_command"] = [{"text":"impl Default for PrimaryLevel","synthetic":false,"types":[]},{"text":"impl Default for SecondaryLevel","synthetic":false,"types":[]},{"text":"impl Default for IndividualReset","synthetic":false,"types":[]},{"text":"impl Default for NoIndividualReset","synthetic":false,"types":[]},{"text":"impl Default for InitialState","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default, P:&nbsp;Default&gt; Default for RecordingState&lt;U, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default, P:&nbsp;Default&gt; Default for ExecutableState&lt;U, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Default&gt; Default for PendingState&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Default for InvalidState","synthetic":false,"types":[]},{"text":"impl Default for OneShot","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Default&gt; Default for MultiShot&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Default for SimultaneousUse","synthetic":false,"types":[]},{"text":"impl Default for NoSimultaneousUse","synthetic":false,"types":[]},{"text":"impl Default for RenderPassContinue","synthetic":false,"types":[]},{"text":"impl Default for OutsideRenderPass","synthetic":false,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;D, H, Q&gt; Default for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for OneGraphicsQueue","synthetic":false,"types":[]},{"text":"impl Default for BasicHeapsConfigure","synthetic":false,"types":[]},{"text":"impl Default for BasicDevicesConfigure","synthetic":false,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl&lt;T, I, P&gt; Default for Cirque&lt;T, I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, I, P&gt; Default for DependentCirque&lt;T, I, P&gt;","synthetic":false,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl&lt;B:&nbsp;Backend, T:&nbsp;?Sized&gt; Default for SubpassBuilder&lt;B, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend, T:&nbsp;?Sized&gt; Default for RenderPassNodeBuilder&lt;B, T&gt;","synthetic":false,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl&lt;T&gt; Default for Terminal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for ResourceTracker&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Default for SamplerCache&lt;B&gt;","synthetic":false,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl&lt;B:&nbsp;Backend&gt; Default for ShaderSet&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl Default for SpecConstantSet","synthetic":false,"types":[]},{"text":"impl Default for ShaderSetBuilder","synthetic":false,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl Default for Repr","synthetic":false,"types":[]},{"text":"impl Default for TextureKind","synthetic":false,"types":[]},{"text":"impl Default for ImageTextureConfig","synthetic":false,"types":[]},{"text":"impl Default for Unorm","synthetic":false,"types":[]},{"text":"impl Default for Inorm","synthetic":false,"types":[]},{"text":"impl Default for Uint","synthetic":false,"types":[]},{"text":"impl Default for Int","synthetic":false,"types":[]},{"text":"impl Default for Uscaled","synthetic":false,"types":[]},{"text":"impl Default for Iscaled","synthetic":false,"types":[]},{"text":"impl Default for Srgb","synthetic":false,"types":[]},{"text":"impl Default for Float","synthetic":false,"types":[]},{"text":"impl Default for _8","synthetic":false,"types":[]},{"text":"impl Default for _16","synthetic":false,"types":[]},{"text":"impl Default for _32","synthetic":false,"types":[]},{"text":"impl Default for _64","synthetic":false,"types":[]},{"text":"impl Default for R","synthetic":false,"types":[]},{"text":"impl Default for Rg","synthetic":false,"types":[]},{"text":"impl Default for Rgb","synthetic":false,"types":[]},{"text":"impl Default for Rgba","synthetic":false,"types":[]},{"text":"impl Default for Bgr","synthetic":false,"types":[]},{"text":"impl Default for Bgra","synthetic":false,"types":[]},{"text":"impl Default for Abgr","synthetic":false,"types":[]},{"text":"impl&lt;C, S, T&gt; Default for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: PixelRepr&lt;S, T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rendy_util"] = [{"text":"impl Default for SetLayout","synthetic":false,"types":[]}];
implementors["ron"] = [{"text":"impl Default for PrettyConfig","synthetic":false,"types":[]},{"text":"impl Default for Map","synthetic":false,"types":[]},{"text":"impl Default for Extensions","synthetic":false,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Default for FxHasher","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl&lt;N:&nbsp;Default&gt; Default for Point&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Default&gt; Default for Vector&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Default for Line","synthetic":false,"types":[]},{"text":"impl Default for Curve","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Default&gt; Default for Rect&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Default for CacheBuilder","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Default for IgnoredAny","synthetic":false,"types":[]}];
implementors["serde_bytes"] = [{"text":"impl&lt;'a&gt; Default for &amp;'a Bytes","synthetic":false,"types":[]},{"text":"impl Default for Box&lt;Bytes&gt;","synthetic":false,"types":[]},{"text":"impl Default for ByteBuf","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Value","synthetic":false,"types":[]},{"text":"impl Default for Box&lt;RawValue&gt;","synthetic":false,"types":[]}];
implementors["shred"] = [{"text":"impl&lt;T&gt; Default for TrustCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Default for DispatcherBuilder&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for MetaTable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for StaticAccessor&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for World","synthetic":false,"types":[]}];
implementors["shrev"] = [{"text":"impl&lt;E&gt; Default for EventChannel&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Event,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["siphasher"] = [{"text":"impl Default for SipHasher13","synthetic":false,"types":[]},{"text":"impl Default for SipHasher24","synthetic":false,"types":[]},{"text":"impl Default for SipHasher","synthetic":false,"types":[]},{"text":"impl Default for Hash128","synthetic":false,"types":[]},{"text":"impl Default for SipHasher13","synthetic":false,"types":[]},{"text":"impl Default for SipHasher24","synthetic":false,"types":[]},{"text":"impl Default for SipHasher","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Default for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["slice_deque"] = [{"text":"impl&lt;T&gt; Default for Buffer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for SliceDeque&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Default for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Default for ModifiersState","synthetic":false,"types":[]}];
implementors["specs"] = [{"text":"impl&lt;T&gt; Default for ChangeSet&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C, T&gt; Default for FlaggedStorage&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: TryDefault,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for BTreeStorage&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for HashMapStorage&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for DenseVecStorage&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for NullStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for VecStorage&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for DefaultVecStorage&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Component&gt; Default for MaskedStorage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Storage: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for EntitiesRes","synthetic":false,"types":[]},{"text":"impl Default for LazyUpdate","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Default for Underscore","synthetic":false,"types":[]},{"text":"impl Default for Apostrophe","synthetic":false,"types":[]},{"text":"impl Default for Add","synthetic":false,"types":[]},{"text":"impl Default for AddEq","synthetic":false,"types":[]},{"text":"impl Default for And","synthetic":false,"types":[]},{"text":"impl Default for AndAnd","synthetic":false,"types":[]},{"text":"impl Default for AndEq","synthetic":false,"types":[]},{"text":"impl Default for At","synthetic":false,"types":[]},{"text":"impl Default for Bang","synthetic":false,"types":[]},{"text":"impl Default for Caret","synthetic":false,"types":[]},{"text":"impl Default for CaretEq","synthetic":false,"types":[]},{"text":"impl Default for Colon","synthetic":false,"types":[]},{"text":"impl Default for Colon2","synthetic":false,"types":[]},{"text":"impl Default for Comma","synthetic":false,"types":[]},{"text":"impl Default for Div","synthetic":false,"types":[]},{"text":"impl Default for DivEq","synthetic":false,"types":[]},{"text":"impl Default for Dollar","synthetic":false,"types":[]},{"text":"impl Default for Dot","synthetic":false,"types":[]},{"text":"impl Default for Dot2","synthetic":false,"types":[]},{"text":"impl Default for Dot3","synthetic":false,"types":[]},{"text":"impl Default for DotDotEq","synthetic":false,"types":[]},{"text":"impl Default for Eq","synthetic":false,"types":[]},{"text":"impl Default for EqEq","synthetic":false,"types":[]},{"text":"impl Default for Ge","synthetic":false,"types":[]},{"text":"impl Default for Gt","synthetic":false,"types":[]},{"text":"impl Default for Le","synthetic":false,"types":[]},{"text":"impl Default for Lt","synthetic":false,"types":[]},{"text":"impl Default for MulEq","synthetic":false,"types":[]},{"text":"impl Default for Ne","synthetic":false,"types":[]},{"text":"impl Default for Or","synthetic":false,"types":[]},{"text":"impl Default for OrEq","synthetic":false,"types":[]},{"text":"impl Default for OrOr","synthetic":false,"types":[]},{"text":"impl Default for Pound","synthetic":false,"types":[]},{"text":"impl Default for Question","synthetic":false,"types":[]},{"text":"impl Default for RArrow","synthetic":false,"types":[]},{"text":"impl Default for LArrow","synthetic":false,"types":[]},{"text":"impl Default for Rem","synthetic":false,"types":[]},{"text":"impl Default for RemEq","synthetic":false,"types":[]},{"text":"impl Default for FatArrow","synthetic":false,"types":[]},{"text":"impl Default for Semi","synthetic":false,"types":[]},{"text":"impl Default for Shl","synthetic":false,"types":[]},{"text":"impl Default for ShlEq","synthetic":false,"types":[]},{"text":"impl Default for Shr","synthetic":false,"types":[]},{"text":"impl Default for ShrEq","synthetic":false,"types":[]},{"text":"impl Default for Star","synthetic":false,"types":[]},{"text":"impl Default for Sub","synthetic":false,"types":[]},{"text":"impl Default for SubEq","synthetic":false,"types":[]},{"text":"impl Default for Brace","synthetic":false,"types":[]},{"text":"impl Default for Bracket","synthetic":false,"types":[]},{"text":"impl Default for Paren","synthetic":false,"types":[]},{"text":"impl Default for Group","synthetic":false,"types":[]},{"text":"impl Default for As","synthetic":false,"types":[]},{"text":"impl Default for Async","synthetic":false,"types":[]},{"text":"impl Default for Auto","synthetic":false,"types":[]},{"text":"impl Default for Box","synthetic":false,"types":[]},{"text":"impl Default for Break","synthetic":false,"types":[]},{"text":"impl Default for CapSelf","synthetic":false,"types":[]},{"text":"impl Default for Catch","synthetic":false,"types":[]},{"text":"impl Default for Const","synthetic":false,"types":[]},{"text":"impl Default for Continue","synthetic":false,"types":[]},{"text":"impl Default for Crate","synthetic":false,"types":[]},{"text":"impl Default for Default","synthetic":false,"types":[]},{"text":"impl Default for Do","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for Else","synthetic":false,"types":[]},{"text":"impl Default for Enum","synthetic":false,"types":[]},{"text":"impl Default for Extern","synthetic":false,"types":[]},{"text":"impl Default for Fn","synthetic":false,"types":[]},{"text":"impl Default for For","synthetic":false,"types":[]},{"text":"impl Default for If","synthetic":false,"types":[]},{"text":"impl Default for Impl","synthetic":false,"types":[]},{"text":"impl Default for In","synthetic":false,"types":[]},{"text":"impl Default for Let","synthetic":false,"types":[]},{"text":"impl Default for Loop","synthetic":false,"types":[]},{"text":"impl Default for Macro","synthetic":false,"types":[]},{"text":"impl Default for Match","synthetic":false,"types":[]},{"text":"impl Default for Mod","synthetic":false,"types":[]},{"text":"impl Default for Move","synthetic":false,"types":[]},{"text":"impl Default for Mut","synthetic":false,"types":[]},{"text":"impl Default for Pub","synthetic":false,"types":[]},{"text":"impl Default for Ref","synthetic":false,"types":[]},{"text":"impl Default for Return","synthetic":false,"types":[]},{"text":"impl Default for Self_","synthetic":false,"types":[]},{"text":"impl Default for Static","synthetic":false,"types":[]},{"text":"impl Default for Struct","synthetic":false,"types":[]},{"text":"impl Default for Super","synthetic":false,"types":[]},{"text":"impl Default for Trait","synthetic":false,"types":[]},{"text":"impl Default for Type","synthetic":false,"types":[]},{"text":"impl Default for Union","synthetic":false,"types":[]},{"text":"impl Default for Unsafe","synthetic":false,"types":[]},{"text":"impl Default for Use","synthetic":false,"types":[]},{"text":"impl Default for Where","synthetic":false,"types":[]},{"text":"impl Default for While","synthetic":false,"types":[]},{"text":"impl Default for Yield","synthetic":false,"types":[]},{"text":"impl Default for Generics","synthetic":false,"types":[]},{"text":"impl Default for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Default for PathArguments","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Default for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Default for ColorSpec","synthetic":false,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Default for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Default for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Default for Limits","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Default + Array&gt; Default for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array + Default&gt; Default for TinyVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Default for XxHash64","synthetic":false,"types":[]},{"text":"impl Default for XxHash32","synthetic":false,"types":[]},{"text":"impl Default for RandomXxHashBuilder64","synthetic":false,"types":[]},{"text":"impl Default for RandomXxHashBuilder32","synthetic":false,"types":[]}];
implementors["type_map"] = [{"text":"impl Default for TypeMap","synthetic":false,"types":[]},{"text":"impl Default for TypeMap","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Default for B0","synthetic":false,"types":[]},{"text":"impl Default for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default + Unsigned + NonZero&gt; Default for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default + Unsigned + NonZero&gt; Default for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Default for Z0","synthetic":false,"types":[]},{"text":"impl Default for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default, B:&nbsp;Default&gt; Default for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Default for Greater","synthetic":false,"types":[]},{"text":"impl Default for Less","synthetic":false,"types":[]},{"text":"impl Default for Equal","synthetic":false,"types":[]}];
implementors["unic_langid_impl"] = [{"text":"impl Default for LanguageIdentifier","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Default for ModifiersState","synthetic":false,"types":[]},{"text":"impl Default for WindowType","synthetic":false,"types":[]},{"text":"impl Default for MouseCursor","synthetic":false,"types":[]},{"text":"impl Default for WindowAttributes","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Default for ClientMessageData","synthetic":false,"types":[]},{"text":"impl Default for XIAddMasterInfo","synthetic":false,"types":[]},{"text":"impl Default for XIRemoveMasterInfo","synthetic":false,"types":[]},{"text":"impl Default for XIAttachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Default for XIDetachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Default for XIAnyHierarchyChangeInfo","synthetic":false,"types":[]},{"text":"impl Default for XIModifierState","synthetic":false,"types":[]},{"text":"impl Default for XIButtonState","synthetic":false,"types":[]},{"text":"impl Default for XIValuatorState","synthetic":false,"types":[]},{"text":"impl Default for XIEventMask","synthetic":false,"types":[]},{"text":"impl Default for XIAnyClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XIButtonClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XIKeyClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XIValuatorClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XIScrollClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XITouchClassInfo","synthetic":false,"types":[]},{"text":"impl Default for XIDeviceInfo","synthetic":false,"types":[]},{"text":"impl Default for XIGrabModifiers","synthetic":false,"types":[]},{"text":"impl Default for XIBarrierReleasePointerInfo","synthetic":false,"types":[]},{"text":"impl Default for XIEvent","synthetic":false,"types":[]},{"text":"impl Default for XIHierarchyInfo","synthetic":false,"types":[]},{"text":"impl Default for XIHierarchyEvent","synthetic":false,"types":[]},{"text":"impl Default for XIDeviceChangedEvent","synthetic":false,"types":[]},{"text":"impl Default for XIDeviceEvent","synthetic":false,"types":[]},{"text":"impl Default for XIRawEvent","synthetic":false,"types":[]},{"text":"impl Default for XIEnterEvent","synthetic":false,"types":[]},{"text":"impl Default for XIPropertyEvent","synthetic":false,"types":[]},{"text":"impl Default for XITouchOwnershipEvent","synthetic":false,"types":[]},{"text":"impl Default for XIBarrierEvent","synthetic":false,"types":[]}];
implementors["xi_unicode"] = [{"text":"impl Default for LineBreakLeafIter","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl Default for ParserConfig","synthetic":false,"types":[]},{"text":"impl Default for EmitterConfig","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()