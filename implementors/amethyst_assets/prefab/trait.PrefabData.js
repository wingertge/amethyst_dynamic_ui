(function() {var implementors = {};
implementors["amethyst_animation"] = [{"text":"impl&lt;'a, T&gt; PrefabData&lt;'a&gt; for AnimationPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, I, T&gt; PrefabData&lt;'a&gt; for AnimationSetPrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Hash + Eq + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; PrefabData&lt;'a&gt; for AnimationHierarchyPrefab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pfd, I, T&gt; PrefabData&lt;'pfd&gt; for AnimatablePrefab&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Primitive: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Hash + Eq + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pfd, T&gt; PrefabData&lt;'pfd&gt; for RestState&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AnimationSampling + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for JointPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for SkinPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'pfd&gt; PrefabData&lt;'pfd&gt; for SkinnablePrefab","synthetic":false,"types":[]}];
implementors["amethyst_audio"] = [{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for AudioPrefab","synthetic":false,"types":[]}];
implementors["amethyst_controls"] = [{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for ControlTagPrefab","synthetic":false,"types":[]}];
implementors["amethyst_dynamic_ui"] = [{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for ExtraButtonData","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiCachedImage","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiTextPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiCachedText","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for FontFamilyPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for HtmlTextData","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for LayoutIdentifier","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for Tinted","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for DynamicLayout","synthetic":false,"types":[]}];
implementors["amethyst_rendy"] = [{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for CameraPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for ActiveCameraPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; PrefabData&lt;'a&gt; for MeshPrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for MaterialPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for TexturePrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; PrefabData&lt;'a&gt; for GraphicsPrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pfd&gt; PrefabData&lt;'pfd&gt; for Light","synthetic":false,"types":[]},{"text":"impl&lt;'pfd&gt; PrefabData&lt;'pfd&gt; for LightPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for AmbientColor","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; PrefabData&lt;'a&gt; for ShapePrefab&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for JointTransformsPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for SpriteSheetPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for SpriteRenderPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for SpriteScenePrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for Transparent","synthetic":false,"types":[]}];
implementors["amethyst_ui"] = [{"text":"impl&lt;'a, G&gt; PrefabData&lt;'a&gt; for UiTransformData&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiTextData","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiImagePrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PrefabData&lt;'a&gt; for UiImageLoadPrefab","synthetic":false,"types":[]},{"text":"impl&lt;'a, W&gt; PrefabData&lt;'a&gt; for UiButtonData&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: WidgetId,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["amethyst_utils"] = [{"text":"impl&lt;'pfd&gt; PrefabData&lt;'pfd&gt; for AutoFov","synthetic":false,"types":[]},{"text":"impl&lt;'pfd&gt; PrefabData&lt;'pfd&gt; for CameraOrtho","synthetic":false,"types":[]},{"text":"impl&lt;'pfd, I&gt; PrefabData&lt;'pfd&gt; for Removal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Debug + Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pfd, V, R&gt; PrefabData&lt;'pfd&gt; for BasicScenePrefab&lt;V, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: PartialEq + Debug + Clone + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: FromShape + Into&lt;MeshBuilder&lt;'static&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pfd, T&gt; PrefabData&lt;'pfd&gt; for Tag&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()