(function() {var implementors = {};
implementors["palette"] = [{"text":"impl&lt;C, T&gt; ApproxEq for PreAlpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ApproxEq&lt;Epsilon = T::Epsilon&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ApproxEq + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ApproxEq for Range&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ApproxEq + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C, T&gt; ApproxEq for Alpha&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ApproxEq&lt;Epsilon = T::Epsilon&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Hsl&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Hsv&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Hwb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Luma&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: LumaStandard,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Rgb&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbStandard,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; ApproxEq for Xyz&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; ApproxEq for Yxy&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; ApproxEq for Lab&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Wp, T&gt; ApproxEq for Lch&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Component + Float + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Copy + Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: WhitePoint,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float + ApproxEq&gt; ApproxEq for LabHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ApproxEq&gt;::Epsilon: Float,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float + ApproxEq&gt; ApproxEq for RgbHue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ApproxEq&gt;::Epsilon: Float,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; ApproxEq for Color&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Float + Component + ApproxEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Epsilon: Float,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RgbSpace,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()